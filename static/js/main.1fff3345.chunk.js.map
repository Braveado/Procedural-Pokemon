{"version":3,"sources":["context/TeamBuilderContext.js","assets/logo.png","components/Sidebar.js","components/Footer.js","containers/Home.js","containers/Format.js","components/pokemon/PokemonType.js","components/pokemon/PokemonStats.js","components/pokemon/PokemonSprite.js","components/pokemon/Pokemon.js","components/pokemon/PokemonOptions.js","components/moves/MoveCategory.js","components/moves/Move.js","components/pokemon/SelectedPokemon.js","components/moves/Moveset.js","components/moves/MovesetOptions.js","components/abilities/Ability.js","components/abilities/AbilityOptions.js","components/items/Item.js","components/items/ItemOptions.js","containers/TeamBuilder.js","containers/About.js","components/Tooltips.js","App.js","reportWebVitals.js","index.js"],"names":["TeamBuilderContext","React","createContext","Sidebar","sectionsCompleted","location","useLocation","className","to","src","logo","alt","width","style","minWidth","exact","activeClassName","pathname","smooth","Object","values","every","val","pokemons","movesets","moves","abilities","items","Footer","braveado","href","target","rel","pokeapi","Home","useEffect","document","title","showdown","id","Format","PokemonType","type","getColor","PokemonStats","stats","nature","getStatName","stat","getStatColor","getStatWidth","first","total","map","s","i","increased","name","decreased","toString","base_stat","marginTop","length","calculated_stat","ev","iv","PokemonSprite","pokemon","assign","opacity","onClick","is_legendary","is_mythical","shiny","sprites","front_default","front_shiny","height","e","stopPropagation","species","replace","l","toUpperCase","Pokemon","context","useContext","selectPokemon","selected","level","types","t","gender","getGenders","weight","PokemonOptions","options","selectionsMade","selectionsNeeded","p","MoveCategory","category","Move","move","moveset","formattedEffect","effect_entries","effect","effect_chance","meta","crit_rate","priority","concat","formatEffect","find","language","short_effect","selectMove","damage_class","pp","power","accuracy","SelectedPokemon","assignable","selectedPokemon","pokemonOptions","filter","assignedPokemon","ability","item","assignPokemon","Moveset","index","m","MovesetOptions","sm","forEach","selectedMoves","Ability","AbilityOptions","a","Item","split","includes","join","default","ItemOptions","it","TeamBuilder","loading","randomRolls","movesetOptions","abilityOptions","itemOptions","generating","generateOptions","clearChoices","exportTeam","generationProgress","About","Tooltips","ReactTooltip","rebuild","delayShow","getContent","dataTip","data","toLowerCase","tooltipData","push","td","dataArray","d","header","content","c","formatTooltipData","App","apiUrl","itemCount","itemOffset","useState","setLoading","pokemonList","setPokemonList","moveList","setMoveList","abilityList","setAbilityList","itemList","setItemList","typeList","setTypeList","natureList","setNatureList","setGenerating","generationStep","setGenerationStep","setPokemonOptions","setMovesetOptions","setAbilityOptions","setItemOptions","movesetsPerType","usableTypes","reverseOptions","optionsData","setOptionsData","pokemonFilter","pokemonAllow","moveFilter","moveAllow","moveStatusLimit","abilityFilter","abilityAllow","itemFilter","itemAllow","chargeMoves","bindMoves","drainMoves","terrainMoves","barrierMoves","orbMoves","punchMoves","multistrikeMoves","recoilMoves","biteMoves","pulseMoves","soundMoves","healMoves","contactMoves","consumableItemMoves","badItemMoves","badAbilityMoves","terrainAbilities","orbAbilities","consumableItemAbilities","consumableItems","plateItems","memoryItems","setSelectionsMade","setSectionsCompleted","cancel","axios","get","pokemonResults","moveResults","abilityResults","itemResults","results","apply","typeResults","natureResults","fetchData","shinyIndex","Math","round","random","getNewPokemon","url","gender_rate","has_gender_differences","floor","increased_stat","decreased_stat","getTotalStats","currentPokemons","newPokemon","finalPokemon","initialPokemon","evolution_chain","evolutions","evoChain","evoData","chain","numberOfEvolutions","nextSpecies","lastSpecies","evolves_to","hasOwnProperty","finalEvolution","Array","isArray","finalSpecies","varieties","v","FindKeywords","checkDuplicatedName","getPokemonOptions","getPokemonUsability","useCallback","getRandomPokemonType","exclude","getNewMoveset","newMoveset","status","statusMoves","usable","combo","getMovesetOptions","msPerType","msInType","ms","uTypes","getPokemonTypeUsability","getMovesetTypeUsability","getTypeFromEffect","keyword","getMovesetTypeUsabilityForItems","currentItems","itemsOfType","ci","mt","getSpecificOptionsUsabilityForItems","maxOptions","mo","getMoveMechanicUsability","mechanic","exactMoves","moveNames","getAbilityMechanicUsability","exactAbilities","abilityNames","getReverseOption","getNewAbility","currentAbilities","newAbility","getAbilityOptions","rOptions","opt","itemType","getNewItem","newItem","getItemOptions","setToast","success","checkSectionCompleted","string","sCompleted","change","warning","pSelected","msAssigned","aAssigned","iAssigned","mSelected","mSelectedAmount","msSelected","getStatDisplay","currentObjects","newObjectName","co","separator","allow","found","some","capitalizeWords","text","word","substring","upperCaseWords","toast","custom","dismiss","visible","error","Provider","value","msOptions","basename","path","exportText","slice","navigator","clipboard","textArea","createElement","body","appendChild","focus","select","execCommand","err","removeChild","fallbackCopyTextToClipboard","writeText","then","copyTextToClipboard","position","reverseOrder","gutter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1fff3345.chunk.js","sourcesContent":["import React from 'react';\r\n \r\nconst TeamBuilderContext = React.createContext(null);\r\n \r\nexport { TeamBuilderContext };","export default __webpack_public_path__ + \"static/media/logo.1e1593df.png\";","import React from 'react'\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport logo from '../assets/logo.png';\r\nimport { FaCheck, FaCopy } from \"react-icons/fa\";\r\n\r\nexport default function Sidebar({ sectionsCompleted }) {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className=\"min-w-max h-screen sticky top-0 bg-white\">\r\n            <div className=\"w-48 flex justify-center items-center py-8\">\r\n                <Link to='/'>\r\n                    <img src={logo} alt=\"logo\" width=\"160px\" style={{minWidth: '160px'}} />\r\n                </Link> \r\n            </div>\r\n            <div className=\"flex flex-col w-full justify-start items-center\">\r\n                <NavLink exact to='/'\r\n                    className=\"inline-flex items-center justify-left text-lg w-full pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                    activeClassName=\"bg-gray-300 border-gray-600\">\r\n                    <p>Home</p>\r\n                </NavLink>\r\n                <div className=\"flex flex-col items-left justify-center w-full\">\r\n                    <NavLink to='/format'\r\n                        className=\"inline-flex items-center justify-left text-lg w-full pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                        activeClassName=\"bg-gray-300 border-gray-600\">\r\n                        <p>Format</p>\r\n                    </NavLink>\r\n                    {location.pathname === \"/format\" ? <div className=\"flex flex-col\">\r\n                        <HashLink smooth to=\"/format#basics\"\r\n                            className=\"w-full pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Basics</p>\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/format#pokemon\"\r\n                            className=\"w-full pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Pokemon</p>\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/format#movesets\"\r\n                            className=\"w-full pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Movesets</p>\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/format#abilities\"\r\n                            className=\"w-full pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Abilities</p>\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/format#items\"\r\n                            className=\"w-full pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Items</p>\r\n                        </HashLink>\r\n                    </div> : null}\r\n                </div>\r\n                <div className=\"flex flex-col items-left justify-center w-full\">\r\n                    <NavLink to='/builder'\r\n                        className=\"w-full text-lg pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                        activeClassName=\"bg-gray-300 border-gray-600\">\r\n                        <p>Team Builder</p>\r\n                    </NavLink>\r\n                    {location.pathname === \"/builder\" ? <div className=\"flex flex-col\">\r\n                        <HashLink smooth to=\"/builder#controls\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Controls</p>\r\n                            {Object.values(sectionsCompleted).every(val => val) ? <FaCopy className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#pokemon\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Pokemon</p>\r\n                            {sectionsCompleted.pokemons ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#movesets\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Movesets</p>\r\n                            {sectionsCompleted.movesets && sectionsCompleted.moves ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#abilities\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Abilities</p>\r\n                            {sectionsCompleted.abilities ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#items\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Items</p>\r\n                            {sectionsCompleted.items ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                    </div> : null}\r\n                </div>                \r\n                <NavLink to='/about'\r\n                    className=\"inline-flex items-center justify-left text-lg w-full pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                    activeClassName=\"bg-gray-300 border-gray-600\">\r\n                    <p>About</p>\r\n                </NavLink>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    var braveado = <a href=\"https://github.com/Braveado\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">Nelson Martínez</a>\r\n    var pokeapi = <a href=\"https://pokeapi.co/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">PokéAPI</a>\r\n    return (\r\n        <div className=\"mt-auto flex flex-wrap justify-center items-center w-full bg-white p-4\">\r\n            <div className=\"text-center\">Created by&nbsp;{braveado}&nbsp;and powered by&nbsp;{pokeapi}.&nbsp;</div>\r\n            <div className=\"text-center\">Pokémon and Pokémon character names are trademarks of Nintendo.</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from '../assets/logo.png';\r\n\r\nexport default function Home() {\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'Procedural Pokemon';\r\n    }, []);\r\n  \r\n    var showdown = <a href=\"https://pokemonshowdown.com/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">Pokémon Showdown</a>\r\n    \r\n    return (\r\n        <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">  \r\n            <div className=\"flex flex-col gap-4 items-center\">\r\n                <img src={logo} alt=\"logo\" />\r\n                {/* <p className=\"text-lg\">Procedurally generated pokemon teams</p> */}\r\n            </div>\r\n            <div id=\"\" className=\"flex flex-col w-full\">                \r\n                <div className=\"flex justify-center items-center gap-4 text-center\">                    \r\n                    <p className=\"text-xl\">Procedurally generated pokemon teams to use in &nbsp;{showdown}.</p>                    \r\n                    {/* <p className=\"text-base text-gray-300\">Process for generating pokemon options.</p> */}\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-center gap-4 p-4 w-full\">\r\n                    <div className=\"flex flex-wrap justify-center items-center gap-4\">\r\n                        <div className=\"flex flex-col items-center justify-center gap-4 p-4 rounded-md bg-white border-2 border-gray-200 w-96\">\r\n                            <Link to='/format' className=\"text-2xl text-blue-400 hover:text-blue-500\">\r\n                                How does it works?\r\n                            </Link>   \r\n                            <p className=\"text-center\">                                \r\n                                Check how the options are generated and the rules behind the format.\r\n                            </p>                          \r\n                        </div>\r\n                        <div className=\"flex flex-col items-center justify-center gap-4 p-4 rounded-md bg-white border-2 border-gray-200 w-96\">\r\n                            <Link to='/builder' className=\"text-2xl text-blue-400 hover:text-blue-500\">\r\n                                Try it now!\r\n                            </Link>   \r\n                            <p className=\"text-center\">\r\n                                Generate random options to create a team with and export it to Pokémon Showdown when you're done.\r\n                            </p>                          \r\n                        </div>\r\n                    </div>                                                                       \r\n                </div>                                                            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nexport default function Format() {\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'Format - Procedural Pokemon';\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">  \r\n            <div id=\"basics\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Basics</p>\r\n                    <p className=\"text-base text-gray-300\">General points about the format.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                    This format facilitates making random pokemon teams using procedural generation for battles via custom games in Pokémon Showdown.<br />\r\n                    Randomly generated numbers are used to get pokemon, moves, abilities and items options across all 8 generations of the main Pokémon games, these are then put through filters to prevent unusable options.<br />\r\n                    Once all options have been generated, a complete pokemon team must be built with them to then export it.\r\n                </div>                                                            \r\n            </div>\r\n            <div id=\"pokemon\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Pokemon Options</p>\r\n                    <p className=\"text-base text-gray-300\">Process for generating pokemon options.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                    When generating pokemon options, the steps to generate each one are the following:\r\n                    <ul className=\"pl-4\">\r\n                        <li>Get a random pokemon.</li>\r\n                        <li>Get a random final evolution from its available ones.</li>\r\n                        <li>Get a random form from its available ones.</li>\r\n                        <li>Check filters and reroll if filtered out.</li>\r\n                    </ul>\r\n                    The filtered out pokemon options are the following:\r\n                    <ul className=\"pl-4\">\r\n                        <li>Legendary pokemon forms above 720 total stats.</li>\r\n                        <li>Pokemon forms as strong as legendaries.</li>\r\n                        <li>Pokemon and pokemon forms below 360 total stats.</li>\r\n                    </ul>\r\n                </div>                                                            \r\n            </div>\r\n            <div id=\"movesets\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Moveset Options</p>\r\n                    <p className=\"text-base text-gray-300\">Process for generating moveset options.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                    text.                    \r\n                </div>                                                            \r\n            </div>\r\n            <div id=\"abilities\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Ability Options</p>\r\n                    <p className=\"text-base text-gray-300\">Process for generating ability options.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                    text.                    \r\n                </div>                                                            \r\n            </div>\r\n            <div id=\"items\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Item Options</p>\r\n                    <p className=\"text-base text-gray-300\">Process for generating item options.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                    text.                    \r\n                </div>                                                            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PokemonType({type}) {\r\n    const getColor = () => {\r\n        switch(type) {\r\n            case 'normal': return 'bg-normal';\r\n            case 'fire': return 'bg-fire';\r\n            case 'water': return 'bg-water';\r\n            case 'grass': return 'bg-grass';\r\n            case 'electric': return 'bg-electric';\r\n            case 'ice': return 'bg-ice';\r\n            case 'fighting': return 'bg-fighting';\r\n            case 'poison': return 'bg-poison';\r\n            case 'ground': return 'bg-ground';\r\n            case 'flying': return 'bg-flying';\r\n            case 'psychic': return 'bg-psychic';\r\n            case 'bug': return 'bg-bug';\r\n            case 'rock': return 'bg-rock';\r\n            case 'ghost': return 'bg-ghost';\r\n            case 'dark': return 'bg-dark';\r\n            case 'dragon': return 'bg-dragon';\r\n            case 'steel': return 'bg-steel';\r\n            case 'fairy': return 'bg-fairy';\r\n            default: return '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <p className={`flex items-center justify-center w-16 capitalize text-sm px-1.5 py-0.5 rounded-md text-white font-semibold ${getColor()}`}>\r\n            {type}\r\n        </p>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { HiOutlineArrowUp, HiOutlineArrowDown } from 'react-icons/hi';\r\n\r\nexport default function PokemonStats({stats, nature}) {\r\n    const getStatName = (stat) => {\r\n        switch (stat) {\r\n            case 0: return 'HP';\r\n            case 1: return 'Atk';\r\n            case 2: return 'Def';\r\n            case 3: return 'SpA';\r\n            case 4: return 'SpD';\r\n            case 5: return 'Spe';\r\n            case 6: return 'Total';\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    const getStatColor = (stat) => {\r\n        switch (stat) {\r\n            case 0: return 'bg-red-400';\r\n            case 1: return 'bg-yellow-500';\r\n            case 2: return 'bg-yellow-300';\r\n            case 3: return 'bg-green-400';\r\n            case 4: return 'bg-blue-400';\r\n            case 5: return 'bg-purple-400';\r\n            case 6: return 'bg-gray-300';\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    const getStatWidth = (stat, first = false, total = false) => { \r\n        if(stat <= 50 || (first && stat <= 120) || (total && stat <= 360))\r\n            return 'w-1/12';\r\n        else if(stat <= 65 || (first && stat <= 130) || (total && stat <= 390))\r\n            return 'w-2/12';\r\n        else if(stat <= 80 || (first && stat <= 140) || (total && stat <= 420))\r\n            return 'w-3/12';\r\n        else if(stat <= 95 || (first && stat <= 150) || (total && stat <= 450))\r\n            return 'w-4/12';\r\n        else if(stat <= 110 || (first && stat <= 160) || (total && stat <= 480))\r\n            return 'w-5/12';\r\n        else if(stat <= 125 || (first && stat <= 170) || (total && stat <= 510))\r\n            return 'w-6/12';\r\n        else if(stat <= 140 || (first && stat <= 180) || (total && stat <= 550))\r\n            return 'w-7/12';\r\n        else if(stat <= 155 || (first && stat <= 190) || (total && stat <= 590))\r\n            return 'w-8/12';\r\n        else if(stat <= 170 || (first && stat <= 200) || (total && stat <= 620))\r\n            return 'w-9/12';\r\n        else if(stat <= 185 || (first && stat <= 210) || (total && stat <= 650))\r\n            return 'w-10/12';\r\n        else if(stat <= 200 || (first && stat <= 220) || (total && stat <= 680))\r\n            return 'w-11/12';\r\n        else\r\n            return 'w-full';            \r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-center items-start w-full text-sm\">\r\n            {stats.map((s, i) => {\r\n                return (\r\n                    <div key={i} className=\"flex w-full gap-2\">\r\n                        <div className=\"flex w-1/3 justify-between items-center\">                            \r\n                            <div className={`flex items-center \r\n                                ${s.stat && nature.increased && s.stat.name === nature.increased.name ? 'text-blue-600' : ''}\r\n                                ${s.stat && nature.decreased && s.stat.name === nature.decreased.name ? 'text-red-600' : ''}`}>\r\n                                <p className=\"border-b border-dashed border-gray-600\" data-tip data-for={'stat-'+i.toString()}>\r\n                                    {getStatName(i)}\r\n                                </p>\r\n                                {s.stat && nature.increased && s.stat.name === nature.increased.name ? <HiOutlineArrowUp /> : null}\r\n                                {s.stat && nature.decreased && s.stat.name === nature.decreased.name ? <HiOutlineArrowDown /> : null}\r\n                            </div>\r\n                            <p className=\"\">{s.base_stat}</p>                                        \r\n                        </div>\r\n                        <div className=\"flex w-2/3 relative items-center\">\r\n                            <div\r\n                                style={{marginTop: \"2px\"}}\r\n                                className={`${getStatColor(i)} rounded-md h-3 \r\n                                    ${getStatWidth(i < stats.length - 1 ? s.calculated_stat : s.base_stat, (i === 0), (i === stats.length - 1))}\r\n                                `}\r\n                            />\r\n                            <div className=\"absolute w-full h-full\">\r\n                                {i < stats.length - 1 ? \r\n                                    <div\r\n                                        style={{marginTop: \"1px\"}} \r\n                                        className=\"px-2 flex items-center justify-between text-xs text-gray-600 w-full h-full\">\r\n                                        <p>{s.ev} / {s.iv}</p>\r\n                                        <p>{s.calculated_stat}</p>\r\n                                    </div>\r\n                                : null}                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}                                        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {GiSparkles} from 'react-icons/gi';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\n\r\nexport default function PokemonSprite({pokemon, assign, opacity}) {\r\n    const getRarity = () => {\r\n        if(pokemon.is_legendary)\r\n            return \"bg-yellow-100 border-2 border-yellow-200 ring ring-yellow-100 animate-pulse\"\r\n        else if(pokemon.is_mythical)\r\n            return \"bg-purple-100 border-2 border-purple-200 ring ring-purple-100 animate-pulse\"\r\n        else if(pokemon.stats[6].base_stat >= 600)\r\n            return \"bg-blue-100 border-2 border-blue-200 ring ring-blue-100 animate-pulse\"\r\n        else\r\n            return 'animate-none'\r\n    }\r\n\r\n    return ( \r\n        <div onClick={assign} \r\n            className={`relative w-24 h-24 flex items-center justify-center ${opacity ? 'opacity-20' : ''} transition duration-150 ease-in-out`}>\r\n            <span className={`absolute w-24 h-24 absolute rounded-full opacity-100 ${getRarity()}`} />\r\n            {pokemon.shiny ? <GiSparkles className={`absolute w-24 h-24 absolute opacity-100 text-yellow-200 animate-pulse`} /> : null}            \r\n            {pokemon.sprites.front_default ?                \r\n                <img \r\n                    src={pokemon.shiny ? pokemon.sprites.front_shiny : pokemon.sprites.front_default} alt=\"\" width=\"96px\" height=\"96px\"\r\n                    className=\"absolute animate-wiggle\"\r\n                />\r\n            :\r\n                <p className=\"absolute text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${pokemon.species.name.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}_(Pokémon)`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonType from './PokemonType';\r\nimport PokemonStats from './PokemonStats';\r\nimport PokemonSprite from './PokemonSprite';\r\nimport { FaGenderless } from 'react-icons/fa';\r\nimport { CgGenderMale, CgGenderFemale } from 'react-icons/cg';\r\n\r\nexport default function Pokemon({pokemon}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const getGenders = () => {\r\n        switch(pokemon.gender){\r\n            case \"male\": \r\n                return <CgGenderMale />\r\n            case \"female\": \r\n                return <CgGenderFemale />\r\n            default:\r\n               return <FaGenderless />\r\n        }            \r\n    }    \r\n\r\n    return (\r\n        <div onClick={() => context.selectPokemon(pokemon)} \r\n            className={`animate-enter cursor-pointer flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-64 h-auto border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out\r\n            ${pokemon.selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>                        \r\n\r\n            <PokemonSprite pokemon={pokemon} />            \r\n\r\n            <div className=\"capitalize text-center\">{pokemon.name.replace(/-/g, \" \")} {`Lv${pokemon.level}`}</div>\r\n            <div className=\"flex justify-center items-center gap-2\">\r\n                {pokemon.types.map((t, i) => {\r\n                    return (                                    \r\n                        <PokemonType key={i} type={t.type.name} />\r\n                    )\r\n                })}                           \r\n            </div>\r\n            <PokemonStats stats={pokemon.stats} nature={pokemon.nature}/> \r\n            <div className=\"flex w-full justify-between items-center text-xs text-gray-600\">\r\n                <div className=\"flex w-1/3\">\r\n                    <p className=\"capitalize border-b border-dashed border-gray-600\" data-tip data-for={'nature'}>\r\n                        {pokemon.nature.name}\r\n                    </p>\r\n                </div>                \r\n                <div className=\"w-1/3 text-base flex justify-center items-center\">\r\n                    <div data-tip data-for={'gender'} className=\"border-b border-dashed border-gray-600\">{getGenders()}</div>\r\n                </div>                                \r\n                <div className=\"flex justify-end w-1/3\">\r\n                    <p className=\"capitalize border-b border-dashed border-gray-600\" data-tip data-for={'height_weight'}>\r\n                        {pokemon.height/10}m / {pokemon.weight/10}kg\r\n                    </p>\r\n                </div>                \r\n            </div>                       \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Pokemon from './Pokemon';\r\n\r\nexport default function PokemonOptions({ options }) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n    \r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map(p => (\r\n                    <Pokemon key={p.id} pokemon={p} />\r\n                ))\r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-300\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    // Render.\r\n    return (\r\n        <div id=\"pokemon\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Pokemon Options</p>\r\n                    <p className=\"text-base text-gray-300\">Select pokemon for your team.</p>\r\n                </span>\r\n                <p className=\"text-lg\">{context.selectionsMade.pokemons}/{context.selectionsNeeded.pokemons} Pokemon Selected</p>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.pokemons >= context.selectionsNeeded.pokemons ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>            \r\n        </div>\r\n    );    \r\n}\r\n","import React from 'react'\r\n\r\nexport default function MoveCategory({category}) {\r\n    const getColor = () => {\r\n        switch(category){\r\n            case 'physical': return 'bg-red-600';\r\n            case 'special': return 'bg-blue-600';\r\n            case 'status': return 'bg-gray-400';\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <p className={`flex items-center justify-center w-16 capitalize text-sm px-1.5 py-0.5 rounded-md text-white font-semibold ${getColor()}`}>\r\n            {category}\r\n        </p>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonType from '../pokemon/PokemonType';\r\nimport MoveCategory from './MoveCategory';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\n\r\nexport default function Move({move, moveset}) {\r\n    const context = React.useContext(TeamBuilderContext);            \r\n\r\n    const formatEffect = (effect) => {\r\n        let formattedEffect = effect;\r\n        // Adjust specific items.      \r\n        switch(move.name){\r\n            case 'techno-blast':\r\n                formattedEffect = formattedEffect.replace('plate or ', '');\r\n                break;\r\n            case 'judgment':\r\n                formattedEffect = formattedEffect.replace(' or drive', '');\r\n                break;\r\n            case 'multi-attack':\r\n                formattedEffect = formattedEffect.replace('plate or drive', 'memory');\r\n                break;\r\n            case 'hidden-power':\r\n                formattedEffect = \"Inflicts regular damage with no additional effect.\";\r\n                break;\r\n            case 'uproar':\r\n                formattedEffect = formattedEffect.replace('several', '3');\r\n                break;\r\n            case 'sand-tomb':\r\n            case 'magma-storm':\r\n                formattedEffect = formattedEffect.replace('Prevents the target from fleeing', 'Traps the target');\r\n                break;\r\n            case 'thousand-waves':\r\n            case 'mean-look':\r\n                formattedEffect = \"Traps the target.\";\r\n                break;\r\n            case 'aurora-veil':\r\n                formattedEffect = formattedEffect.replace('damage', 'damage received for');\r\n                break;    \r\n            case 'attract':\r\n                formattedEffect = \"Infatuates target if it has the opposite gender.\";\r\n                break;          \r\n            default:\r\n                break;\r\n        }           \r\n        // Adjust general moves.\r\n        formattedEffect = formattedEffect.replace(/\\$effect_chance/g, move.effect_chance);\r\n        if(move.meta && move.meta.crit_rate > 0)\r\n            formattedEffect = formattedEffect.replace(\"Has an increased chance for a critical hit.\", `move's critical hit rate is increased by ${move.meta.crit_rate} `+(move.meta.crit_rate > 1 ? \"stage(s).\" : \"stage.\"));\r\n        if(move.priority !== 0)\r\n            formattedEffect = formattedEffect.concat(' Priority '+move.priority);\r\n        return formattedEffect;\r\n    }    \r\n\r\n    const formattedEffect = move.effect_entries.length > 0 ? formatEffect(move.effect_entries.find(e => e.language.name === \"en\").short_effect) : null;\r\n\r\n    const getEffect = () => {\r\n        if(formattedEffect) {\r\n            return(\r\n                <p className=\"text-center\">\r\n                    {formattedEffect}\r\n                </p>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <p className=\"text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${move.name.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}_(move)`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => context.selectMove(move, moveset)}\r\n            className={`cursor-pointer flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out \r\n            ${move.selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>            \r\n            <div className=\"flex justify-between items-center w-full gap-2\">\r\n                <p className=\"capitalize\">{move.name.replace(/-/g, \" \")}</p>\r\n                <div className=\"flex justify-center gap-2\">\r\n                    <PokemonType type={move.type.name} />\r\n                    {move.damage_class ? <MoveCategory category={move.damage_class.name} /> : ''}\r\n                </div>                                \r\n            </div>\r\n            <div className=\"flex w-full gap-2 justify-between text-sm\">\r\n                <p data-tip data-for={'pp'}>PP: {move.pp}</p>\r\n                <p data-tip data-for={'power'}>Pwr: {move.power ? move.power : '-'}</p>\r\n                <p data-tip data-for={'accuracy'}>Acc: {move.accuracy ? move.accuracy : '-'}</p>                \r\n            </div>\r\n            <div className=\"flex flex-col justify-start items-center text-sm w-full\" data-tip={formattedEffect} data-for={'dynamic'}>\r\n                {getEffect()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonSprite from './PokemonSprite'\r\n\r\nexport default function SelectedPokemon({ assignable }) {\r\n    const context = React.useContext(TeamBuilderContext);   \r\n    const selectedPokemon = context.pokemonOptions.filter(p => p.selected);      \r\n\r\n    const getAssigned = () => {\r\n        if(assignable.moveset != null)            \r\n            return selectedPokemon.find(p => p.moveset === assignable.moveset)\r\n        else if(assignable.ability != null)            \r\n            return selectedPokemon.find(p => p.ability === assignable.ability)\r\n        else if(assignable.item != null)            \r\n            return selectedPokemon.find(p => p.item === assignable.item)\r\n        else\r\n            return null;\r\n    }\r\n    let assignedPokemon = getAssigned();\r\n\r\n    const getAssignedOutside = (pokemon) => {\r\n        if(assignable.moveset != null)\r\n            return pokemon.moveset !== null;\r\n        else if (assignable.ability != null)\r\n            return pokemon.ability !== null;\r\n        else if (assignable.item != null)\r\n            return pokemon.item !== null;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    const getSelectedPokemons = () => {        \r\n        if(selectedPokemon.length > 0 && !assignedPokemon) {\r\n            return selectedPokemon.map((p, i) => {\r\n                return (\r\n                    <PokemonSprite key={i} pokemon={p} assign={() => context.assignPokemon(p, assignable)}\r\n                        opacity={(assignedPokemon && p.name !== assignedPokemon.name) ||\r\n                        (!assignedPokemon && getAssignedOutside(p))}\r\n                    />\r\n                )\r\n            })            \r\n        }\r\n        else if(selectedPokemon.length > 0 && assignedPokemon) {\r\n            return <PokemonSprite pokemon={assignedPokemon} assign={() => context.assignPokemon(assignedPokemon, assignable)} />            \r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"p-4 text-gray-300\">\r\n                    No selected pokemon\r\n                </div> \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`cursor-pointer flex flex-wrap gap-2 justify-center items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out \r\n            ${assignedPokemon ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>\r\n            {getSelectedPokemons()}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Move from './Move';\r\nimport SelectedPokemon from '../pokemon/SelectedPokemon';\r\n\r\nexport default function Moveset({ moveset, index }) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const setMoves = () => {\r\n        if (moveset.length) {\r\n            return (\r\n                moveset.map(m => (\r\n                    <Move moveset={index} key={m.id} move={m} />\r\n                ))\r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-300\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate-enter flex flex-col justify-start items-end\">\r\n            <div className=\"flex w-full justify-end items-center\">\r\n                {/* <p className=\"text-base\">{!context.pokemonOptions.find(p => p.moveset === index) ? 'No ' : ''}Pokemon Assigned</p> */}\r\n                <p className=\"text-base\">{context.selectionsMade.moves[index]}/{context.selectionsNeeded.moves} Moves Selected</p>\r\n            </div>\r\n            <div className={`flex flex-col gap-2 justify-start items-center rounded-md p-2 w-96 h-auto border-2 border-gray-200 transition duration-150 ease-in-out \r\n                ${context.selectionsMade.moves[index] >= context.selectionsNeeded.moves &&\r\n                context.pokemonOptions.find(p => p.moveset === index) ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                <SelectedPokemon assignable={{moveset: index}} />\r\n                {setMoves()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Moveset from './Moveset';\r\n\r\nexport default function MovesetOptions({ options }) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const selectedMoves  = () => {\r\n        let sm = 0;        \r\n        context.selectionsMade.moves.forEach(m => {\r\n            sm = sm + m\r\n        });\r\n        return sm;\r\n    }\r\n\r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map((m, i) => (\r\n                    <Moveset key={i} index={i} moveset={m} />\r\n                ))\r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-300\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div id=\"movesets\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Moveset Options</p>\r\n                    <p className=\"text-base text-gray-300\">Assign your selected pokemon to a moveset and select their moves.</p>\r\n                </span>\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">{context.selectionsMade.movesets}/{context.selectionsNeeded.movesets} Pokemon Assigned</p>\r\n                    {/* <p className=\"text-lg\">{selectedMoves()}/{context.selectionsNeeded.movesets * context.selectionsNeeded.moves} Moves Selected</p> */}\r\n                </span>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.movesets >= context.selectionsNeeded.movesets && \r\n                selectedMoves() >= context.selectionsNeeded.movesets * context.selectionsNeeded.moves ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport SelectedPokemon from '../pokemon/SelectedPokemon';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\n\r\nexport default function Ability({ability, index}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n    const selected = context.pokemonOptions.find(p => p.ability === index);\r\n\r\n    const formatEffect = (effect) => {\r\n        let formattedEffect = effect;\r\n        // Adjust specific items.      \r\n        switch(ability.name){\r\n            case 'sand-stream':\r\n            case 'drizzle':\r\n            case 'snow-warning':\r\n            case 'drought':\r\n                formattedEffect = formattedEffect.replace('indefinitely', '5 turns');\r\n                break;\r\n            case 'aroma-veil':\r\n                formattedEffect = formattedEffect.replace('allies', 'user and allies');\r\n                break;\r\n            case 'fur-coat':\r\n                formattedEffect = formattedEffect.replace('damage', 'damage received');\r\n                break;\r\n            default:\r\n                break;\r\n        }           \r\n        // Adjust general abilities.\r\n        \r\n        return formattedEffect;\r\n    }\r\n\r\n    const formattedEffect = ability.effect_entries.length > 0 ? formatEffect(ability.effect_entries.find(e => e.language.name === 'en').short_effect) : null;\r\n\r\n    const getEffect = () => {        \r\n        if(formattedEffect) {            \r\n            return (\r\n                <p className=\"text-center\">\r\n                    {formattedEffect} \r\n                </p>\r\n            )            \r\n        }\r\n        else {\r\n            return (\r\n                <p className=\"text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${ability.name.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}_(Ability)`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            )\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <div className=\"animate-enter flex flex-col justify-start items-end\">\r\n            {/* <div className=\"flex w-full justify-start items-center\">\r\n                <p className=\"text-base\">{!selected ? 'No ' : ''}Pokemon Assigned</p>\r\n            </div> */}\r\n            <div className={`flex flex-col gap-2 justify-start items-center rounded-md p-2 w-96 h-auto border-2 border-gray-200 transition duration-150 ease-in-out  \r\n                ${selected ? 'border-green-200 ring ring-green-100' : ''}`}>            \r\n                <SelectedPokemon assignable={{ability: index}} />\r\n                <div className={`flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 transition duration-150 ease-in-out \r\n                    ${selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>\r\n                    <div className=\"flex justify-center items-center w-full gap-2\">\r\n                        <p className=\"capitalize\">{ability.name.replace(/-/g, \" \")}</p>                \r\n                    </div>            \r\n                    <div className=\"flex flex-col justify-start items-center text-sm w-full\" data-tip={formattedEffect} data-for={'dynamic'}>\r\n                        {getEffect()}\r\n                    </div>            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Ability from './Ability';\r\n\r\nexport default function AbilityOptions({options}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map((a, i) => (\r\n                    <Ability key={i} index={i} ability={a} />\r\n                ))                \r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-300\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"abilities\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Ability Options</p>\r\n                    <p className=\"text-base text-gray-300\">Assign your selected pokemon to an ability.</p>\r\n                </span>\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">{context.selectionsMade.abilities}/{context.selectionsNeeded.abilities} Pokemon Assigned</p>                    \r\n                </span>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.abilities >= context.selectionsNeeded.abilities ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport SelectedPokemon from '../pokemon/SelectedPokemon';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\n\r\nexport default function Item({item, index}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n    const selected = context.pokemonOptions.find(p => p.item === index);\r\n    \r\n    const formatEffect = (effect) => {\r\n        let formattedEffect = effect.split(\".\").filter(e => {\r\n            return !e.includes(\"Breeding:\") && !e.includes(\"Traded on\") && !e.includes(\"Held by\") && !e.includes(\"begets\") && !e.includes(\"Egg\")\r\n        }).map(e => {\r\n            return e.replace(\"Held: \", \"\")\r\n        }).join(\".\");  \r\n        // Adjust specific items.      \r\n        switch(item.name){\r\n            case 'shell-bell':                                \r\n                formattedEffect = formattedEffect.replace(\"receives\", \"heals\");\r\n                break;\r\n            case 'bright-powder':                                \r\n                formattedEffect = formattedEffect.replace(\"(11 1/9%)\", \"(11%)\");\r\n                break;\r\n            case 'mental-herb':\r\n                formattedEffect = formattedEffect.replace(\"infatuation. Gen V: Also removes\", \"Infatuation,\");\r\n                break;\r\n            case 'light-clay':\r\n                formattedEffect = formattedEffect.replace(\" and Reflect\", \", Reflect and Aurora Veil\");\r\n                break;\r\n            case 'toxic-orb':\r\n                formattedEffect = formattedEffect.replace(\"Inflicts Toxic on\", \"Badly poisons\");\r\n                break;\r\n            case 'cell-battery':\r\n            case 'absorb-bulb':\r\n            case 'snowball':\r\n            case 'eject-button':\r\n                formattedEffect = formattedEffect.concat(\" Consumed after use.\");\r\n                break;\r\n            default:\r\n                break;\r\n        }        \r\n        // Adjust group items.\r\n        if(item.name.split(\"-\").includes('plate'))\r\n            formattedEffect = formattedEffect.replace(\"Arceus's and\", \"Arceus with multitype and\");\r\n        if(item.name.split(\"-\").includes('memory'))\r\n            formattedEffect = formattedEffect.replace(\"Silvally to\", \"Silvally with RKS System to\");\r\n        if(item.name.split(\"-\").includes('drive'))\r\n            formattedEffect = formattedEffect.replace(\" Techno Blast\", \"\").replace(\"Grants Genesect\", \"Changes the holder's Techno Blast\").replace(\"a yellow,\", \"to\");\r\n        if(item.name.split(\"-\").includes('gem'))\r\n            formattedEffect = formattedEffect.replace(\"5\", \"3\");\r\n        return formattedEffect;\r\n    }\r\n\r\n    const formattedEffect = item.effect_entries.length > 0 ? formatEffect(item.effect_entries.find(e => e.language.name === 'en').short_effect) : null;\r\n\r\n    const getEffect = () => {        \r\n        if(formattedEffect) {                \r\n            return (\r\n                <p className=\"text-center\">\r\n                    {formattedEffect}  \r\n                </p>\r\n            )            \r\n        }\r\n        else {\r\n            return (\r\n                <p className=\"text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${item.name.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate-enter flex flex-col justify-start items-end\">\r\n            {/* <div className=\"flex w-full justify-start items-center\">\r\n                <p className=\"text-base\">{!selected ? 'No ' : ''}Pokemon Assigned</p>\r\n            </div> */}\r\n            <div className={`flex flex-col gap-2 justify-start items-center rounded-md p-2 w-96 h-auto border-2 border-gray-200 transition duration-150 ease-in-out  \r\n                ${selected ? 'border-green-200 ring ring-green-100' : ''}`}>            \r\n                <SelectedPokemon assignable={{item: index}} />\r\n                <div className={`flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 transition duration-150 ease-in-out \r\n                    ${selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>                    \r\n                    <div className=\"flex justify-center items-center w-full gap-2\">\r\n                        <img src={item.sprites.default} alt=\"\" width=\"30px\" height=\"30px\"/>\r\n                        <p className=\"capitalize\">{item.name.replace(/-/g, \" \")}</p>                \r\n                    </div>            \r\n                    <div className=\"flex flex-col justify-start items-center text-sm w-full\" data-tip={formattedEffect} data-for={'dynamic'}>\r\n                        {getEffect()}\r\n                    </div>            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Item from './Item';\r\n\r\nexport default function ItemOptions({options}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map((it, i) => (\r\n                    <Item key={i} index={i} item={it} />\r\n                ))                \r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-300\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"items\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Item Options</p>\r\n                    <p className=\"text-base text-gray-300\">Assign your selected pokemon to an item.</p>\r\n                </span>\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">{context.selectionsMade.items}/{context.selectionsNeeded.items} Pokemon Assigned</p>                    \r\n                </span>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.items >= context.selectionsNeeded.items ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport PokemonOptions from '../components/pokemon/PokemonOptions';\r\nimport MovesetOptions from '../components/moves/MovesetOptions';\r\nimport AbilityOptions from '../components/abilities/AbilityOptions';\r\nimport ItemOptions from '../components/items/ItemOptions';\r\nimport { BiLoaderAlt } from 'react-icons/bi';\r\nimport { FaEraser, FaCopy, FaPencilAlt } from 'react-icons/fa';\r\n\r\nexport default function TeamBuilder({\r\n    loading, randomRolls, pokemonOptions, movesetOptions, abilityOptions, itemOptions, generating, generateOptions, clearChoices, exportTeam\r\n    }) {   \r\n\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'Team Builder - Procedural Pokemon';\r\n    }, []);\r\n\r\n    const getControls = () => {\r\n        if(loading || generating){\r\n            return (                \r\n                <p className=\"flex gap-4 items-center justify-center text-lg p-4 border-2 border-transparent\">\r\n                    <BiLoaderAlt className=\"animate-spin text-2xl\" />\r\n                    {loading ? 'Fetching data from PokeAPI' : (generating ? generationProgress() : 'Generate Options')}\r\n                </p>                \r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <button type=\"button\" onClick={() => clearChoices()}\r\n                        className=\"flex gap-2 items-center justify-center p-4 rounded-md bg-white hover:bg-gray-200 border-2 border-gray-200 w-48 transition duration-150 ease-in-out\">\r\n                        <FaEraser /> Clear Choices\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => generateOptions()}\r\n                        className=\"flex gap-2 items-center justify-center p-4 rounded-md bg-white border-2 border-gray-200 w-48 hover:bg-gray-200 transition duration-150 ease-in-out\">\r\n                        <FaPencilAlt /> Generate Options\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => exportTeam()}\r\n                        className=\"flex gap-2 items-center justify-center p-4 rounded-md bg-white hover:bg-gray-200 border-2 border-gray-200 w-48 transition duration-150 ease-in-out\">\r\n                        <FaCopy /> Export Team\r\n                    </button>\r\n                </>\r\n            )\r\n        }        \r\n    }\r\n    \r\n    const generationProgress = () => {\r\n        if(pokemonOptions.length < randomRolls.pokemons)\r\n            return `Generating Pokemons (${pokemonOptions.length}/${randomRolls.pokemons})`;   \r\n        else if(movesetOptions.length < randomRolls.movesets)\r\n            return `Generating Movesets (${movesetOptions.length}/${randomRolls.movesets})`;\r\n        else if(abilityOptions.length < randomRolls.abilities)\r\n            return `Generating Abilities (${abilityOptions.length}/${randomRolls.abilities})`;\r\n        else if(itemOptions.length < randomRolls.items)\r\n            return `Generating Items (${itemOptions.length}/${randomRolls.items})`;\r\n        else\r\n            return 'Done!';\r\n    }    \r\n\r\n    return (           \r\n        <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">  \r\n            <div id=\"controls\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Controls</p>\r\n                    <p className=\"text-base text-gray-300\">Actions for building your team.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-center gap-4 p-4 w-full border-2 rounded-md border-gray-200\">\r\n                    <div className=\"flex flex-wrap justify-center items-center gap-4\">\r\n                        {getControls()}\r\n                    </div>                                                                       \r\n                </div>                                                            \r\n            </div>\r\n            <PokemonOptions options={pokemonOptions} />\r\n            <MovesetOptions options={movesetOptions} />  \r\n            <AbilityOptions options={abilityOptions} />   \r\n            <ItemOptions options={itemOptions} />        \r\n\r\n        </div>                    \r\n    )\r\n}","import React, {useEffect} from 'react'\r\n\r\nexport default function About() {\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'About - Procedural Pokemon';\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport default function Tooltips() {\r\n    // Rebind tooltips when component mounts/update.\r\n    useEffect(() => {\r\n        ReactTooltip.rebuild()\r\n    });\r\n\r\n    // Format dynamic tooltip.\r\n    const formatTooltipData = (data) => {   \r\n        if(!data)\r\n            return null;\r\n\r\n        let formattedEffect = data.toLowerCase().replace(/\\./g, \"\").replace(/,/g, \"\");\r\n        let tooltipData=[];   \r\n        // Specific.\r\n        if(formattedEffect.includes(\"critical hit rate\") || formattedEffect.includes(\"critical hit ratio\"))\r\n            tooltipData.push(\"Critical Hit Rate|A base chance of 1/16 of dealing a critical hit, increases based on stages (1/8, 1/2, always).\");\r\n        else if(formattedEffect.includes(\"major status effect\") || formattedEffect.includes(\"major status ailment\"))\r\n            tooltipData.push(\"Major Statuses|All the non-volatile status effects (Burn, Freeze, Paralysis, Poison, Badly Poison and Sleep).\");\r\n        else if(formattedEffect.includes(\"scatters spikes\"))\r\n            tooltipData.push(\"Spikes|Damages foes when they switch in based on layers placed (1/8, 1/6, 1/4 max HP).\");\r\n        else if(formattedEffect.includes(\"causes damage when opposing pokémon switch in\"))\r\n            tooltipData.push(\"Stealth Rock|Damages foes when they switch in based on the effectivenes of Rock-type against them (from 1/32 to 1/2 max HP).\"); \r\n        else if(formattedEffect.includes(\"grassy terrain\"))\r\n            tooltipData.push(\"Grassy Terrain|\"+\r\n            \"*Boosts the power of Grass-type moves by 30%.\"+\r\n            \"*Restores 1/16 max HP of pokemon at the end of their turn.\"+\r\n            \"*The power of Bulldoze, Earthquake, and Magnitude is halved.\"); \r\n        else if(formattedEffect.includes(\"misty terrain\"))\r\n            tooltipData.push(\"Misty Terrain|\"+\r\n            \"*Halves the power of Dragon-type moves.\"+\r\n            \"*Prevents being afflicted by non-volatile status conditions.\"); \r\n        else if(formattedEffect.includes(\"strong sunlight\"))\r\n            tooltipData.push(\"Strong Sunlight|\"+\r\n            \"*Increases the damage of Fire-type moves by 50%.\"+\r\n            \"*Decreases the damage of Water-type moves by 50%.\"+\r\n            \"*Allows Solar Beam and Solar Blade to be used instantly.\"+\r\n            \"*Causes Growth to raise Attack and Special Attack two stages each.\"+\r\n            \"*Prevents pokemon from becoming frozen.\"+\r\n            \"*Causes Moonlight, Synthesis, and Morning Sun to recover 2/3 of max HP.\"+\r\n            \"*Lowers accuracy of Thunder and Hurricane to 50%.\");\r\n        // General.\r\n        formattedEffect.split(\" \").forEach(e => {\r\n            switch(e){\r\n                case 'priority':\r\n                    tooltipData.push(\"Priority|Higher priority moves are performed first.\");\r\n                    break;\r\n                case 'critical':\r\n                    if(!tooltipData.find(td => td.includes(\"Critical\")))\r\n                        tooltipData.push(\"Critical Hit|Deals 1.5x the damage. The attacker's negative stat stages and the defender's positive stat stages and screen-creating moves are ignored.\");\r\n                    break;\r\n                case 'stage':\r\n                case 'stages':\r\n                    if(!tooltipData.find(td => td.includes(\"Critical\")))\r\n                        tooltipData.push(\"Stages|Modifies a stat by 50% each. Max 6 or -6 stages per stat.\");\r\n                    break;\r\n                case 'flinch':\r\n                case 'flinching':\r\n                    tooltipData.push(\"Flinch|Unable to attack for that turn.\");\r\n                    break;\r\n                case 'confuse':\r\n                case 'confuses':\r\n                    tooltipData.push(\"Confusion|33% chance of attacking itself instead of executing a move for 2-5 turns. Volatile status condition.\");\r\n                    break;\r\n                case 'paralyzes':\r\n                case 'paralyze':\r\n                case 'paralyzed':\r\n                    tooltipData.push(\"Paralysis|50% speed reduction and 25% chance of losing each turn. Non-volatile status condition.\");\r\n                    break;\r\n                case 'freeze':\r\n                case 'frozen':\r\n                    tooltipData.push(\"Freeze|Unable to make a move and 20% chance of being thawed out each turn. Non-volatile status condition.\");\r\n                    break;\r\n                case 'burn':\r\n                case 'burns':\r\n                case 'burned':\r\n                    if(!tooltipData.find(td => td.includes(\"Burn\")))\r\n                        tooltipData.push(\"Burn|Takes 1/16 max HP as damage every turn and halves damage dealt with physical moves. Non-volatile status condition.\");\r\n                    break;\r\n                case 'poisoned':\r\n                case 'poisons':\r\n                case 'poison':\r\n                    if(!tooltipData.find(td => td.includes(\"Poison\"))){\r\n                        tooltipData.push(\"Poison|Takes 1/8 max HP as damage every turn. Non-volatile status condition.\");            \r\n                        tooltipData.push(\"Badly Poisoned|Takes increasing max HP damage every turn, increased by 1/16 each turn. Non-volatile status condition.\");\r\n                    }\r\n                    break;\r\n                case 'sleep':\r\n                case 'sleeping':\r\n                    tooltipData.push(\"Sleep|Unable to make a move for 1-3 turns. Non-volatile status condition.\");\r\n                    break;\r\n                case 'traps':\r\n                    tooltipData.push(\"Trap|Prevents the target from switching out if the user remains in battle.\");\r\n                    break;\r\n                case 'infatuates':\r\n                case 'infatuation':\r\n                    if(!tooltipData.find(td => td.includes(\"Infatuation\")))\r\n                        tooltipData.push(\"Infatuation|Cannot attack 50% of the time.\");\r\n                    break;\r\n                case 'rain':\r\n                    tooltipData.push(\"Rain|\"+\r\n                    \"*Increases the damage of Water-type moves by 50%.\"+\r\n                    \"*Decreases the damage of Fire-type moves by 50%.\"+\r\n                    \"*Halves the power of Solar Beam and Solar Blade.\"+\r\n                    \"*Causes Growth to raise Attack and Special Attack two stages each.\"+\r\n                    \"*Prevents pokemon from becoming frozen.\"+\r\n                    \"*Causes Moonlight, Synthesis, and Morning Sun to recover 1/4 of max HP.\"+\r\n                    \"*Allows Thunder and Hurricane to bypass the accuracy check.\");\r\n                    break;\r\n                case 'hail':\r\n                    if(!tooltipData.find(td => td.includes(\"Hail\")))\r\n                        tooltipData.push(\"Hail|\"+\r\n                        \"*Deals 1/16 max HP as damage to pokemon at the end of each turn, unless they are Ice-type.\"+\r\n                        \"*Allows Blizzard to bypass accuracy check.\"+\r\n                        \"*Halves the power of Solar Beam and Solar Blade.\"+\r\n                        \"*Causes Moonlight, Synthesis, and Morning Sun to recover 1/4 of max HP.\"); \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });    \r\n\r\n        //ReactTooltip.rebuild();\r\n        if(tooltipData.length > 0){\r\n            let dataArray = tooltipData.map(d => {return {header: d.split('|')[0], content: d.split('|')[1].split(\"*\")}})            \r\n            return (dataArray.map((d, i) => {\r\n                return(\r\n                    <div className={i+1 < dataArray.length ? \"text-center border-b\" : \"text-center\"} key={i}>\r\n                        <p>{d.header}</p>\r\n                        {d.content.map((c, i) => {return <p key={i}>{c}</p>})}\r\n                    </div>\r\n                );\r\n            }))\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ReactTooltip id=\"stat-0\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Hit Points</p>\r\n                    <p>Determines the total damage a pokemon can receive before fainting.</p>\r\n                </div>\r\n            </ReactTooltip>   \r\n            <ReactTooltip id=\"stat-1\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Attack</p>\r\n                    <p>Determines damage dealt when using a physical move.</p> \r\n                </div>              \r\n            </ReactTooltip>    \r\n            <ReactTooltip id=\"stat-2\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Defense</p>\r\n                    <p>Mitigates damage received when hit by a physical move.</p>               \r\n                </div>\r\n            </ReactTooltip>   \r\n            <ReactTooltip id=\"stat-3\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Special Attack</p>\r\n                    <p>Determines damage dealt when using a special move.</p>               \r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"stat-4\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Special Defense</p>\r\n                    <p>Mitigated damage received when hit by a special move.</p>               \r\n                </div>\r\n            </ReactTooltip> \r\n            <ReactTooltip id=\"stat-5\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Speed</p>\r\n                    <p>Determines the turn order in battle.</p>               \r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"nature\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Nature</p>\r\n                    <p>Usually affects two stats excluding HP, increasing one by 10% and decreasing another by 10%.</p>\r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"gender\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Gender</p>\r\n                    <p>Selected from the possible genders of the pokemon.</p>              \r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"height_weight\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Height and Weight</p>\r\n                    <p>How tall and heavy is the pokemon.</p>\r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"pp\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Power Points</p>\r\n                    <p>How many times the move can be used.</p>              \r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"power\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Power</p>\r\n                    <p>Determines damage dealt by the move.</p>\r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"accuracy\" delayShow={200}>\r\n                <div className=\"text-center\">\r\n                    <p>Accuracy</p>\r\n                    <p>Determines how likely the move is to hit.</p>              \r\n                </div>\r\n            </ReactTooltip>\r\n            <ReactTooltip id=\"dynamic\" delayShow={200} getContent={(dataTip) => formatTooltipData(dataTip)}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { TeamBuilderContext } from './context/TeamBuilderContext';\r\nimport Sidebar from './components/Sidebar';\r\nimport Footer from './components/Footer';\r\nimport Home from './containers/Home';\r\nimport Format from './containers/Format';\r\nimport TeamBuilder from './containers/TeamBuilder';\r\nimport About from './containers/About';\r\nimport Tooltips from './components/Tooltips';\r\n\r\nexport default function App() {\r\n  // ----- CONSTANTS -----\r\n  // API\r\n  const apiUrl = 'https://pokeapi.co/api/v2/';\r\n  const pokemonCount = 898;\r\n  const moveCount = 826;\r\n  const abilityCount = 267;\r\n  const itemCount = [2, 115, 1, 4, 24, 2, 9, 1, 1, 23];\r\n  const itemOffset = [111, 189, 441, 562, 581, 666, 678, 727, 831, 844];\r\n  const typeCount = 18;\r\n  const natureCount = 25; \r\n\r\n  // ----- STATE -----\r\n  // API\r\n  const [loading, setLoading] = useState(true);  \r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [moveList, setMoveList] = useState([]);\r\n  const [abilityList, setAbilityList] = useState([]);  \r\n  const [itemList, setItemList] = useState([]);  \r\n  const [typeList, setTypeList] = useState([]);\r\n  const [natureList, setNatureList] = useState([]);   \r\n\r\n  // Options.\r\n  const [generating, setGenerating] = useState(false);\r\n  const [generationStep, setGenerationStep] = useState(0);\r\n  const [randomRolls] = useState({\r\n    pokemons: 9,\r\n    movesets: 6,\r\n    moves: 6,\r\n    abilities: 9,\r\n    items: 9\r\n  });\r\n  const [pokemonOptions, setPokemonOptions] = useState([]);\r\n  const [movesetOptions, setMovesetOptions] = useState([]);\r\n  const [abilityOptions, setAbilityOptions] = useState([]);\r\n  const [itemOptions, setItemOptions] = useState([]);\r\n  const [optionsData, setOptionsData] = useState({\r\n    movesetsPerType: [],\r\n    usableTypes: [],\r\n    reverseOptions: []\r\n  });    \r\n\r\n  // Filters.  \r\n  const [pokemonFilter] = useState([ // Exclude pokemons with this keywords.\r\n    // Legendary forms above 720 total stats.\r\n    'eternamax', 'primal', 'ultra',\r\n    // General forms as strong as legendaries.\r\n    'mega', 'gmax', 'eternal', 'ash',\r\n    // Pokemons and forms below 360 total stats.\r\n    'solo', 'shedinja', 'smeargle', 'ditto', 'delibird', 'luvdisc', 'unown',\r\n    // Others.\r\n    'totem', 'bond', 'zygarde'\r\n  ]);\r\n  const [pokemonAllow] = useState([ // Include pokemons with this keywords even when excluded by filter.\r\n    '10', '50', 'complete'\r\n  ]);\r\n  const [moveFilter] = useState ([ // Exclude moves with this keywords.\r\n    // General max and z moves.\r\n    'max', 'physical', 'special',\r\n    // Specific z moves.\r\n    'catastropika', 'moonsault', 'raid', '000', 'sparksurfer', 'evoboost', 'pancake', 'genesis', 'operetta', 'stormshards',\r\n    'forever', 'soulblaze', 'guardian', 'sunraze', 'moonraze', 'burns', 'stealing',\r\n    // Unusable in format.\r\n    'natural', 'stuff', 'teatime', 'happy', 'belch', 'return', 'frustration', 'gear', 'spotlight', 'helping', 'aromatic',\r\n    'coaching', 'wide-guard', 'veevee', 'quash', 'magnetic', 'decorate', \r\n    // No effect.\r\n    'splash', 'celebrate', 'hands', 'struggle',    \r\n    // BRANCH LOGIC. All accounted for.\r\n    // Combo moves.\r\n    //'stockpile', 'swallow', 'spit',     \r\n    // Held items.\r\n    //'techno', 'judgement',\r\n    // Specific pokemons.\r\n    //'hyperspace'\r\n    // REVERSE BRANCH LOGIC. All accounted for.\r\n    // Need lost or consumed held items to work.\r\n    //'recycle',  \r\n  ]);\r\n  const [moveAllow] = useState([ // Include moves with this keywords even when excluded by filter.\r\n    'bug', 'grind', 'shift'\r\n  ]);\r\n  const [moveStatusLimit] = useState(3); // Max number of status moves in a moveset.\r\n  const [abilityFilter] = useState([ // Exclude abilities with this keywords.\r\n    // Unusable in format.\r\n    'illuminate', 'run', 'plus', 'minus', 'gluttony', 'honey', 'unnerve', 'healer', 'friend', 'harvest',\r\n    'telepathy', 'star', 'cheek', 'battery', 'receiver', 'alchemy', 'ball', 'ripen', 'spot',\r\n    'medicine', 'one', 'symbiosis',\r\n    // Filtered pokemon forms specific.\r\n    'schooling', 'gulping', 'gorging',      \r\n    // Unusable in tournaments.\r\n    'anticipation', 'forewarn', 'frisk',     \r\n    // BRANCH LOGIC. All accounted for.\r\n    // Pokemon forms specific.\r\n    //'zen', 'stance', 'shields', 'bond', 'construct', 'face', 'hunger', 'gulp', \r\n    // Move mechanic. \r\n    // 'iron-fist', 'skill-link', 'reckless', 'strong-jaw', 'mega-launcher', 'liquid-voice', 'punk-rock', 'triage',\r\n    // 'tough-claws', 'unseen-fist',    \r\n    // Move type.\r\n    // 'flash-fire', 'overgrow', 'blaze', 'torrent', 'swarm', 'scrappy', 'sand-force', 'gale-wings', \r\n    // 'dark-aura', 'fairy-aura', 'steelworker', 'transistor', 'dragons-maw',\r\n    // Move type changes.\r\n    // 'normalize', 'refrigerate', 'pixilate', 'galvanize', 'aerilate',\r\n    // Specific pokemons.\r\n    //'multitype', 'rks',\r\n    // Harmful to owner.\r\n    //'truant', 'stall', 'klutz', 'slow', 'defeatist',\r\n    // REVERSE BRANCH LOGIC. All accounted for.\r\n    // Need lost or consumed held items to work.\r\n    // 'pickup', 'unburden', 'pickpocket', 'magician',\r\n  ]);  \r\n  const [abilityAllow] = useState([ // Include abilities with this keywords even when excluded by filter.\r\n    \r\n  ]);\r\n  const [itemFilter] = useState([ // Exclude items with this keywords.\r\n    // Unusable in format.\r\n    'power', 'scarf', 'smoke', 'macho', 'exp', 'soothe', 'coin', 'cleanse', 'egg', 'luck',\r\n    'pure', 'ability', \r\n    // Evolution related or filtered pokemon specific.    \r\n    'deep', 'scale', 'powder', 'everstone', 'grade', 'punch', 'protector', 'disc', 'magmarizer', 'electirizer', \r\n    'reaper', 'whipped', 'sachet', 'light',    \r\n    // BRANCH LOGIC. All accounted for.\r\n    // Pokemon specific.\r\n    // 'dew', 'thick', 'stick'\r\n    // Move or ability mechanic.\r\n    //'heat', 'smooth', 'icy', 'damp', 'sludge', 'clay', 'orb', \r\n    // Harmful to user.\r\n    //'full', 'lagging', 'sticky', 'target', 'iron'\r\n  ]);\r\n  const [itemAllow] = useState([ // Include items with this keywords even when excluded by filter.    \r\n    'herb', 'choice', 'bright', 'silver', 'silk', 'clay'\r\n  ]);\r\n\r\n  // Usability.  \r\n  // Moves.\r\n  const [chargeMoves] = useState([ // Power herb.\r\n    'bounce', 'dig', 'dive', 'fly', 'freeze-shock', 'geomancy', 'ice-burn', 'meteor-beam', 'phantom-force', 'razor-wind',\r\n    'shadow-force', 'skull-bash', 'sky-attack', 'solar-beam', 'solar-blade'\r\n  ]);\r\n  const [bindMoves] = useState([ // Grip claw, binding band.\r\n    'bind', 'clamp', 'fire-spin', 'infestation', 'magma-storm', 'sand-tomb', 'snap-trap', 'thunder-cage', 'whirlpool', 'wrap'\r\n  ]);\r\n  const [drainMoves] = useState([ // Big root.\r\n    'absorb', 'bouncy-bubble', 'drain-punch', 'draining-kiss', 'dream-eater', 'giga-drain', 'horn-leech', 'leech-life', 'leech-seed',\r\n    'mega-drain', 'oblivion-wing', 'parabolic-charge', 'strength-sap', 'ingrain', 'aqua-ring'\r\n  ]);\r\n  const [terrainMoves] = useState([ // Terrain extender.\r\n    'electric-terrain', 'grassy-terrain', 'misty-terrain', 'psychic-terrain'\r\n  ]);\r\n  const [barrierMoves] = useState([ // Light clay.\r\n    'light-screen', 'reflect', 'aurora-veil'\r\n  ]);  \r\n  const [orbMoves] = useState([ // Toxic and flame orb.\r\n    'facade', 'psycho-shift'\r\n  ]);\r\n  const [punchMoves] = useState([ // Iron fist.\r\n    'bullet-punch', 'comet-punch', 'dizzy-punch', 'double-iron-bash', 'drain-punch', 'dynamic-punch', 'fire-punch', 'focus-punch',\r\n    'hammer-arm', 'ice-hammer', 'ice-punch', 'mach-punch', 'mega-punch', 'meteor-mash', 'plasma-fists', 'power-up-punch',\r\n    'shadow-punch', 'sky-uppercut', 'thunder-punch'\r\n  ]);\r\n  const [multistrikeMoves] = useState([ // Skill link.\r\n    'arm-thrust', 'barrage', 'bone-rush', 'bullet-seed', 'comet-punch', 'double-slap', 'fury-attack', 'fury-swipes', 'icicle-spear',\r\n    'pin-missile', 'rock-blast', 'scale-shot', 'spike-cannon', 'tail-slap', 'triple-axel', 'triple-kick', 'water-shuriken'\r\n  ]);\r\n  const [recoilMoves] = useState([ // Reckless.\r\n    'brave-bird', 'double-edge', 'flare-blitz', 'head-charge', 'head-smash', 'high-jump-kick', 'jump-kick', 'submission', 'take-down',\r\n    'wild-charge', 'light-of-ruin', 'volt-tackle', 'wood-hammer'\r\n  ]);\r\n  const [biteMoves] = useState([ // Strong jaw.\r\n    'bite', 'crunch', 'fire-fang', 'fishious-rend', 'hyper-fang', 'ice-fang', 'jaw-lock', 'poison-fang', 'psychic-fangs', 'thunder-fang'\r\n  ]);\r\n  const [pulseMoves] = useState([ // Mega launcher.\r\n    'aura-sphere', 'dark-pulse', 'dragon-pulse', 'heal-pulse', 'origin-pulse', 'terrain-pulse', 'water-pulse'\r\n  ]);\r\n  const [soundMoves] = useState([ // Liquid voice.\r\n    'boomburst', 'bug-buzz', 'chatter', 'clanging-scales', 'disarming-voice', 'echoed-voice', 'eerie-spell', 'hyper-voice',\r\n    'overdrive', 'relic-song', 'round', 'snarl', 'snore', 'uproar'\r\n  ]);\r\n  const [healMoves] = useState([ // Triage.\r\n    'draining-kiss', 'floral-healing', 'giga-drain', 'rest', 'synthesis', 'absorb', 'drain-punch', 'dream-eater', 'heal-order',\r\n    'heal-pulse', 'healing-wish', 'horn-leech', 'leech-life', 'lunar-dance', 'mega-drain', 'milk-drink', 'moonlight', 'morning-sun',\r\n    'oblivion-wing', 'parabolic-charge', 'purify', 'recover', 'roost', 'shore-up', 'slack-off', 'soft-boiled', 'strength-sap',\r\n    'swallow', 'wish'\r\n  ]);\r\n  const [contactMoves] = useState([ // Tough claws, unseen fist.\r\n    'accelerock', 'acrobatics', 'aerial-ace', 'anchor-shot', 'aqua-jet', 'aqua-tail', 'arm-thrust', 'assurance', 'astonish', 'avalanche', \r\n    'behemoth-bash', 'behemoth-blade', 'bide', 'bind', 'bite', 'blaze-kick', 'body-press', 'body-slam', 'bolt-beak', 'bolt-strike', 'bounce', 'branch-poke', 'brave-bird', 'breaking-swipe', 'brick-break', 'brutal-swing', 'bug-bite', 'bullet-punch',\r\n    'chip-away', 'circle-throw', 'clamp', 'close-combat', 'comet-punch', 'constrict', 'counter', 'covet', 'crabhammer', 'cross-chop', 'cross-poison', 'crunch', 'crush-claw', 'crush-grip', 'cut',\r\n    'darkest-lariat', 'dig', 'dive', 'dizzy-punch', 'double-edge', 'double-hit', 'double-iron-bash', 'double-kick', 'double-slap', 'dragon-ascent', 'dragon-claw', 'dragon-hammer', 'dragon-rush', 'dragon-tail', 'draining-kiss', 'drain-punch', 'drill-peck', 'drill-run', 'dual-chop', 'dual-wingbeat', 'dynamic-punch',\r\n    'endeavor', 'extreme-speed',\r\n    'facade', 'fake-out', 'false-surrender', 'false-swipe', 'feint-attack', 'fell-stinger', 'fire-fang', 'fire-lash', 'fire-punch', 'first-impression', 'fishious-rend', 'flail', 'flame-charge', 'flame-wheel', 'flare-blitz', 'flip-turn', 'floaty-fall', 'fly', 'flying-press', 'focus-punch', 'force-palm', 'foul-play', 'frustration', 'fury-attack', 'fury-cutter', 'fury-swipes',\r\n    'gear-grind', 'giga-impact', 'grass-knot', 'grassy-glide', 'guillotine', 'gyro-ball',\r\n    'hammer-arm', 'headbutt', 'head-charge', 'head-smash', 'heart-stamp', 'heat-crash', 'heavy-slam', 'high-horsepower', 'high-jump-kick', 'hold-back', 'horn-attack', 'horn-drill', 'horn-leech', 'hyper-fang',\r\n    'ice-ball', 'ice-fang', 'ice-hammer', 'ice-punch', 'infestation', 'iron-head', 'iron-tail',\r\n    'jaw-lock', 'jump-kick', \r\n    'karate-chop', 'knock-off', \r\n    'lash-out', 'last-resort', 'leaf-blade', 'leech-life', 'lick', 'liquidation', 'low-kick', 'low-sweep', 'lunge',\r\n    'mach-punch', 'megahorn', 'mega-kick', 'mega-punch', 'metal-claw', 'meteor-mash', 'multi-attack', \r\n    'needle-arm', 'night-slash', 'nuzzle', \r\n    'outrage', \r\n    'payback', 'peck', 'petal-dance', 'phantom-force', 'plasma-fists', 'play-rough', 'pluck', 'poison-fang', 'poison-jab', 'poison-tail', 'pound', 'power-trip', 'power-up-punch', 'power-whip', 'psychic-fangs', 'punishment', 'pursuit', \r\n    'quick-attack', \r\n    'rage', 'rapid-spin', 'razor-shell', 'retaliate', 'return', 'revenge', 'reversal', 'rock-climb', 'rock-smash', 'rolling-kick', 'rollout', \r\n    'sacred-sword', 'scratch', 'seismic-toss', 'shadow-claw', 'shadow-force', 'shadow-punch', 'shadow-sneak', 'shadow-strike', 'sizzly-slide', 'skitter-smack', 'skull-bash', 'sky-drop', 'sky-uppercut', 'slam', 'slash', 'smart-strike', 'smelling-salts', 'snap-trap', 'solar-blade', 'spark', 'spectral-thief', 'spirit-break', 'steamroller', 'steel-roller', 'steel-wing', 'stomp', 'stomping-tantrum', 'storm-throw', 'strength', 'struggle', 'submission', 'sucker-punch', 'sunsteel-strike', 'super-fang', 'superpower', 'surging-strikes', \r\n    'tackle', 'tail-slap', 'take-down', 'thief', 'thrash', 'throat-chop', 'thunder-fang', 'thunderous-kick', 'thunder-punch', 'triple-axel', 'triple-kick', 'trop-kick', 'trump-card', \r\n    'u-turn', \r\n    'v-create',\r\n    'veevee-volley', 'vine-whip', 'vise-grip', 'vital-throw', 'volt-tackle',\r\n    'wake-up-slap', 'waterfall', 'wicked-blow', 'wild-charge', 'wing-attack', 'wood-hammer', 'wrap', 'wring-out', \r\n    'x-scissor',\r\n    'zen-headbutt', 'zing-zap', 'zippy-zap'\r\n  ]);\r\n  const [consumableItemMoves] = useState([ // Consumable items. Reverse branch logic trigger.\r\n    'recycle'\r\n  ]);\r\n  const [badItemMoves] = useState([ // Bad items.\r\n    'bestow', 'fling', 'switcheroo', 'trick'\r\n  ]);\r\n  const [badAbilityMoves] = useState([ // Bad abilities.\r\n    'entrainment', 'skill-swap'\r\n  ]);\r\n  // Abilities.\r\n  const [terrainAbilities] = useState([ // Terrain extender.\r\n    'electric-surge', 'grassy-surge', 'misty-surge', 'psychic-surge'\r\n  ]);\r\n  const [orbAbilities] = useState([ // Toxic and flame orb.\r\n    'guts', 'magic-guard', 'quick-feet', 'marvel-scale'\r\n  ]);\r\n  const [consumableItemAbilities] = useState([ // Consumable items. Reverse branch logic trigger.\r\n    'pickup', 'unburden', 'pickpocket', 'magician'\r\n  ]);  \r\n  // Items.\r\n  const [consumableItems] = useState([ // Consumable items. Reverse branch logic.\r\n    'absorb-bulb', 'air-balloon', 'cell-battery', 'eject-button' ,'electric-seed', 'focus-sash', 'grassy-seed',\r\n    'luminous-moss', 'mental-herb', 'misty-seed', 'power-herb', 'psychic-seed', 'red-card', 'white-herb', 'snowball', 'weakness-policy',\r\n    'bug-gem', 'dark-gem', 'dragon-gem', 'electric-gem', 'fairy-gem', 'fighting-gem', 'fire-gem', 'flying-gem',\r\n    'ghost-gem', 'grass-gem', 'ground-gem', 'ice-gem', 'poison-gem', 'psychic-gem', 'rock-gem', 'steel-gem', 'water-gem'\r\n  ]);  \r\n  const [plateItems] = useState([ // Plate items. Reverse branch logic.\r\n    'draco-plate', 'dread-plate', 'earth-plate', 'fist-plate', 'flame-plate', 'icicle-plate', 'insect-plate', 'iron-plate',\r\n    'meadow-plate', 'mind-plate', 'pixie-plate', 'sky-plate', 'splash-plate', 'spooky-plate', 'stone-plate', 'toxic-plate', 'zap-plate'\r\n  ]);  \r\n  const [memoryItems] = useState([ // Memory items. Reverse branch logic.\r\n    'bug-memory', 'dark-memory', 'dragon-memory', 'electric-memory', 'fairy-memory', 'fighting-memory', 'fire-memory', 'flying-memory',\r\n    'ghost-memory', 'grass-memory', 'ground-memory', 'ice-memory', 'poison-memory', 'psychic-memory', 'rock-memory', 'steel-memory', 'water-memory'\r\n  ]);\r\n\r\n  // Selections.\r\n  const [selectionsNeeded] = useState({\r\n    pokemons: 6,    \r\n    movesets: 6,\r\n    moves: 4,\r\n    abilities: 6,\r\n    items: 6\r\n  });\r\n  const [selectionsMade, setSelectionsMade] = useState({\r\n    pokemons: 0,\r\n    movesets: 0,\r\n    moves: [0, 0, 0, 0, 0, 0],\r\n    abilities: 0,\r\n    items: 0\r\n  });\r\n  const [sectionsCompleted, setSectionsCompleted] = useState({\r\n    pokemons: false,\r\n    movesets: false,\r\n    moves: false,\r\n    abilities: false,\r\n    items: false\r\n  });  \r\n\r\n  // ----- GENERATION -----\r\n  // Fetch lists from api on mount.\r\n  useEffect (() => {\r\n    let cancel = false;\r\n    setLoading(true);  \r\n\r\n    async function fetchData() {      \r\n      const pokemonResults = await axios.get(`${apiUrl}pokemon?limit=${pokemonCount}`);\r\n      const moveResults = await axios.get(`${apiUrl}move?limit=${moveCount}`);\r\n      const abilityResults = await axios.get(`${apiUrl}ability?limit=${abilityCount}`);\r\n      let itemResults = [];\r\n      for(let i = 0; i < itemCount.length; i++){\r\n        itemResults.push(await (await axios.get(`${apiUrl}item?limit=${itemCount[i]}&offset=${itemOffset[i]}`)).data.results);\r\n      };      \r\n      itemResults = [].concat.apply([], itemResults);\r\n      const typeResults = await axios.get(`${apiUrl}type?limit=${typeCount}`);\r\n      const natureResults = await axios.get(`${apiUrl}nature?nature=${natureCount}`);\r\n      if(!cancel) {\r\n        setPokemonList(pokemonResults.data.results);\r\n        setMoveList(moveResults.data.results);\r\n        setAbilityList(abilityResults.data.results);\r\n        setItemList(itemResults);\r\n        setTypeList(typeResults.data.results);\r\n        setNatureList(natureResults.data.results);\r\n        setLoading(false);              \r\n      }\r\n    };\r\n    fetchData();\r\n    \r\n    return () => cancel = true;\r\n    // Disable dependency warning, itemCount and itemOffset will never change.\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps    \r\n  }, []);\r\n\r\n  function generateOptions() {        \r\n    setPokemonOptions([]);\r\n    setMovesetOptions([]); \r\n    setAbilityOptions([]);\r\n    setItemOptions([]);\r\n    setOptionsData({\r\n      movesetsPerType: [],\r\n      usableTypes: [],\r\n      reverseOptions: []\r\n    });\r\n    setGenerationStep(0);\r\n    setGenerating(true);    \r\n  }\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a new set of pokemon options.\r\n    async function getPokemonOptions() {\r\n      let pokemons = [];\r\n      let shinyIndex = Math.round((Math.random()*100 / 12.5));      \r\n\r\n      for (let index = 0; index < randomRolls.pokemons; index++) {\r\n        const pokemon = await getNewPokemon(pokemons, index);\r\n        const species = await axios.get(pokemon.species.url);\r\n        // visuals\r\n        pokemon.gender_rate = species.data.gender_rate;\r\n        if(pokemon.gender_rate < 0)\r\n          pokemon.gender = \"genderless\";\r\n        else if(pokemon.gender_rate === 0)\r\n          pokemon.gender = \"male\";\r\n        else if(pokemon.gender_rate === 8)\r\n          pokemon.gender = \"female\";\r\n        else {\r\n          pokemon.gender = (Math.random()*101) <= (pokemon.gender_rate * 12.5) ? \"female\" : \"male\";\r\n        }        \r\n        pokemon.has_gender_differences = species.data.has_gender_differences;        \r\n        pokemon.is_mythical = species.data.is_mythical;\r\n        pokemon.is_legendary = species.data.is_legendary;        \r\n        pokemon.shiny = (index === shinyIndex);\r\n        pokemon.level = pokemon.shiny ? 60 : 50;\r\n        // stats        \r\n        pokemon.stats.map(s => {          \r\n          s.ev = 0;\r\n          s.iv = -1;\r\n          return s;\r\n        });                       \r\n        let stat = null;\r\n        for(let i = 0; i < 3; i++){\r\n          do{\r\n            stat = pokemon.stats[Math.floor(Math.random()*pokemon.stats.length)];\r\n          } while (stat.ev > 0)\r\n          switch(i){\r\n            case 0:\r\n            case 1:\r\n                stat.ev = 252;\r\n              break;\r\n            case 2:\r\n                stat.ev = 4;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }        \r\n        for(let i = 0; i < 6; i++){\r\n          do{\r\n            stat = pokemon.stats[Math.floor(Math.random()*pokemon.stats.length)];\r\n          } while (stat.iv >= 0)\r\n          switch(i){\r\n            case 0:\r\n            case 1:\r\n            case 2:\r\n                stat.iv = 31;\r\n              break;\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n                stat.iv = Math.floor(Math.random() * 32);\r\n              break;\r\n            default:\r\n              break;\r\n          }          \r\n        }\r\n        pokemon.nature = natureList[Math.floor(Math.random()*natureList.length)];\r\n        const nature = await axios.get(pokemon.nature.url);\r\n        pokemon.nature.increased = nature.data.increased_stat;\r\n        pokemon.nature.decreased = nature.data.decreased_stat;\r\n        pokemon.stats.map((s, i) => {\r\n          if(i === 0)\r\n            s.calculated_stat = Math.floor((s.base_stat * 2 + s.iv + (s.ev/4)) * pokemon.level / 100 + 10 + pokemon.level);\r\n          else{\r\n            s.calculated_stat = (s.base_stat * 2 + s.iv + (s.ev/4)) * pokemon.level / 100 + 5;\r\n            if(pokemon.nature.increased && pokemon.nature.increased.name === s.stat.name)\r\n              s.calculated_stat *= 1 + 0.1;\r\n            else if(pokemon.nature.decreased && pokemon.nature.decreased.name === s.stat.name)\r\n              s.calculated_stat *= 1 - 0.1;\r\n            s.calculated_stat = Math.floor(s.calculated_stat);\r\n          }\r\n          return s;\r\n        });\r\n        pokemon.stats.push({name: 'total', base_stat: getTotalStats(pokemon.stats)});\r\n        // builder\r\n        pokemon.selected = false;\r\n        pokemon.moveset = null;\r\n        pokemon.ability = null;\r\n        pokemon.item = null;                        \r\n\r\n        pokemons.push(pokemon);\r\n        if(!cancel)\r\n          setPokemonOptions([...pokemons]); \r\n      }\r\n      if(!cancel)\r\n        setGenerationStep(1);\r\n    }\r\n\r\n    // Get a new single pokemon option.\r\n    async function getNewPokemon(currentPokemons) {    \r\n      let newPokemon = '';\r\n      let finalPokemon = '';\r\n  \r\n      do {          \r\n          let pokemon = pokemonList[Math.floor(Math.random()*pokemonList.length)];\r\n          //console.log('initial: '+pokemon.name);\r\n\r\n          const initialPokemon = await axios.get(`${apiUrl}pokemon/${pokemon.name}`);\r\n          const species = await axios.get(initialPokemon.data.species.url);\r\n          const evolutions = await axios.get(species.data.evolution_chain.url);\r\n          \r\n          // Get an array of evolutions.\r\n          let evoChain = [];\r\n          let evoData = evolutions.data.chain;\r\n          do {                        \r\n              // Current.\r\n              evoChain.push(evoData.species.name);            \r\n              let numberOfEvolutions = evoData['evolves_to'].length;  \r\n                                    \r\n              // Branching evolutions.\r\n              if(numberOfEvolutions > 1) {\r\n                let nextSpecies = [];\r\n                let lastSpecies = [];\r\n                for (let i = 0; i < numberOfEvolutions; i++) {                  \r\n                  nextSpecies.push(evoData.evolves_to[i].species.name);\r\n                  \r\n                  // Branch continuation.\r\n                  if(evoData.evolves_to[i].hasOwnProperty('evolves_to') && evoData.evolves_to[i].evolves_to.length > 0)\r\n                    lastSpecies.push(evoData.evolves_to[i].evolves_to[0].species.name);\r\n                }\r\n                evoChain.push(nextSpecies);\r\n  \r\n                if(lastSpecies.length > 0)\r\n                evoChain.push(lastSpecies);\r\n                \r\n                // Stop the chain, all branching evolutions are symmetrical.\r\n                evoData = null;\r\n              }\r\n              else {                \r\n                // Evolution.\r\n                evoData = evoData['evolves_to'][0];\r\n              }\r\n                        \r\n          } while (!!evoData && evoData.hasOwnProperty('evolves_to')); \r\n          //console.log('evolutions: '+evoChain);       \r\n          \r\n          // Get the/a final evolution.\r\n          let finalEvolution = evoChain[evoChain.length - 1];\r\n          if(Array.isArray(finalEvolution)){\r\n            finalEvolution = finalEvolution[Math.floor(Math.random()*finalEvolution.length)];        \r\n          }\r\n          //console.log('final evolution: '+finalEvolution);\r\n  \r\n          // Get the varieties for the final evolution.\r\n          const finalSpecies = await axios.get(`${apiUrl}pokemon-species/${finalEvolution}`);\r\n          let varieties = [];\r\n          finalSpecies.data.varieties.forEach((v, i) => {\r\n            varieties.push(finalSpecies.data.varieties[i].pokemon.name)\r\n          });                \r\n          //console.log('final evolution varieties: '+varieties);\r\n  \r\n          // Filter varieties for more balance.\r\n          varieties = varieties.filter(v => {          \r\n            return !FindKeywords(v, '-', pokemonFilter, pokemonAllow);            \r\n          });\r\n          //console.log('filtered varieties: '+varieties);        \r\n  \r\n          // Get the final pokemon from the varieties.\r\n          finalPokemon = varieties[Math.floor(Math.random()*varieties.length)];\r\n          //console.log('final pokemon: '+finalPokemon);\r\n  \r\n      } while (!finalPokemon || checkDuplicatedName(currentPokemons, finalPokemon))   \r\n      //console.log(finalPokemon); \r\n      newPokemon = await axios.get(`${apiUrl}pokemon/${finalPokemon}`);\r\n      return newPokemon.data\r\n    };\r\n\r\n    if(generating && generationStep === 0 && pokemonList.length > 0){      \r\n      getPokemonOptions();      \r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep, pokemonList, randomRolls, pokemonFilter, pokemonAllow, natureList])\r\n\r\n  // Helper functions for usability checks.\r\n  const getPokemonUsability = useCallback((pokemons) => {    \r\n    return pokemonOptions.find(p => pokemons.includes(p.name));\r\n  }, [pokemonOptions]);\r\n\r\n  const getRandomPokemonType = useCallback((exclude) => {   \r\n    let types = typeList.filter(t => !exclude.includes(t.name)); \r\n    return types[Math.floor(Math.random()*types.length)].name;\r\n  }, [typeList]);\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a set of moveset options.  \r\n    async function getMovesetOptions() {              \r\n      let movesets = [];            \r\n\r\n      for (let index = 0; index < randomRolls.movesets; index++) {\r\n        const moveset = await getNewMoveset()\r\n        movesets.push(moveset);\r\n        if(!cancel)\r\n          setMovesetOptions([...movesets]); \r\n      }  \r\n      if(!cancel)\r\n        setGenerationStep(2);\r\n    }       \r\n\r\n    // Get a new moveset option.\r\n    async function getNewMoveset() {    \r\n      let newMoveset = [];\r\n      let move = '';\r\n      let status = false;\r\n      let statusMoves = 0;  \r\n      let usable = true;  \r\n      let combo = '';\r\n      \r\n      for (let index = 0; index < randomRolls.moves; index++) {            \r\n        do{        \r\n          if(combo){\r\n            move = {name: combo};\r\n            combo = '';\r\n          }\r\n          else\r\n            move = moveList[Math.floor(Math.random()*moveList.length)];\r\n          move = await axios.get(`${apiUrl}move/${move.name}`);\r\n          status = move.data.damage_class && move.data.damage_class.name === 'status'; \r\n          usable = true;       \r\n\r\n          switch(move.data.name){            \r\n            case 'swallow':\r\n            case 'spit-up':\r\n              // Check space for combo moves.\r\n              if(!newMoveset.find(m => m.name === 'stockpile')){\r\n                usable = (randomRolls.moves - newMoveset.length) >= 2;\r\n                if(usable){\r\n                  if(move.data.name === 'swallow' && (moveStatusLimit - statusMoves) >= 2)\r\n                    combo = 'stockpile';\r\n                  else if(move.data.name === 'spit-up' && (moveStatusLimit - statusMoves) >= 1)\r\n                    combo = 'stockpile';\r\n                  else if((moveStatusLimit - statusMoves) <= 0)\r\n                    usable = false;\r\n                }                                  \r\n              }                          \r\n              //console.log(move.data.name+\": \"+usable);\r\n              break;              \r\n            case 'stockpile':\r\n              // Check space for combo moves.\r\n              if(!newMoveset.find(m => m.name === 'swallow') && !newMoveset.find(m => m.name === 'spit-up')){\r\n                usable = (randomRolls.moves - newMoveset.length) >= 2;\r\n                if(usable){\r\n                  if((moveStatusLimit - statusMoves) >= 2)\r\n                    combo = Math.random() < 0.5 ? 'swallow' : 'spit-up';\r\n                  else if((moveStatusLimit - statusMoves) >= 1)\r\n                    combo = 'spit-up';\r\n                  else if((moveStatusLimit - statusMoves) <= 0)\r\n                    usable = false;\r\n                }\r\n              }\r\n              //console.log(move.data.name+\": \"+usable);\r\n              break;            \r\n            case 'hyperspace-fury':\r\n              // Check for specific pokemon.\r\n              usable = getPokemonUsability(['hoopa-unbound']);\r\n              break;\r\n            case 'dark-void':\r\n              // Check for specific pokemon.\r\n              usable = getPokemonUsability(['darkrai']);\r\n              break;\r\n            case 'aura-wheel':\r\n              // Check for specific pokemon.\r\n              usable = getPokemonUsability(['morpeko']);\r\n              break;\r\n            case 'hidden-power':\r\n              // Set a random type other than normal and fairy.\r\n              move.data.type.name = getRandomPokemonType(['normal', 'fairy']);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } while (checkDuplicatedName(newMoveset, move.data.name) || FindKeywords(move.data.name, '-', moveFilter, moveAllow) ||\r\n                (status && statusMoves >= moveStatusLimit) || !usable)\r\n        move.data.selected = false;\r\n        newMoveset.push(move.data);      \r\n        if(status){\r\n          statusMoves = statusMoves + 1;\r\n          status = false;\r\n        }\r\n        //console.log(move.data.name);\r\n        //console.log(statusMoves);\r\n      }\r\n      //console.log('----- done -----');\r\n      return newMoveset;\r\n    }\r\n\r\n    if(generating && generationStep === 1 && moveList.length > 0){      \r\n      getMovesetOptions();\r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep, moveList, randomRolls, moveFilter, moveAllow, moveStatusLimit,\r\n      getPokemonUsability, getRandomPokemonType]);\r\n\r\n  // Respond to moveset options generated completely.\r\n  useEffect (() => {  \r\n    let cancel = false;\r\n\r\n    if(generating && generationStep === 2 && movesetOptions.length >= randomRolls.movesets){\r\n      let msPerType = [];\r\n\r\n      typeList.forEach(type => {\r\n        let msInType = {name: type.name, movesets: 0};\r\n        movesetOptions.forEach(ms => {      \r\n          if(ms.find(m => m.type.name === type.name && m.damage_class.name !== 'status')){\r\n            msInType.movesets += 1;          \r\n          }\r\n        });\r\n        msPerType.push(msInType);        \r\n      });       \r\n      let uTypes = msPerType.filter(t => t.movesets !== 0).map(t => {return t.name});   \r\n\r\n      if(!cancel){\r\n        setOptionsData(s => {return {...s, movesetsPerType: msPerType, usableTypes: uTypes} });      \r\n        setGenerationStep(3);\r\n      }\r\n    }    \r\n    return () => cancel = true;\r\n  }, [generating, generationStep, movesetOptions, randomRolls, typeList]);  \r\n\r\n  // Helper functions for usability checks.\r\n  const getPokemonTypeUsability = useCallback((type) => {\r\n    return pokemonOptions.find(p => p.types.find(t => t.type.name === type));\r\n  }, [pokemonOptions])  \r\n\r\n  const getMovesetTypeUsability = useCallback((types) => {\r\n    //console.log(types);\r\n    let usable = types.find(t => optionsData.usableTypes.includes(t));\r\n    return usable;\r\n  }, [optionsData]);\r\n\r\n  const getTypeFromEffect = useCallback((effect) => {\r\n    return effect.replace(/-/g, \" \").split(\" \").find(keyword => optionsData.usableTypes.includes(keyword));\r\n  }, [optionsData]);\r\n\r\n  const getMovesetTypeUsabilityForItems = useCallback((item, currentItems) => {\r\n    let usable = false;\r\n    let type = getTypeFromEffect(item.effect_entries.find(e => e.language.name === 'en').effect.toLowerCase());\r\n    if(type){  \r\n      // Check current items.          \r\n      let itemsOfType = 0;\r\n      currentItems.forEach(ci => {\r\n        if((ci.category.name === 'type-enhancement' || ci.category.name === 'plates') && \r\n          getTypeFromEffect(ci.effect_entries.find(e => e.language.name === 'en').effect.toLowerCase()) === type)                \r\n        itemsOfType += 1;              \r\n      });    \r\n      usable = optionsData.movesetsPerType.find(mt => mt.name === type && itemsOfType < mt.movesets);\r\n    }\r\n    return usable;\r\n  }, [optionsData, getTypeFromEffect]);\r\n\r\n  const getSpecificOptionsUsabilityForItems = useCallback((moves, abilities, items, currentItems) => {\r\n    let usable = false;            \r\n    let maxOptions = 0;\r\n    let itemsOfType = 0;\r\n\r\n    // Get max options.\r\n    if(moves){      \r\n      movesetOptions.forEach(mo => {\r\n        if(mo.find(m => moves.includes(m.name)))\r\n          maxOptions += 1\r\n      });\r\n    }    \r\n    if(abilities){      \r\n      if(abilityOptions.find(a => abilities.includes(a.name)))\r\n        maxOptions += 1;\r\n    }                    \r\n    // Get current items.  \r\n    if(items){    \r\n      currentItems.forEach(ci => {                \r\n        if(ci.name.split('-').find(keyword => items.includes(keyword)))\r\n          itemsOfType += 1;\r\n      });    \r\n      usable = (itemsOfType < maxOptions);\r\n    }    \r\n    else{\r\n      // Specific case for plates.\r\n      // Get current items.\r\n      currentItems.forEach(ci => {        \r\n        if(ci.category.name === 'plates' &&\r\n          !optionsData.usableTypes.includes(getTypeFromEffect(ci.effect_entries.find(e => e.language.name === 'en').effect.toLowerCase())))\r\n          itemsOfType += 1;        \r\n      });\r\n      usable = (itemsOfType < maxOptions);\r\n    }\r\n\r\n    return usable;\r\n  }, [optionsData, movesetOptions, abilityOptions, getTypeFromEffect]);\r\n\r\n  const getMoveMechanicUsability = useCallback((mechanic, exactMoves) => {\r\n    let moveNames = movesetOptions.map(ms => { return ms.map(m => { return m.name } ) });\r\n    moveNames = [].concat.apply([], moveNames);\r\n    \r\n    if(exactMoves && exactMoves.length > 0){      \r\n      return moveNames.find(name => exactMoves.includes(name));\r\n    }\r\n    else {\r\n      switch(mechanic){\r\n        case 'charge':\r\n          return moveNames.find(name => chargeMoves.includes(name));\r\n        case 'bind':\r\n          return moveNames.find(name => bindMoves.includes(name));\r\n        case 'drain':\r\n          return moveNames.find(name => drainMoves.includes(name));\r\n        case 'terrain':\r\n          return moveNames.find(name => terrainMoves.includes(name));\r\n        case 'barrier':        \r\n          return moveNames.find(name => barrierMoves.includes(name));\r\n        case 'orb':        \r\n          return moveNames.find(name => orbMoves.includes(name));\r\n        case 'punch':        \r\n          return moveNames.find(name => punchMoves.includes(name));\r\n        case 'multistrike':        \r\n          return moveNames.find(name => multistrikeMoves.includes(name));\r\n        case 'recoil':        \r\n          return moveNames.find(name => recoilMoves.includes(name));\r\n        case 'bite':        \r\n          return moveNames.find(name => biteMoves.includes(name));\r\n        case 'pulse':        \r\n          return moveNames.find(name => pulseMoves.includes(name));\r\n        case 'sound':        \r\n          return moveNames.find(name => soundMoves.includes(name));\r\n        case 'heal':        \r\n          return moveNames.find(name => healMoves.includes(name));\r\n        case 'contact':        \r\n          return moveNames.find(name => contactMoves.includes(name));\r\n        case 'bad-item':        \r\n          return moveNames.find(name => badItemMoves.includes(name));\r\n        case 'bad-ability':        \r\n          return moveNames.find(name => badAbilityMoves.includes(name));\r\n        default:\r\n          return false;\r\n      }    \r\n    }\r\n  }, [movesetOptions, chargeMoves, bindMoves, drainMoves, terrainMoves, barrierMoves, orbMoves, punchMoves, badItemMoves,\r\n      multistrikeMoves, recoilMoves, biteMoves, pulseMoves, soundMoves, healMoves, contactMoves, badAbilityMoves]);\r\n\r\n  const getAbilityMechanicUsability = useCallback((mechanic, exactAbilities) => {\r\n    let abilityNames = abilityOptions.map(a => { return a.name } );\r\n\r\n    if(exactAbilities && exactAbilities.length > 0){     \r\n      return abilityNames.find(name => exactAbilities.includes(name));\r\n    }\r\n    else {\r\n      switch(mechanic){\r\n        case 'terrain':\r\n          return abilityNames.find(name => terrainAbilities.includes(name));      \r\n        case 'orb':\r\n          return abilityNames.find(name => orbAbilities.includes(name));\r\n        default:\r\n          return false;\r\n      }    \r\n    }\r\n  }, [abilityOptions, terrainAbilities, orbAbilities])\r\n\r\n  // Helper funciton for usability checks.\r\n  const getReverseOption = useCallback((index) => {\r\n    if(optionsData.reverseOptions[index])\r\n      return optionsData.reverseOptions[index]\r\n    else\r\n      return null;      \r\n  }, [optionsData])\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a set of ability options.\r\n    async function getAbilityOptions() {      \r\n      let abilities = [];            \r\n\r\n      for (let index = 0; index < randomRolls.abilities; index++) {\r\n        const ability = await getNewAbility(abilities);\r\n        abilities.push(ability);\r\n        if(!cancel)\r\n          setAbilityOptions([...abilities]); \r\n      }                 \r\n      if(!cancel)\r\n        setGenerationStep(4);\r\n    }\r\n\r\n    // Get a new ability option.\r\n    async function getNewAbility(currentAbilities) {    \r\n      let newAbility = ''; \r\n      let usable = true;      \r\n    \r\n      do{        \r\n        let ability = abilityList[Math.floor(Math.random()*abilityList.length)];      \r\n        newAbility = await axios.get(`${apiUrl}ability/${ability.name}`);     \r\n        usable = true;    \r\n                               \r\n        switch(newAbility.data.name){\r\n          case 'iron-fist':\r\n            // Check for punch moves.\r\n            usable = getMoveMechanicUsability('punch');            \r\n            break;                       \r\n          case 'skill-link':\r\n            // Check for multistrike moves.\r\n            usable = getMoveMechanicUsability('multistrike');            \r\n            break;\r\n          case 'reckless':\r\n            // Check for recoil/crash moves.\r\n            usable = getMoveMechanicUsability('recoil');            \r\n            break;\r\n          case 'strong-jaw':\r\n            // Check for bite moves.\r\n            usable = getMoveMechanicUsability('bite');            \r\n            break;\r\n          case 'mega-launcher':\r\n            // Check for pulse/aura moves.\r\n            usable = getMoveMechanicUsability('pulse');            \r\n            break;\r\n          case 'liquid-voice':\r\n            // Check for sound moves.\r\n            usable = getMoveMechanicUsability('sound');\r\n            break;\r\n          case 'punk-rock':\r\n            // Check for sound moves.\r\n            usable = (getMoveMechanicUsability('sound') || getMoveMechanicUsability('', ['sparkling-aria']));\r\n            break;\r\n          case 'triage':\r\n            // Check for heal moves.\r\n            usable = getMoveMechanicUsability('heal');\r\n            break;          \r\n          case 'flash-fire':\r\n          case 'blaze':\r\n            // Check for fire moves.\r\n            usable = getMovesetTypeUsability(['fire']);\r\n            break;\r\n          case 'overgrow':\r\n            // Check for grass moves.\r\n            usable = getMovesetTypeUsability(['grass']);\r\n            break;\r\n          case 'torrent':\r\n            // Check for water moves.\r\n            usable = getMovesetTypeUsability(['water']);\r\n            break;\r\n          case 'swarm':\r\n            // Check for bug moves.\r\n            usable = getMovesetTypeUsability(['bug']);\r\n            break;\r\n          case 'scrappy':\r\n            // Check for normal or fighting moves.\r\n            usable = getMovesetTypeUsability(['normal', 'fighting']);\r\n            break;\r\n          case 'sand-force':\r\n            // Check for rock, ground and steel moves.\r\n            usable = getMovesetTypeUsability(['rock', 'ground', 'steel']);\r\n            break;\r\n          case 'gale-wings':\r\n            // Check for flying moves.\r\n            usable = getMovesetTypeUsability(['flying']);\r\n            break;\r\n          case 'dark-aura':\r\n            // Check for dark moves.\r\n            usable = getMovesetTypeUsability(['dark']);\r\n            break;\r\n          case 'fairy-aura':\r\n            // Check for fairy moves.\r\n            usable = getMovesetTypeUsability(['fairy']);\r\n            break;\r\n          case 'steelworker':\r\n            // Check for steel moves.\r\n            usable = getMovesetTypeUsability(['steel']);\r\n            break;\r\n          case 'transistor':\r\n            // Check for electric moves.\r\n            usable = getMovesetTypeUsability(['electric']);\r\n            break;\r\n          case 'dragons-maw':\r\n            // Check for dragon moves.\r\n            usable = getMovesetTypeUsability(['dragon']);\r\n            break;            \r\n          case 'refrigerate':\r\n          case 'pixilate':\r\n          case 'galvanize':\r\n          case 'aerilate': \r\n            // Check for normal moves.\r\n            usable = getMovesetTypeUsability(['normal']);\r\n            break;\r\n          case 'tough-claws':\r\n          case 'unseen-fist':\r\n            // Check for contact moves.\r\n            usable = getMoveMechanicUsability('contact');\r\n            break; \r\n          case 'multitype':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['arceus']);\r\n            break;\r\n          case 'rks-system':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['silvally']);\r\n            break;\r\n          case 'ice-face':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['eiscue-ice', 'eiscue-noice']);\r\n            break;\r\n          case 'hunger-switch':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['morpeko']);\r\n            break;\r\n          case 'forecast':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['castform', 'castform-sunny', 'castform-rainy', 'castform-snowy']);\r\n            break;\r\n          case 'flower-gift':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['cherrim']);\r\n            break;\r\n          case 'zen-mode':\r\n            // Check for specific pokemon. No effect: 'darmanitan-zen', 'darmanitan-zen-galar'\r\n            usable = getPokemonUsability(['darmanitan-standard', 'darmanitan-standard-galar']);\r\n            break;\r\n          case 'battle-bond':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['greninja']);\r\n            break;\r\n          case 'stance-change':\r\n            // Check for specific pokemon.\r\n            usable = (getPokemonUsability(['aegislash-shield']) || (getPokemonUsability(['aegislash-blade']) && getMoveMechanicUsability('', ['kings-shield'])));\r\n            break;\r\n          case 'power-construct':\r\n            // Check for specific pokemon. No effect: 'zygarde-complete'\r\n            usable = getPokemonUsability(['zygarde-10', 'zygarde-50',]);\r\n            break;\r\n          case 'shields-down':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['minior-meteror', 'minior-core']);\r\n            break;\r\n          case 'disguise':\r\n            // Check for specific pokemon. No effect: 'mimikyu-busted'\r\n            usable = getPokemonUsability(['mimikyu-disguised']);\r\n            break;\r\n          case 'gulp-missile':\r\n            // Check for specific pokemon.\r\n            usable = (getPokemonUsability(['cramorant']) && getMoveMechanicUsability('', ['surf', 'dive']));\r\n            break;\r\n          case 'truant':\r\n          case 'stall':\r\n          case 'klutz':\r\n          case 'slow-start':\r\n          case 'defeatist': \r\n            // Check for bad abilities.\r\n            usable = getMoveMechanicUsability('bad-ability');\r\n            break;\r\n          default:\r\n            break;\r\n        }                  \r\n      } while (checkDuplicatedName(currentAbilities, newAbility.data.name) || FindKeywords(newAbility.data.name, '-', abilityFilter, abilityAllow) || !usable)\r\n      //console.log(newAbility.data.name);\r\n\r\n      return newAbility.data;\r\n    }\r\n\r\n    if(generating && generationStep === 3 && abilityList.length > 0){      \r\n      getAbilityOptions();\r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep, abilityList, randomRolls, abilityFilter, abilityAllow, \r\n      getMoveMechanicUsability, getMovesetTypeUsability, getPokemonUsability]);\r\n\r\n  // Respond to ability options generated completely.\r\n  useEffect (() => {  \r\n    let cancel = false;\r\n\r\n    if(generating && generationStep === 4 && abilityOptions.length >= randomRolls.abilities){\r\n\r\n      // Check abilities that change move types.\r\n      let msPerType = optionsData.movesetsPerType;            \r\n      msPerType.forEach(ms => {\r\n        switch(ms.name){\r\n          case 'normal':\r\n            if (abilityOptions.find(a => a.name === 'normalize'))\r\n              ms.movesets += 1;\r\n            break;\r\n          case 'ice':\r\n            if (abilityOptions.find(a => a.name === 'refrigerate'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          case 'fairy':\r\n            if (abilityOptions.find(a => a.name === 'pixilate'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          case 'electric':\r\n            if (abilityOptions.find(a => a.name === 'galvanize'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          case 'flying':\r\n            if (abilityOptions.find(a => a.name === 'aerilate'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          default:          \r\n            break;\r\n        }\r\n      })                                   \r\n      let uTypes = msPerType.filter(t => t.movesets !== 0).map(t => {return t.name});     \r\n\r\n      // Prepare options for possible reverse branch logic.\r\n      let rOptions = []; \r\n      let options =  movesetOptions.map(ms => ms.map(m => {return m.name}));\r\n      options.push(abilityOptions.map(a => {return a.name}));\r\n      options = [].concat.apply([], options);   \r\n\r\n      // Check for reverse branch logic options. \r\n      options.forEach(opt => {\r\n        if(!rOptions.includes('consumable') && [...consumableItemMoves, ...consumableItemAbilities].includes(opt))\r\n          rOptions.push('consumable');\r\n        else if(!rOptions.includes('plate') && opt === 'multitype')\r\n          rOptions.push('plate');\r\n        else if(!rOptions.includes('memory') && opt === 'rks-system')\r\n          rOptions.push('memory');\r\n      });          \r\n\r\n      if(!cancel){\r\n        setOptionsData(s => {return {...s, movesetsPerType: msPerType, usableTypes: uTypes, reverseOptions: rOptions} });     \r\n        setGenerationStep(5);\r\n      }\r\n    }    \r\n    return () => cancel = true;\r\n  }, [generating, generationStep, movesetOptions, abilityOptions, randomRolls, optionsData, \r\n      consumableItemMoves, consumableItemAbilities]);\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a set of item options.\r\n    async function getItemOptions() {          \r\n      let items = [];                  \r\n      for (let index = 0; index < randomRolls.items; index++) {\r\n        let itemType = getReverseOption(index);\r\n        let item = \"\";\r\n        if(itemType)\r\n          item = await getNewItem(items, itemType);\r\n        else\r\n          item = await getNewItem(items);\r\n        items.push(item);\r\n        if(!cancel)\r\n          setItemOptions([...items]); \r\n      }                 \r\n      if(!cancel)\r\n        setGenerationStep(6); \r\n    }\r\n\r\n    // Get a new item option.\r\n    async function getNewItem(currentItems, itemType) {    \r\n      let newItem = '';    \r\n      let usable = true; \r\n            \r\n      do{        \r\n        let item = \"\";\r\n        switch(itemType){\r\n          case 'consumable':\r\n            item = {name: consumableItems[Math.floor(Math.random()*consumableItems.length)]};\r\n            break;\r\n          case 'plate':\r\n            item = {name: plateItems[Math.floor(Math.random()*plateItems.length)]};\r\n            break;\r\n          case 'memory':\r\n            item = {name: memoryItems[Math.floor(Math.random()*memoryItems.length)]};\r\n            break;\r\n          default:\r\n            item = itemList[Math.floor(Math.random()*itemList.length)];      \r\n            break;\r\n        }        \r\n        newItem = await axios.get(`${apiUrl}item/${item.name}`);   \r\n        usable = true;    \r\n                               \r\n        switch(newItem.data.category.name){\r\n          case 'held-items':\r\n            switch(newItem.data.name){\r\n              case 'power-herb': \r\n                // Check for charge moves.               \r\n                usable = getMoveMechanicUsability('charge');                \r\n                break;\r\n              case 'grip-claw':\r\n                // Check for bind moves.\r\n                usable = getMoveMechanicUsability('bind');               \r\n                break;\r\n              case 'binding-band':\r\n                // Check for bind moves.\r\n                usable = getMoveMechanicUsability('bind');\r\n                break;\r\n              case 'big-root':\r\n                // Check for drain moves.\r\n                usable = getMoveMechanicUsability('drain');                \r\n                break;\r\n              case 'terrain-extender':\r\n                // Check for terrain moves or abilities.\r\n                usable = (getMoveMechanicUsability('terrain') || getAbilityMechanicUsability('terrain'));\r\n                break;\r\n              case 'heat-rock':                \r\n                // Check for harsh sunlight weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['sunny-day']) || getAbilityMechanicUsability('', ['drought']));\r\n                break;\r\n              case 'damp-rock':                \r\n                // Check for rain weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['rain-dance']) || getAbilityMechanicUsability('', ['drizzle']));\r\n                break;\r\n              case 'icy-rock':                \r\n                // Check for hail weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['hail']) || getAbilityMechanicUsability('', ['snow-warning']));\r\n                break;\r\n              case 'smooth-rock':                \r\n                // Check for sandstorm weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['sandstorm']) || getAbilityMechanicUsability('', ['sand-stream', 'sand-spit']));\r\n                break;\r\n              case 'black-sludge':                \r\n                // Check for poison pokemons.\r\n                usable = getPokemonTypeUsability('poison');                \r\n                break;\r\n              case 'light-clay':                \r\n                // Check for barrier moves.\r\n                usable = getMoveMechanicUsability('barrier');                \r\n                break;    \r\n              case 'ring-target':                \r\n                // Check for bad item moves.\r\n                usable = getMoveMechanicUsability('bad-item');\r\n                break;            \r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'bad-held-items':\r\n            switch(newItem.data.name){\r\n              case 'toxic-orb':                   \r\n                // Check for orb moves or abilities.\r\n                usable = (getMoveMechanicUsability('orb') || getMoveMechanicUsability('bad-item') || \r\n                          getAbilityMechanicUsability('orb') || getAbilityMechanicUsability('', ['poison-heal', 'toxic-boost']));                                          \r\n                break;\r\n              case 'flame-orb':                                               \r\n                // Check for orb moves or abilities.\r\n                usable = (getMoveMechanicUsability('orb') || getMoveMechanicUsability('bad-item') || \r\n                          getAbilityMechanicUsability('orb') || getAbilityMechanicUsability('', ['flare-boost']));                \r\n                break;\r\n              case 'iron-ball':\r\n              case 'lagging-tail':\r\n              case 'sticky-barb':\r\n              case 'full-incense': \r\n                // Check for bad item moves.\r\n                usable = getMoveMechanicUsability('bad-item');\r\n                break; \r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'plates':\r\n            // Check for movesets with that type, a specific move or a specific ability.\r\n            usable = (getMovesetTypeUsabilityForItems(newItem.data, currentItems) ||\r\n                      getSpecificOptionsUsabilityForItems(['judgment'], ['multitype'], '', currentItems));\r\n            break;\r\n          case 'memories':                        \r\n            // Check for a specific move or a specific ability.            \r\n            usable = getSpecificOptionsUsabilityForItems(['multi-attack'], ['rks-system'], ['memory'], currentItems);\r\n            break;\r\n          case 'type-enhancement':\r\n            // Check for movesets with that type.\r\n            usable = getMovesetTypeUsabilityForItems(newItem.data, currentItems);\r\n            break; \r\n          case 'jewels':                        \r\n            // Check for a specific move type\r\n            usable = getMovesetTypeUsabilityForItems(newItem.data, currentItems);\r\n            break;           \r\n          case 'species-specific':\r\n              switch(newItem.data.name){\r\n                case 'douse-drive':                                     \r\n                case 'shock-drive':\r\n                case 'burn-drive':\r\n                case 'chill-drive':                                               \r\n                  // Check for a specific move.\r\n                  usable = getSpecificOptionsUsabilityForItems(['techno-blast'], '', ['drive'], currentItems);\r\n                  break;\r\n                case 'stick':\r\n                  // Check for a specific pokemon.\r\n                  usable = getPokemonUsability(['sirfetchd']);\r\n                  break;\r\n                case 'thick-club':\r\n                  // Check for a specific pokemon.\r\n                  usable = getPokemonUsability(['marowak', 'marowak-alola']);\r\n                  break;\r\n                case 'soul-dew':\r\n                  // Check for a specific pokemon.\r\n                  usable = getPokemonUsability(['latios', 'latias']);\r\n                  break;\r\n                case 'griseous-orb':\r\n                  // Check for a specific pokemon and move types.\r\n                  usable = (getPokemonUsability(['giratina-origin', 'giratina-altered']) && getMovesetTypeUsability(['dragon', 'ghost']));\r\n                  break;\r\n                case 'adamant-orb':\r\n                  // Check for a specific pokemon and move types.\r\n                  usable = (getPokemonUsability(['dialga']) && getMovesetTypeUsability(['dragon', 'steel']));\r\n                  break;\r\n                case 'lustrous-orb':\r\n                  // Check for a specific pokemon and move types.\r\n                  usable = (getPokemonUsability(['palkia']) && getMovesetTypeUsability(['dragon', 'water']));\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            break;\r\n          default:\r\n            break;\r\n        }                      \r\n      } while (checkDuplicatedName(currentItems, newItem.data.name) || FindKeywords(newItem.data.name, '-', itemFilter, itemAllow) || !usable)\r\n      //console.log(newItem.data.name);\r\n\r\n      return newItem.data;\r\n    } \r\n\r\n    if(generating && generationStep === 5 && itemList.length > 0){      \r\n      getItemOptions();\r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep, itemList, randomRolls, itemFilter, itemAllow, consumableItems, plateItems, memoryItems,\r\n      getMovesetTypeUsabilityForItems, getMoveMechanicUsability, getAbilityMechanicUsability, getPokemonTypeUsability,\r\n      getReverseOption, getSpecificOptionsUsabilityForItems, getPokemonUsability, getMovesetTypeUsability])\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    if(generating && generationStep === 6){\r\n      setToast('Controls', 'Options generated, build your team!', {success: true});\r\n      if(!cancel)\r\n        setGenerating(false);   \r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep])  \r\n\r\n  // ----- SELECTIONS & ASSIGNMENTS -----\r\n  // Select a pokemon.\r\n  const selectPokemon = (pokemon) => {\r\n    if(!generating){\r\n      let change = false;\r\n      let options = pokemonOptions;\r\n      options = options.map(p => {\r\n        if(p.name === pokemon.name){\r\n          if(p.selected) {      \r\n            p.selected = false;\r\n            p.moveset = null;\r\n            p.ability = null;\r\n            p.item = null;          \r\n            change = true;\r\n          }\r\n          else if(!p.selected && selectionsMade.pokemons < selectionsNeeded.pokemons) {\r\n            p.selected = true;\r\n            change = true;\r\n          }\r\n          else {\r\n            setToast('Pokemon Options', `Only ${selectionsNeeded.pokemons} pokemons can be selected.`, {warning: true});\r\n          }\r\n        }\r\n        return p;\r\n      })\r\n      if(change){\r\n        setPokemonOptions(options); \r\n      }\r\n    }\r\n    else\r\n      setToast('Team Builder', 'Your options are still being generated.', {warning: true});\r\n  }   \r\n\r\n  // Select a move.\r\n  const selectMove = (move, moveset) => {  \r\n    if(!generating){\r\n      let change = false;  \r\n      let msOptions = movesetOptions;    \r\n      msOptions[moveset] = msOptions[moveset].map(m => {\r\n        if(m.name === move.name){\r\n          if(m.selected){      \r\n            m.selected = false;\r\n            change = true;\r\n          }\r\n          else if(!m.selected && selectionsMade.moves[moveset] < selectionsNeeded.moves){\r\n            m.selected = true;\r\n            change = true;\r\n          }\r\n          else {\r\n            setToast('Moveset Options', `Only ${selectionsNeeded.moves} moves can be selected in a moveset.`, {warning: true});\r\n          }\r\n        }\r\n        return m;\r\n      });\r\n      if(change){\r\n        setMovesetOptions([...msOptions]);\r\n      }\r\n    }\r\n    else\r\n      setToast('Team Builder', 'Your options are still being generated.', {warning: true});\r\n  }\r\n\r\n  // Assign a pokemon to a moveset, ability or item.\r\n  const assignPokemon = (pokemon, assignable) => {\r\n    if(!generating){\r\n      let change = false;\r\n      let pokemons = pokemonOptions;\r\n      pokemons = pokemons.map(p => {\r\n        if(p.name === pokemon.name){\r\n          if(assignable.moveset != null){\r\n            if(p.moveset !== assignable.moveset)\r\n              p.moveset = assignable.moveset;\r\n            else\r\n              p.moveset = null;\r\n            change = true;\r\n          }\r\n          else if(assignable.ability != null){\r\n            if(p.ability !== assignable.ability)\r\n              p.ability = assignable.ability;\r\n            else\r\n              p.ability = null;\r\n            change = true;\r\n          }\r\n          else if(assignable.item != null){\r\n            if(p.item !== assignable.item)\r\n              p.item = assignable.item;\r\n            else\r\n              p.item = null;\r\n            change = true;\r\n          }\r\n        }\r\n        else{\r\n          if(assignable.moveset != null){\r\n            if(p.moveset === assignable.moveset) {\r\n              p.moveset = null;\r\n              change = true;\r\n              setToast('Moveset Options',\r\n              `Assigned ${upperCaseWords(pokemon.name)} instead of ${upperCaseWords(p.name)} to moveset ${assignable.moveset+1}.`,\r\n              {warning: true});\r\n            }\r\n          }\r\n          if(assignable.ability != null){\r\n            if(p.ability === assignable.ability) {\r\n              p.ability = null;\r\n              change = true;\r\n              setToast('Ability Options',\r\n              `Assigned ${upperCaseWords(pokemon.name)} instead of ${upperCaseWords(p.name)} to ability ${upperCaseWords(abilityOptions[assignable.ability].name)}.`,\r\n              {warning: true});\r\n            }\r\n          }\r\n          if(assignable.item != null){\r\n            if(p.item === assignable.item) {\r\n              p.item = null;\r\n              change = true;\r\n              setToast('Item Options',\r\n              `Assigned ${upperCaseWords(pokemon.name)} instead of ${upperCaseWords(p.name)} to item ${upperCaseWords(itemOptions[assignable.item].name)}.`,\r\n              {warning: true});\r\n            }\r\n          }\r\n        }\r\n        return p;\r\n      })\r\n      if(change){   \r\n        setPokemonOptions(pokemons);\r\n      }\r\n    }\r\n    else\r\n      setToast('Team Builder', 'Your options are still being generated.', {warning: true});\r\n  }    \r\n\r\n  // Clear all selections and assignments.\r\n  const clearChoices = () => {\r\n    const choicesMade = Object.values(selectionsMade).some(val => Array.isArray(val) ? val.some(i => i) : val);\r\n    if(choicesMade){\r\n      let options = pokemonOptions;\r\n      options = options.map(p => {      \r\n        p.selected = false;\r\n        p.moveset = null;\r\n        p.ability = null;\r\n        p.item = null;                  \r\n        return p;\r\n      });\r\n      setPokemonOptions(options);\r\n \r\n      let msOptions = movesetOptions;    \r\n      msOptions.forEach(ms => {\r\n        ms = ms.map(m => {   \r\n          m.selected = false;\r\n          return m;\r\n        });\r\n      });          \r\n      setMovesetOptions([...msOptions]);\r\n\r\n      setToast('Controls', 'Choices cleared, start again!', {success: true});\r\n    }\r\n    else {\r\n      setToast('Controls', 'There are no choices to clear.', {warning: true});\r\n    }\r\n  }\r\n\r\n  // ----- RESPONSES -----\r\n  // Respond to completed sections.\r\n  const checkSectionCompleted = useCallback((string, val) => {\r\n    let sCompleted = sectionsCompleted;\r\n    let change = false;\r\n    switch(string){\r\n      case 'pokemons':\r\n        if(!sCompleted.pokemons && val >= selectionsNeeded.pokemons){\r\n          sCompleted.pokemons = true;\r\n          change = true;\r\n          setToast('Pokemon Options', `All ${selectionsNeeded.pokemons} pokemons have been selected.`, {success: true});\r\n        }\r\n        else if(sCompleted.pokemons && val < selectionsNeeded.pokemons){\r\n          sCompleted.pokemons = false;\r\n          change = true;\r\n          setToast('Pokemon Options', `There must be ${selectionsNeeded.pokemons} pokemons selected.`, {warning: true});\r\n        }\r\n        break;\r\n      case 'movesets':\r\n        if(!sCompleted.movesets && val >= selectionsNeeded.movesets){\r\n          sCompleted.movesets = true;\r\n          change = true;\r\n          setToast('Moveset Options', `All ${selectionsNeeded.movesets} pokemons have been assigned to a moveset.`, {success: true});\r\n        }\r\n        else if(sCompleted.movesets && val < selectionsNeeded.movesets){\r\n          sCompleted.movesets = false;\r\n          change = true;\r\n          setToast('Moveset Options', `There must be ${selectionsNeeded.movesets} pokemons assigned to a moveset.`, {warning: true});\r\n        }\r\n        break;\r\n      case 'moves':\r\n        if(!sCompleted.moves && val >= selectionsNeeded.movesets * selectionsNeeded.moves){\r\n          sCompleted.moves = true;\r\n          change = true;\r\n          setToast('Moveset Options', `All ${selectionsNeeded.movesets * selectionsNeeded.moves} moves have been selected.`, {success: true});    \r\n        }\r\n        else if(sCompleted.moves && val < selectionsNeeded.movesets * selectionsNeeded.moves){\r\n          sCompleted.moves = false;\r\n          change = true;\r\n          setToast('Moveset Options', `There must be ${selectionsNeeded.movesets * selectionsNeeded.moves} moves selected.`, {warning: true});    \r\n        }\r\n        break;\r\n      case 'abilities':\r\n        if(!sCompleted.abilities && val >= selectionsNeeded.abilities){\r\n          sCompleted.abilities = true;\r\n          change = true;\r\n          setToast('Ability Options', `All ${selectionsNeeded.abilities} pokemons have been assigned to an ability.`, {success: true});\r\n        }\r\n        else if(sCompleted.abilities && val < selectionsNeeded.abilities){\r\n          sCompleted.abilities = false;\r\n          change = true;\r\n          setToast('Ability Options', `There must be ${selectionsNeeded.abilities} pokemons assigned to an ability.`, {warning: true});\r\n        }\r\n        break;\r\n      case 'items':\r\n        if(!sCompleted.items && val >= selectionsNeeded.items){\r\n          sCompleted.items = true;\r\n          change = true;\r\n          setToast('Item Options', `All ${selectionsNeeded.items} pokemons have been assigned to an item.`, {success: true});\r\n        }\r\n        else if(sCompleted.items && val < selectionsNeeded.items){\r\n          sCompleted.items = false;\r\n          change = true;\r\n          setToast('Item Options', `There must be ${selectionsNeeded.items} pokemons assigned to an item.`, {warning: true});\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if(change){\r\n      setSectionsCompleted(sCompleted);\r\n      if(Object.values(sCompleted).every(val => val))\r\n        setToast('Team Builder', `Team completely built, export your team!`, {success: true});\r\n    }\r\n  }, [sectionsCompleted, selectionsNeeded]);\r\n\r\n  // Respond to changes in slections/assignments for pokemon, movesets, abilities and items.\r\n  useEffect (() => {\r\n    let pSelected = 0;\r\n    let msAssigned = 0;    \r\n    let aAssigned = 0;\r\n    let iAssigned = 0;\r\n\r\n    pokemonOptions.forEach(p => {\r\n      if(p.selected)\r\n        pSelected = pSelected + 1;\r\n      if(p.moveset != null)\r\n        msAssigned = msAssigned + 1;\r\n      if(p.ability != null)\r\n        aAssigned = aAssigned + 1;\r\n      if(p.item != null)\r\n        iAssigned = iAssigned + 1;\r\n    });    \r\n    \r\n    checkSectionCompleted('pokemons', pSelected);\r\n    checkSectionCompleted('movesets', msAssigned);\r\n    checkSectionCompleted('abilities', aAssigned);\r\n    checkSectionCompleted('items', iAssigned);\r\n\r\n    setSelectionsMade(s => { return {\r\n      ...s,\r\n      pokemons: pSelected,\r\n      movesets: msAssigned,\r\n      abilities: aAssigned,\r\n      items: iAssigned\r\n    }});\r\n  }, [pokemonOptions, checkSectionCompleted]); \r\n\r\n  // Respond to changes in selections for moves.\r\n  useEffect (() => {\r\n    let mSelected = [];\r\n    let mSelectedAmount = 0;\r\n\r\n    movesetOptions.forEach(ms => {\r\n      let msSelected = ms.filter(m => m.selected).length;\r\n      mSelected.push(msSelected);\r\n      mSelectedAmount = mSelectedAmount + msSelected;\r\n    });\r\n\r\n    checkSectionCompleted('moves', mSelectedAmount);\r\n\r\n    setSelectionsMade(s => {return {...s, moves: mSelected}});\r\n  }, [movesetOptions, checkSectionCompleted]);    \r\n\r\n  // ----- HELPER FUNCTIONS -----  \r\n  // Get total stats for a pokemon.\r\n  const getTotalStats = (stats) => {\r\n    let total = 0;\r\n    stats.forEach(s => {\r\n        total = total + s.base_stat; \r\n    });        \r\n    return total;\r\n  }  \r\n    \r\n  const getStatDisplay = (name) => {\r\n    switch(name){\r\n      case \"hp\":\r\n        return \"HP\";\r\n      case \"attack\":\r\n        return \"Atk\";\r\n        case \"defense\":\r\n          return \"Def\";\r\n          case \"special-attack\":\r\n          return \"SpA\";\r\n          case \"special-defense\":\r\n          return \"SpD\";\r\n          case \"speed\":\r\n          return \"Spe\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  const checkDuplicatedName = (currentObjects, newObjectName) => {\r\n    return currentObjects.find(co => co.name === newObjectName)\r\n  }\r\n\r\n  // Filter by keywords.\r\n  const FindKeywords = (string, separator, filter, allow) => {\r\n    let found = false;\r\n    found = string.split(separator).some(keyword => filter.includes(keyword))\r\n    if(found && allow)\r\n      found = !string.split(separator).some(keyword => allow.includes(keyword))\r\n    return found;\r\n  }\r\n\r\n  const capitalizeWords = (text, separator) => {\r\n    return text.split(separator).map((word) => {return word[0].toUpperCase() + word.substring(1)}).join(\" \");\r\n  }\r\n\r\n  const upperCaseWords = (string) => {\r\n    return string.replace(/\\b\\w/g, l => l.toUpperCase())\r\n  }      \r\n\r\n  // ----- OTHERS -----\r\n  // Show a toast notification.\r\n  const setToast = (title, content, type) => {    \r\n    toast.custom((t) => (\r\n      <div onClick={() => toast.dismiss(t.id)}\r\n        className={`cursor-pointer max-w-md w-full flex flex-col gap-2 bg-white p-2 rounded-md pointer-events-auto flex border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out \r\n        ${t.visible ? 'animate-enter' : 'animate-leave'}\r\n        ${type.success ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}\r\n        ${type.warning ? 'bg-yellow-100 border-yellow-200 ring ring-yellow-100' : ''}\r\n        ${type.error ? 'bg-red-200 border-red-300 ring ring-red-200' : ''}`}\r\n      >\r\n        <div className=\"flex justify-between items-center w-full\">\r\n          <p className=\"text-base capitalize\">{title}</p>\r\n          {/* <HiOutlineX className=\"cursor-pointer text-2xl hover:text-gray-600\" onClick={() => toast.dismiss(t.id)}/> */}\r\n        </div>          \r\n        <div className=\"flex text-sm\">\r\n          <p>{content}</p>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  // Create an export of the team.\r\n  const exportTeam = () => {\r\n    if(Object.values(sectionsCompleted).every(val => val)) {\r\n      let exportText = \"\";         \r\n      pokemonOptions.forEach(p => {\r\n        if(p.selected){\r\n          let moveset = movesetOptions[p.moveset].filter(m => m.selected).map(m => {return m.name});\r\n          exportText += capitalizeWords(p.name, \"-\");\r\n          if(p.gender !== \"genderless\"){\r\n            exportText += \" (\" + (p.gender === \"male\" ? \"M\" : \"F\") + \")\";\r\n          }\r\n          exportText += \" @ \" + capitalizeWords(itemOptions[p.item].name, \"-\");\r\n          exportText += \"\\r\\nAbility: \" + capitalizeWords(abilityOptions[p.ability].name, \"-\");\r\n          exportText += \"\\r\\nLevel: \" + p.level;\r\n          if(p.shiny)\r\n            exportText += \"\\r\\nShiny: Yes\";\r\n          exportText += \"\\r\\nEVs:\";\r\n          p.stats.forEach(s => {\r\n            if(s.ev != null && s.ev > 0)\r\n              exportText += \" \" + s.ev + \" \" + getStatDisplay(s.stat.name) + \" /\";\r\n          });\r\n          exportText = exportText.slice(0, -1);\r\n          exportText += \"\\r\\n\" + capitalizeWords(p.nature.name, \"-\") + \" Nature\";\r\n          exportText += \"\\r\\nIVs:\";\r\n          p.stats.forEach(s => {\r\n            if(s.iv != null && s.iv < 31)\r\n              exportText += \" \" + s.iv + \" \" + getStatDisplay(s.stat.name) + \" /\";\r\n          });\r\n          exportText = exportText.slice(0, -1);\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[0], \"-\");\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[1], \"-\");\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[2], \"-\");\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[3], \"-\");    \r\n          exportText += \"\\r\\n\\r\\n\";                             \r\n        }\r\n      });\r\n      copyTextToClipboard(exportText);      \r\n    }\r\n    else {\r\n      setToast('Controls', 'The team is not completely built!', {warning: true});      \r\n    }\r\n  }  \r\n\r\n  // Copy the exported team to clipboard.\r\n  function fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();  \r\n    try {\r\n      var successful = document.execCommand(\"copy\");\r\n      if(successful)\r\n        setToast('Controls', 'Team copied to clipboard!', {success: true});      \r\n      else\r\n        setToast('Controls', 'Error copying the team to clipboard!', {error: true});\r\n    } catch (err) {\r\n      setToast('Controls', 'Unable to copy the team to clipboard!', {error: true});\r\n    }  \r\n    document.body.removeChild(textArea);\r\n  }\r\n  function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n      fallbackCopyTextToClipboard(text);\r\n      return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(\r\n      function() {\r\n        setToast('Controls', 'Team copied to clipboard!', {success: true});\r\n      },\r\n      function(err) {\r\n        setToast('Controls', 'Error copying the team to clipboard!', {error: true});\r\n      }\r\n    );\r\n  }\r\n\r\n  // Render.\r\n  return (        \r\n    <TeamBuilderContext.Provider value={{\r\n      pokemonOptions: pokemonOptions,\r\n      selectionsNeeded: selectionsNeeded,\r\n      selectionsMade: selectionsMade,\r\n      selectPokemon: selectPokemon,\r\n      selectMove: selectMove,\r\n      assignPokemon: assignPokemon\r\n    }}>\r\n      <div className=\"bg-gray-100 bg-unown-pattern min-h-screen\">\r\n        <Router basename=\"/React-Procedural-Pokemon\">\r\n          <div className=\"flex w-full\">\r\n            <div className=\"h-screen sticky top-0\">\r\n              <Sidebar\r\n                sectionsCompleted={sectionsCompleted}\r\n              />\r\n            </div>\r\n            <div className=\"w-full flex flex-col\">\r\n              <Switch>          \r\n                <Route path=\"/format\">\r\n                  <Format />\r\n                </Route>\r\n                <Route path=\"/builder\">        \r\n                  <TeamBuilder\r\n                    loading={loading}\r\n                    randomRolls={randomRolls}\r\n                    pokemonOptions={pokemonOptions}\r\n                    movesetOptions={movesetOptions}\r\n                    abilityOptions={abilityOptions}\r\n                    itemOptions={itemOptions}\r\n                    generating={generating}\r\n                    generateOptions={generateOptions}                \r\n                    clearChoices={clearChoices}\r\n                    exportTeam={exportTeam}                  \r\n                  /> \r\n                  <Tooltips />                                  \r\n                </Route>\r\n                <Route path=\"/about\">\r\n                  <About />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Home />\r\n                </Route>          \r\n              </Switch>\r\n              <Footer />\r\n            </div>\r\n          </div>           \r\n        </Router>      \r\n      </div>\r\n      <Toaster\r\n        position=\"bottom-right\"\r\n        reverseOrder={false}\r\n        gutter={8}\r\n      />           \r\n    </TeamBuilderContext.Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}