{"version":3,"sources":["constants/api.js","constants/filters.js","constants/usability.js","constants/team.js","context/TeamBuilderContext.js","assets/logo.png","components/Sidebar.js","components/Footer.js","containers/Home.js","assets/guide/guide_create_1.jpg","assets/guide/guide_create_2.jpg","assets/guide/guide_create_3.jpg","assets/guide/guide_create_4.jpg","assets/guide/guide_create_5.jpg","assets/guide/guide_create_6.jpg","assets/guide/guide_import_1.jpg","assets/guide/guide_import_2.jpg","assets/guide/guide_import_3.jpg","assets/guide/guide_import_4.jpg","assets/guide/guide_play_1.jpg","assets/guide/guide_play_2.jpg","assets/guide/guide_play_3.jpg","assets/guide/guide_play_4.jpg","assets/guide/guide_play_5.jpg","constants/guide.js","components/Table.js","constants/format.js","containers/Format.js","components/pokemon/PokemonType.js","constants/tooltips.js","components/pokemon/PokemonStats.js","components/pokemon/PokemonSprite.js","components/moves/MoveCategory.js","components/preview/PokemonPreview.js","components/preview/TeamPreview.js","components/pokemon/Pokemon.js","components/pokemon/PokemonOptions.js","components/TooltipTags.js","components/moves/Move.js","components/pokemon/SelectedPokemon.js","components/moves/Moveset.js","components/moves/MovesetOptions.js","components/abilities/Ability.js","components/abilities/AbilityOptions.js","components/items/Item.js","components/items/ItemOptions.js","containers/TeamBuilder.js","containers/About.js","components/Tooltips.js","App.js","reportWebVitals.js","index.js"],"names":["url","topPokemonCountOffset","itemCountOffset","pokemonFilter","pokemonAllow","moveFilter","moveAllow","abilityFilter","abilityAllow","itemFilter","itemAllow","chargeMoves","bindMoves","drainMoves","weatherMoves","terrainMoves","barrierMoves","orbMoves","punchMoves","multistrikeMoves","recoilMoves","biteMoves","pulseMoves","soundMoves","healMoves","contactMoves","consumableItemMoves","badItemMoves","badAbilityMoves","berryMoves","weatherAbilities","terrainAbilities","orbAbilities","consumableItemAbilities","berryAbilities","consumableItems","plateItems","memoryItems","berryItems","randomOptions","pokemons","movesets","moves","abilities","items","selectionsNeeded","topPokemonTotalStatsThreshold","statRanges","hp","general","total","TeamBuilderContext","React","createContext","Sidebar","location","useLocation","context","useContext","className","to","src","logo","alt","width","style","minWidth","exact","activeClassName","pathname","smooth","Object","values","sectionsCompleted","every","val","Footer","braveado","href","target","rel","pokeapi","Home","useEffect","document","title","showdown","id","createTeam","create1","create2","create3","create4","create5","create6","importTeam","import1","import2","import3","import4","playTeam","play1","play2","play3","play4","play5","Table","data","columns","map","c","i","rows","r","d","references","filteredPokemon","topPokemon","filteredMoves","usabilityMoves","filteredAbilities","usabilityAbilities","filteredItems","usabilityItems","Format","useState","showCreate","setShowCreate","showImport","setShowImport","showPlay","setShowPlay","showFilteredPokemon","setShowFilteredPokemon","showTopPokemon","setShowTopPokemon","showFilteredMoves","setShowFilteredMoves","showUsabilityMoves","setShowUsabilityMoves","showFilteredAbilities","setShowFilteredAbilities","showUsabilityAbilities","setShowUsabilityAbilities","showFilteredItems","setShowFilteredItems","showUsabilityItems","setShowUsabilityItems","type","onClick","guide","format","PokemonType","size","getColor","pokemon","effects","mechanics","getStatName","stat","getStatColor","getStatPercentage","range","input","PokemonStats","stats","nature","statStep","getStatStep","statRange","statPercent","s","increased","name","decreased","length","pokemonTooltips","base_stat","marginTop","calculated_stat","ev","iv","PokemonSprite","assign","opacity","types","is_legendary","is_mythical","shiny","sprites","front_default","front_shiny","height","e","stopPropagation","species","replace","l","toUpperCase","highestStats","statIndex","percentage","t","MoveCategory","category","PokemonPreview","preview","level","ability","item","default","moveset","m","selected","damage_class","TeamPreview","previews","getValidPreviews","count","forEach","p","Pokemon","selectPokemon","gender","getGenders","weight","PokemonOptions","options","selectionsMade","TooltipTags","effect","tooltipData","formattedEffect","toLowerCase","effectTooltips","key","currentData","incomingKey","includes","match","RegExp","push","mechanicTooltips","split","getTooltips","Move","move","effect_entries","effect_chance","meta","crit_rate","priority","concat","formatEffect","find","language","short_effect","selectMove","moveTooltips","pp","power","accuracy","SelectedPokemon","assignable","selectedPokemon","pokemonOptions","filter","assignedPokemon","assignPokemon","Moveset","index","MovesetOptions","sm","selectedMoves","Ability","formattedName","join","getEffect","AbilityOptions","a","Item","ItemOptions","it","TeamBuilder","loading","pokemonPreviews","movesetOptions","abilityOptions","itemOptions","generating","generateOptions","clearChoices","exportTeam","generationProgress","Tools","Tooltips","ReactTooltip","rebuild","formatTooltipData","header","content","delayShow","getContent","dataTip","App","setLoading","pokemonList","setPokemonList","topPokemonList","setTopPokemonList","moveList","setMoveList","abilityList","setAbilityList","itemList","setItemList","typeList","setTypeList","natureList","setNatureList","setGenerating","generationStep","setGenerationStep","setPokemonPreviews","setPokemonOptions","setMovesetOptions","setAbilityOptions","setItemOptions","movesetsPerType","usableTypes","reverseOptions","optionsData","setOptionsData","setSelectionsMade","setSectionsCompleted","cancel","axios","get","api","pokemonResults","topPokemonResults","results","apply","moveResults","abilityResults","itemResults","typeResults","natureResults","fetchData","shinyIndex","Math","floor","random","team","checkTopPokemon","getNewPokemon","gender_rate","FindKeywords","nickname","increased_stat","decreased_stat","sort","b","getTotalStats","currentPokemons","newPokemon","finalPokemon","isTopPokemon","initialPokemon","evolution_chain","evolutions","evoChain","evoData","chain","numberOfEvolutions","nextSpecies","lastSpecies","evolves_to","hasOwnProperty","finalEvolution","Array","isArray","finalSpecies","varieties","v","filters","checkDuplicatedName","getPokemonOptions","getPokemonUsability","useCallback","getRandomPokemonType","exclude","getNewMoveset","newMoveset","status","statusMoves","usable","combo","getMovesetOptions","msPerType","msInType","ms","uTypes","getPokemonTypeUsability","getMovesetTypeUsability","getTypeFromEffect","keyword","getMovesetTypeUsabilityForItems","currentItems","itemsOfType","ci","mt","getSpecificOptionsUsabilityForItems","maxOptions","mo","getMoveMechanicUsability","mechanic","exactMoves","ignoreMoves","moveNames","usability","getAbilityMechanicUsability","exactAbilities","abilityNames","getReverseOption","getNewAbility","currentAbilities","newAbility","getAbilityOptions","rOptions","opt","itemType","getNewItem","newItem","getItemOptions","setToast","success","checkSectionCompleted","string","sCompleted","change","warning","pSelected","msAssigned","aAssigned","iAssigned","mSelected","mSelectedAmount","msSelected","tPreview","pPreview","po","getStatDisplay","currentObjects","newObjectName","co","separator","allow","found","some","capitalizeWords","text","word","substring","upperCaseWords","toast","custom","dismiss","visible","error","Provider","value","msOptions","path","exportText","abilityKeywords","slice","navigator","clipboard","textArea","createElement","body","appendChild","focus","select","execCommand","err","removeChild","fallbackCopyTextToClipboard","writeText","then","copyTextToClipboard","position","reverseOrder","gutter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39583788.chunk.js","sourcesContent":["const url = 'https://pokeapi.co/api/v2/';\r\nconst pokemonCount = 898;\r\nconst topPokemonCountOffset = [\r\n    [8, 143], [9, 242], [3, 286], [16, 370], [3, 442], \r\n    [15, 479], [3, 632], [11, 637], [3, 703], [6, 715], \r\n    [2, 771], [11, 781], [3, 799], [3, 806], [14, 884]    \r\n];\r\nconst moveCount = 826;\r\nconst abilityCount = 267;\r\nconst itemCountOffset = [\r\n    [2, 111], [115, 189], [4, 256], [1, 441], [24, 581], \r\n    [2, 666], [9, 678], [1, 727], [1, 831], [23, 844], \r\n    [2, 1109], [6, 1124],\r\n    // Berries \r\n    [15, 125], [29, 160], [3, 719]\r\n];\r\nconst typeCount = 18;\r\nconst natureCount = 25;\r\n\r\nexport {\r\n    url, \r\n    pokemonCount, topPokemonCountOffset,\r\n    moveCount, \r\n    abilityCount, \r\n    itemCountOffset,\r\n    typeCount, \r\n    natureCount\r\n}","// Pokemon\r\nconst pokemonFilter = [ // Exclude pokemons with this keywords.\r\n// Legendary forms above 720 total stats.\r\n'eternamax', 'primal', 'ultra',\r\n// General forms as strong as legendaries.\r\n'mega', 'gmax', 'eternal', 'ash',\r\n// Pokemon form changes\r\n'sunny', 'rainy', 'snowy', 'origin', 'zen', 'pirouette', 'blade', 'crowned', 'gulping', 'gorging', \r\n'noice', 'hangry', 'minior', 'zygarde',\r\n// Pokemons and forms below 360 total stats.\r\n'solo', 'shedinja', 'smeargle', 'ditto', 'delibird', 'luvdisc', 'unown', 'wishiwashi',\r\n// Others.\r\n'totem', 'bond', 'phione', 'meltan', 'calyrex', 'hisui'\r\n];\r\nconst pokemonAllow = [ // Include pokemons with this keywords even when excluded by filter.\r\n// Calyrex forms\r\n'ice', 'shadow',\r\n// Minior forms\r\n'meteor',\r\n// Zygarde forms\r\n'50'\r\n];\r\n\r\n// Moves\r\nconst moveFilter = [ // Exclude moves with this keywords.\r\n// General max and z moves.\r\n'max', 'physical', 'special',\r\n// Specific z moves.\r\n'catastropika', 'moonsault', 'raid', '000', 'sparksurfer', 'evoboost', 'pancake', 'genesis', 'operetta', 'stormshards',\r\n'forever', 'soulblaze', 'guardian', 'sunraze', 'moonraze', 'burns', 'stealing',\r\n// Friendship.\r\n'happy', 'return', 'frustration', 'veevee', 'papow',\r\n// Doubles\r\n'helping', 'aromatic', 'hands', 'coaching', 'gear', 'magnetic', 'spotlight', 'quash', 'decorate',\r\n// No effect.\r\n'struggle', 'splash', 'celebrate',\r\n// BRANCH LOGIC. All accounted for.\r\n// Combo moves.\r\n//'stockpile', 'swallow', 'spit',     \r\n// Held items.\r\n//'techno', 'judgement',\r\n// Specific pokemons.\r\n//'hyperspace'\r\n// Berries\r\n//'natural', 'stuff', 'teatime', 'belch',\r\n// REVERSE BRANCH LOGIC. All accounted for.\r\n// Need lost or consumed held items to work.\r\n//'recycle',  \r\n];\r\nconst moveAllow = [ // Include moves with this keywords even when excluded by filter.\r\n'bug', 'grind', 'shift', 'splishy'\r\n];\r\n\r\n// Abilities\r\nconst abilityFilter = [ // Exclude abilities with this keywords.\r\n// No effect in battles.\r\n'illuminate', 'ball', 'honey', 'run', \r\n// Doubles.\r\n'plus', 'minus', 'battery', 'healer', 'friend', 'alchemy', 'spot', 'receiver', 'symbiosis', 'telepathy', 'medicine',\r\n// Info.\r\n'anticipation', 'forewarn', 'frisk',\r\n// Filtered pokemon forms specific.\r\n'schooling', //'construct'         \r\n// BRANCH LOGIC. All accounted for.\r\n// Pokemon forms specific.\r\n//'zen', 'stance', 'shields', 'bond', 'construct', 'face', 'hunger', 'gulp', 'forecast', \r\n// Move mechanic. \r\n// 'iron-fist', 'skill-link', 'reckless', 'strong-jaw', 'mega-launcher', 'liquid-voice', 'punk-rock', 'triage',\r\n// 'tough-claws', 'unseen-fist',    \r\n// Move type.\r\n// 'flash-fire', 'overgrow', 'blaze', 'torrent', 'swarm', 'scrappy', 'sand-force', 'gale-wings', \r\n// 'dark-aura', 'fairy-aura', 'steelworker', 'transistor', 'dragons-maw',\r\n// Move type changes.\r\n// 'normalize', 'refrigerate', 'pixilate', 'galvanize', 'aerilate',\r\n// Specific pokemons.\r\n//'multitype', 'rks', 'rusted',\r\n// Harmful to owner.\r\n//'truant', 'stall', 'klutz', 'slow', 'defeatist',\r\n// Berries.\r\n//'one', 'unnerve', 'cheek', 'gluttony', 'harvest', 'ripen',\r\n// REVERSE BRANCH LOGIC. All accounted for.\r\n// Need lost or consumed held items to work.\r\n// 'pickup', 'unburden', 'pickpocket', 'magician',\r\n];  \r\nconst abilityAllow = [ // Include abilities with this keywords even when excluded by filter.\r\n//\r\n];\r\n\r\n// Items\r\nconst itemFilter = [ // Exclude items with this keywords.\r\n// Unusable in format.\r\n'power', 'scarf', 'smoke', 'macho', 'exp', 'soothe', 'coin', 'cleanse', 'egg', 'luck',\r\n'pure', 'ability', \r\n// Evolution related or filtered pokemon specific.    \r\n'deep', 'scale', 'powder', 'everstone', 'upgrade', 'punch', 'protector', 'disc', 'magmarizer', 'electirizer', \r\n'reaper', 'whipped', 'sachet', 'light',  \r\n// Berries\r\n'oran',\r\n// BRANCH LOGIC. All accounted for.\r\n// Pokemon specific.\r\n// 'dew', 'thick', 'stick'\r\n// Move or ability mechanic.\r\n//'heat', 'smooth', 'icy', 'damp', 'sludge', 'clay', 'orb', \r\n// Harmful to user.\r\n//'full', 'lagging', 'sticky', 'target', 'iron'\r\n];\r\nconst itemAllow = [ // Include items with this keywords even when excluded by filter.    \r\n'herb', 'choice', 'bright', 'silver', 'silk', 'clay'\r\n];\r\n\r\nexport {\r\n    pokemonFilter, pokemonAllow, \r\n    moveFilter, moveAllow, \r\n    abilityFilter, abilityAllow,\r\n    itemFilter, itemAllow\r\n}","// Moves.\r\nconst chargeMoves = [ // Power herb.\r\n'bounce', 'dig', 'dive', 'fly', 'freeze-shock', 'geomancy', 'ice-burn', 'meteor-beam', 'phantom-force', 'razor-wind',\r\n'shadow-force', 'skull-bash', 'sky-attack', 'sky-drop', 'solar-beam', 'solar-blade'\r\n];\r\nconst bindMoves = [ // Grip claw, binding band.\r\n'bind', 'clamp', 'fire-spin', 'infestation', 'magma-storm', 'sand-tomb', 'snap-trap', 'thunder-cage', 'whirlpool', 'wrap'\r\n];\r\nconst trapMoves = [ //\r\n'anchor-shot', 'block', 'fairy-lock', 'ingrain', 'jaw-lock', 'mean-look', 'no-retreat', 'octolock', 'shadow-hold', 'spider-web',\r\n'spirit-shackle', 'thousand-waves'\r\n];\r\nconst drainMoves = [ // Big root.\r\n'absorb', 'bouncy-bubble', 'drain-punch', 'draining-kiss', 'dream-eater', 'giga-drain', 'horn-leech', 'leech-life', 'leech-seed',\r\n'mega-drain', 'oblivion-wing', 'parabolic-charge', 'strength-sap', 'ingrain', 'aqua-ring'\r\n];\r\nconst weatherMoves = [ // Weather moves and abilities.\r\n'sunny-day', 'rain-dance', 'sandstorm', 'hail'\r\n];\r\nconst terrainMoves = [ // Terrain items and abilities.\r\n'electric-terrain', 'grassy-terrain', 'misty-terrain', 'psychic-terrain'\r\n];\r\nconst barrierMoves = [ // Light clay.\r\n'light-screen', 'reflect', 'aurora-veil', 'baddy-bad', 'glitzy-glow'\r\n];  \r\nconst orbMoves = [ // Toxic and flame orb.\r\n'facade', 'psycho-shift'\r\n];\r\nconst punchMoves = [ // Iron fist.\r\n'bullet-punch', 'comet-punch', 'dizzy-punch', 'double-iron-bash', 'drain-punch', 'dynamic-punch', 'fire-punch', 'focus-punch',\r\n'hammer-arm', 'ice-hammer', 'ice-punch', 'mach-punch', 'mega-punch', 'meteor-mash', 'plasma-fists', 'power-up-punch',\r\n'shadow-punch', 'sky-uppercut', 'thunder-punch'\r\n];\r\nconst multistrikeMoves = [ // Skill link.\r\n'arm-thrust', 'barrage', 'bone-rush', 'bullet-seed', 'comet-punch', 'double-slap', 'fury-attack', 'fury-swipes', 'icicle-spear',\r\n'pin-missile', 'rock-blast', 'scale-shot', 'spike-cannon', 'tail-slap', 'triple-axel', 'triple-kick', 'water-shuriken'\r\n];\r\nconst recoilMoves = [ // Reckless.\r\n'brave-bird', 'double-edge', 'flare-blitz', 'head-charge', 'head-smash', 'high-jump-kick', 'jump-kick', 'submission', 'take-down',\r\n'wild-charge', 'light-of-ruin', 'volt-tackle', 'wood-hammer'\r\n];\r\nconst biteMoves = [ // Strong jaw.\r\n'bite', 'crunch', 'fire-fang', 'fishious-rend', 'hyper-fang', 'ice-fang', 'jaw-lock', 'poison-fang', 'psychic-fangs', 'thunder-fang'\r\n];\r\nconst pulseMoves = [ // Mega launcher.\r\n'aura-sphere', 'dark-pulse', 'dragon-pulse', 'heal-pulse', 'origin-pulse', 'terrain-pulse', 'water-pulse'\r\n];\r\nconst soundMoves = [ // Liquid voice.\r\n'boomburst', 'bug-buzz', 'chatter', 'clanging-scales', 'clangorous-soul', 'confide', 'disarming-voice', 'echoed-voice', 'eerie-spell',\r\n'grass-whistle', 'growl', 'heal-bell', 'howl', 'hyper-voice', 'metal-sound', 'noble-roar', 'overdrive', 'parting-shot', 'perish shong',\r\n'relic-song', 'roar', 'round', 'screech', 'shadow-panic', 'sing', 'snarl', 'snore', 'sparkling-aria', 'supersonic', 'uproar'\r\n];\r\nconst healMoves = [ // Triage.\r\n'draining-kiss', 'floral-healing', 'giga-drain', 'rest', 'synthesis', 'absorb', 'drain-punch', 'dream-eater', 'heal-order',\r\n'heal-pulse', 'healing-wish', 'horn-leech', 'leech-life', 'lunar-dance', 'mega-drain', 'milk-drink', 'moonlight', 'morning-sun',\r\n'oblivion-wing', 'parabolic-charge', 'purify', 'recover', 'roost', 'shore-up', 'slack-off', 'soft-boiled', 'strength-sap',\r\n'swallow', 'wish'\r\n];\r\nconst contactMoves = [ // Tough claws, unseen fist.\r\n'accelerock', 'acrobatics', 'aerial-ace', 'anchor-shot', 'aqua-jet', 'aqua-tail', 'arm-thrust', 'assurance', 'astonish', 'avalanche', \r\n'behemoth-bash', 'behemoth-blade', 'bide', 'bind', 'bite', 'blaze-kick', 'body-press', 'body-slam', 'bolt-beak', 'bolt-strike', 'bounce', 'branch-poke', 'brave-bird', 'breaking-swipe', 'brick-break', 'brutal-swing', 'bug-bite', 'bullet-punch',\r\n'chip-away', 'circle-throw', 'clamp', 'close-combat', 'comet-punch', 'constrict', 'counter', 'covet', 'crabhammer', 'cross-chop', 'cross-poison', 'crunch', 'crush-claw', 'crush-grip', 'cut',\r\n'darkest-lariat', 'dig', 'dive', 'dizzy-punch', 'double-edge', 'double-hit', 'double-iron-bash', 'double-kick', 'double-slap', 'dragon-ascent', 'dragon-claw', 'dragon-hammer', 'dragon-rush', 'dragon-tail', 'draining-kiss', 'drain-punch', 'drill-peck', 'drill-run', 'dual-chop', 'dual-wingbeat', 'dynamic-punch',\r\n'endeavor', 'extreme-speed',\r\n'facade', 'fake-out', 'false-surrender', 'false-swipe', 'feint-attack', 'fell-stinger', 'fire-fang', 'fire-lash', 'fire-punch', 'first-impression', 'fishious-rend', 'flail', 'flame-charge', 'flame-wheel', 'flare-blitz', 'flip-turn', 'floaty-fall', 'fly', 'flying-press', 'focus-punch', 'force-palm', 'foul-play', 'frustration', 'fury-attack', 'fury-cutter', 'fury-swipes',\r\n'gear-grind', 'giga-impact', 'grass-knot', 'grassy-glide', 'guillotine', 'gyro-ball',\r\n'hammer-arm', 'headbutt', 'head-charge', 'head-smash', 'heart-stamp', 'heat-crash', 'heavy-slam', 'high-horsepower', 'high-jump-kick', 'hold-back', 'horn-attack', 'horn-drill', 'horn-leech', 'hyper-fang',\r\n'ice-ball', 'ice-fang', 'ice-hammer', 'ice-punch', 'infestation', 'iron-head', 'iron-tail',\r\n'jaw-lock', 'jump-kick', \r\n'karate-chop', 'knock-off', \r\n'lash-out', 'last-resort', 'leaf-blade', 'leech-life', 'lick', 'liquidation', 'low-kick', 'low-sweep', 'lunge',\r\n'mach-punch', 'megahorn', 'mega-kick', 'mega-punch', 'metal-claw', 'meteor-mash', 'multi-attack', \r\n'needle-arm', 'night-slash', 'nuzzle', \r\n'outrage', \r\n'payback', 'peck', 'petal-dance', 'phantom-force', 'plasma-fists', 'play-rough', 'pluck', 'poison-fang', 'poison-jab', 'poison-tail', 'pound', 'power-trip', 'power-up-punch', 'power-whip', 'psychic-fangs', 'punishment', 'pursuit', \r\n'quick-attack', \r\n'rage', 'rapid-spin', 'razor-shell', 'retaliate', 'return', 'revenge', 'reversal', 'rock-climb', 'rock-smash', 'rolling-kick', 'rollout', \r\n'sacred-sword', 'scratch', 'seismic-toss', 'shadow-claw', 'shadow-force', 'shadow-punch', 'shadow-sneak', 'shadow-strike', 'sizzly-slide', 'skitter-smack', 'skull-bash', 'sky-drop', 'sky-uppercut', 'slam', 'slash', 'smart-strike', 'smelling-salts', 'snap-trap', 'solar-blade', 'spark', 'spectral-thief', 'spirit-break', 'steamroller', 'steel-roller', 'steel-wing', 'stomp', 'stomping-tantrum', 'storm-throw', 'strength', 'struggle', 'submission', 'sucker-punch', 'sunsteel-strike', 'super-fang', 'superpower', 'surging-strikes', \r\n'tackle', 'tail-slap', 'take-down', 'thief', 'thrash', 'throat-chop', 'thunder-fang', 'thunderous-kick', 'thunder-punch', 'triple-axel', 'triple-kick', 'trop-kick', 'trump-card', \r\n'u-turn', \r\n'v-create',\r\n'veevee-volley', 'vine-whip', 'vise-grip', 'vital-throw', 'volt-tackle',\r\n'wake-up-slap', 'waterfall', 'wicked-blow', 'wild-charge', 'wing-attack', 'wood-hammer', 'wrap', 'wring-out', \r\n'x-scissor',\r\n'zen-headbutt', 'zing-zap', 'zippy-zap'\r\n];\r\nconst consumableItemMoves = [ // Consumable items. Reverse branch logic trigger.\r\n'recycle'\r\n];\r\nconst badItemMoves = [ // Bad items.\r\n'bestow', 'fling', 'switcheroo', 'trick'\r\n];\r\nconst badAbilityMoves = [ // Bad abilities.\r\n'entrainment', 'skill-swap'\r\n];\r\nconst berryMoves = [ // Berries.\r\n'natural-gift', 'stuff-cheeks', 'teatime', 'belch'\r\n];\r\n\r\n// Abilities.\r\nconst weatherAbilities = [ // Weather moves and abilities.\r\n'drought', 'desolate-land', 'drizzle', 'primordial-sea', 'sand-stream', 'sand-spit', 'snow-warning', 'delta-stream'\r\n];\r\nconst terrainAbilities = [ // Terrain moves and items.\r\n'electric-surge', 'grassy-surge', 'misty-surge', 'psychic-surge'\r\n];\r\nconst orbAbilities = [ // Toxic and flame orb.\r\n'guts', 'magic-guard', 'quick-feet', 'marvel-scale'\r\n];\r\nconst consumableItemAbilities = [ // Consumable items. Reverse branch logic trigger.\r\n'pickup', 'unburden', 'pickpocket', 'magician'\r\n];  \r\nconst berryAbilities = [ // Berries. Reverse branch logic trigger.\r\n'cheek-pouch', 'gluttony', 'harvest', 'ripen',\r\n];\r\n\r\n// Items.\r\nconst consumableItems = [ // Consumable items. Reverse branch logic.\r\n'absorb-bulb', 'air-balloon', 'cell-battery', 'eject-button' ,'electric-seed', 'focus-sash', 'grassy-seed',\r\n'luminous-moss', 'mental-herb', 'misty-seed', 'power-herb', 'psychic-seed', 'red-card', 'white-herb', 'snowball', 'weakness-policy',\r\n'bug-gem', 'dark-gem', 'dragon-gem', 'electric-gem', 'fairy-gem', 'fighting-gem', 'fire-gem', 'flying-gem',\r\n'ghost-gem', 'grass-gem', 'ground-gem', 'ice-gem', 'poison-gem', 'psychic-gem', 'rock-gem', 'steel-gem', 'water-gem'\r\n];  \r\nconst plateItems = [ // Plate items. Reverse branch logic.\r\n'draco-plate', 'dread-plate', 'earth-plate', 'fist-plate', 'flame-plate', 'icicle-plate', 'insect-plate', 'iron-plate',\r\n'meadow-plate', 'mind-plate', 'pixie-plate', 'sky-plate', 'splash-plate', 'spooky-plate', 'stone-plate', 'toxic-plate', 'zap-plate'\r\n];  \r\nconst memoryItems = [ // Memory items. Reverse branch logic.\r\n'bug-memory', 'dark-memory', 'dragon-memory', 'electric-memory', 'fairy-memory', 'fighting-memory', 'fire-memory', 'flying-memory',\r\n'ghost-memory', 'grass-memory', 'ground-memory', 'ice-memory', 'poison-memory', 'psychic-memory', 'rock-memory', 'steel-memory', 'water-memory'\r\n];\r\nconst berryItems = [ // Berry items. Reverse branch logic.\r\n'cheri-berry', 'chesto-berry', 'pecha-berry', 'rawst-berry', 'aspear-berry', 'leppa-berry', 'persim-berry', 'lum-berry', 'sitrus-berry',\r\n'figy-berry', 'wiki-berry', 'mago-berry', 'aguav-berry', 'iapapa-berry', 'occa-berry', 'passho-berry', 'wacan-berry', 'rindo-berry', \r\n'yache-berry', 'chople-berry', 'kebia-berry', 'shuca-berry', 'coba-berry', 'payapa-berry', 'tanga-berry', 'charti-berry', 'kasib-berry',\r\n'haban-berry', 'colbur-berry', 'babiri-berry', 'chilan-berry', 'liechi-berry', 'ganlon-berry', 'salac-berry', 'petaya-berry', \r\n'apicot-berry', 'lansat-berry', 'starf-berry', 'enigma-berry', 'micle-berry', 'custap-berry', 'jaboca-berry', 'rowap-berry'\r\n];\r\n\r\nexport {\r\n    bindMoves, biteMoves, pulseMoves, punchMoves, soundMoves, chargeMoves, contactMoves, multistrikeMoves,\r\n    barrierMoves, healMoves, drainMoves, recoilMoves, weatherMoves, terrainMoves, trapMoves,\r\n    orbMoves, badAbilityMoves, badItemMoves, consumableItemMoves, berryMoves,\r\n    weatherAbilities, terrainAbilities, orbAbilities, consumableItemAbilities, berryAbilities,\r\n    plateItems, memoryItems, consumableItems, berryItems\r\n}","const randomOptions = {\r\npokemons: 9,\r\nmovesets: 6,\r\nmoves: 6,\r\nabilities: 9,\r\nitems: 9\r\n};\r\nconst selectionsNeeded = {\r\npokemons: 6,    \r\nmovesets: 6,\r\nmoves: 4,\r\nabilities: 6,\r\nitems: 6\r\n};\r\n\r\nconst topPokemonBalance = 1; // Number of top pokemon generated (legendary / mythical / high stats). \r\nconst topPokemonTotalStatsThreshold = 600; // Total stats for a normal pokemon to count as top.\r\nconst moveStatusLimit = 3; // Max number of status moves in a moveset.\r\n\r\nconst statRanges = {\r\nhp: [120, 280],\r\ngeneral: [40, 200],\r\ntotal: [360, 680],\r\n};\r\n\r\nexport {\r\n    randomOptions, selectionsNeeded,\r\n    topPokemonBalance, topPokemonTotalStatsThreshold, moveStatusLimit,\r\n    statRanges,\r\n}","import React from 'react';\r\n \r\nconst TeamBuilderContext = React.createContext(null);\r\n \r\nexport { TeamBuilderContext };","export default __webpack_public_path__ + \"static/media/logo.1e1593df.png\";","import React from 'react'\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { TeamBuilderContext } from '../context/TeamBuilderContext';\r\nimport logo from '../assets/logo.png';\r\nimport { FaCheck, FaCopy } from \"react-icons/fa\";\r\n\r\nexport default function Sidebar() {\r\n    const location = useLocation();\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    return (\r\n        <div className=\"min-w-max h-screen sticky top-0 bg-white\">\r\n            <div className=\"w-48 flex justify-center items-center py-8\">\r\n                <Link to='/'>\r\n                    <img src={logo} alt=\"logo\" width=\"160px\" style={{minWidth: '160px'}} />\r\n                </Link> \r\n            </div>\r\n            <div className=\"flex flex-col w-full justify-start items-center\">\r\n                <NavLink exact to='/'\r\n                    className=\"inline-flex items-center justify-left text-lg w-full pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                    activeClassName=\"bg-gray-300 border-gray-600\">\r\n                    <p>Home</p>\r\n                </NavLink>                \r\n                <div className=\"flex flex-col items-left justify-center w-full\">\r\n                    <NavLink to='/builder'\r\n                        className=\"w-full text-lg pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                        activeClassName=\"bg-gray-300 border-gray-600\">\r\n                        <p>Team Builder</p>\r\n                    </NavLink>\r\n                    {location.pathname === \"/builder\" ? <div className=\"flex flex-col\">\r\n                        <HashLink smooth to=\"/builder#actions\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Actions</p>\r\n                            {Object.values(context.sectionsCompleted).every(val => val) ? <FaCopy className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#pokemon\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Pokémon</p>\r\n                            {context.sectionsCompleted.pokemons ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#movesets\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Movesets</p>\r\n                            {context.sectionsCompleted.movesets && context.sectionsCompleted.moves ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#abilities\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Abilities</p>\r\n                            {context.sectionsCompleted.abilities ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/builder#items\"\r\n                            className=\"w-full flex justify-between items-center pr-4 pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Items</p>\r\n                            {context.sectionsCompleted.items ? <FaCheck className=\"text-green-400 animate-enter\" /> : null}\r\n                        </HashLink>\r\n                    </div> : null}\r\n                </div>       \r\n                <div className=\"flex flex-col items-left justify-center w-full\">\r\n                    <NavLink to='/format'\r\n                        className=\"inline-flex items-center justify-left text-lg w-full pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                        activeClassName=\"bg-gray-300 border-gray-600\">\r\n                        <p>Format</p>\r\n                    </NavLink>\r\n                    {location.pathname === \"/format\" ? <div className=\"flex flex-col\">\r\n                        <HashLink smooth to=\"/format#usage\"\r\n                            className=\"w-full pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Usage</p>\r\n                        </HashLink>\r\n                        <HashLink smooth to=\"/format#generation\"\r\n                            className=\"w-full pl-12 py-1 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\">\r\n                            <p>Generation</p>\r\n                        </HashLink>\r\n                    </div> : null}\r\n                </div>         \r\n                <NavLink to='/about'\r\n                    className=\"inline-flex items-center justify-left text-lg w-full pl-8 py-2 border-r-4 border-transparent hover:bg-gray-300 transition duration-150 ease-in-out\"\r\n                    activeClassName=\"bg-gray-300 border-gray-600\">\r\n                    <p>About</p>\r\n                </NavLink>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    var braveado = <a href=\"https://github.com/Braveado\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">Nelson Martínez</a>\r\n    var pokeapi = <a href=\"https://pokeapi.co/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">PokéAPI</a>\r\n    return (\r\n        <div className=\"mt-auto flex flex-wrap justify-center items-center w-full bg-white p-4\">\r\n            <div className=\"text-center\">Created by&nbsp;{braveado}&nbsp;and powered by&nbsp;{pokeapi}.&nbsp;</div>\r\n            <div className=\"text-center\">Pokémon and Pokémon character names are trademarks of Nintendo.</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from '../assets/logo.png';\r\n\r\nexport default function Home() {\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'Procedural Pokémon';\r\n    }, []);\r\n  \r\n    var showdown = <a href=\"https://pokemonshowdown.com/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">Pokémon Showdown</a>\r\n    \r\n    return (\r\n        <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">  \r\n            <div className=\"flex flex-col gap-4 items-center\">\r\n                <img src={logo} alt=\"logo\" />                \r\n            </div>\r\n            <div id=\"\" className=\"flex flex-col w-full\">                \r\n                <div className=\"flex justify-center items-center gap-4 text-center\">                    \r\n                    <p className=\"text-xl\">Procedurally generated pokémon teams to use in &nbsp;{showdown}.</p>                                        \r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-center gap-4 p-4 w-full\">\r\n                    <div className=\"flex flex-wrap justify-center items-center gap-4\">\r\n                        <div className=\"flex flex-col items-center justify-center gap-4 p-4 rounded-md bg-white border-2 border-gray-200 w-96\">\r\n                            <Link to='/builder' className=\"text-2xl text-blue-400 hover:text-blue-500\">\r\n                                Try it now!\r\n                            </Link>   \r\n                            <p className=\"text-center\">\r\n                                Generate random options, create a team and export it to Pokémon Showdown.\r\n                            </p>                          \r\n                        </div>  \r\n                        <div className=\"flex flex-col items-center justify-center gap-4 p-4 rounded-md bg-white border-2 border-gray-200 w-96\">\r\n                            <Link to='/format' className=\"text-2xl text-blue-400 hover:text-blue-500\">\r\n                                How does it works?\r\n                            </Link>   \r\n                            <p className=\"text-center\">                                \r\n                                Check how the options are generated and the rules behind the format.\r\n                            </p>                          \r\n                        </div>                                                                      \r\n                    </div>                                                                       \r\n                </div>\r\n                <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">              \r\n                    <div id=\"links\" className=\"flex flex-col w-full\">\r\n                        <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                            <p className=\"text-lg\">Useful Links</p>\r\n                            <p className=\"text-base text-gray-400\">General resources.</p>\r\n                        </div>            \r\n                        <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                            <a href=\"https://bulbapedia.bulbagarden.net/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                Bulbapedia\r\n                            </a>\r\n                            <a href=\"https://img.pokemondb.net/images/typechart.png\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                Pokémon Type Chart\r\n                            </a>\r\n                            <a href=\"https://www.pkmn.help/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                Pokémon Type Calculator\r\n                            </a>                   \r\n                        </div>                                                            \r\n                    </div>                    \r\n                </div>                                                            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/guide_create_1.a2d7912a.jpg\";","export default __webpack_public_path__ + \"static/media/guide_create_2.87853e0c.jpg\";","export default __webpack_public_path__ + \"static/media/guide_create_3.713c9639.jpg\";","export default __webpack_public_path__ + \"static/media/guide_create_4.cbdb163e.jpg\";","export default __webpack_public_path__ + \"static/media/guide_create_5.46168545.jpg\";","export default __webpack_public_path__ + \"static/media/guide_create_6.f1a56fa2.jpg\";","export default __webpack_public_path__ + \"static/media/guide_import_1.e9643981.jpg\";","export default __webpack_public_path__ + \"static/media/guide_import_2.b80a934b.jpg\";","export default __webpack_public_path__ + \"static/media/guide_import_3.a23b2109.jpg\";","export default __webpack_public_path__ + \"static/media/guide_import_4.da7a16ce.jpg\";","export default __webpack_public_path__ + \"static/media/guide_play_1.16a881b9.jpg\";","export default __webpack_public_path__ + \"static/media/guide_play_2.9773ce33.jpg\";","export default __webpack_public_path__ + \"static/media/guide_play_3.f65f1da3.jpg\";","export default __webpack_public_path__ + \"static/media/guide_play_4.4834cf96.jpg\";","export default __webpack_public_path__ + \"static/media/guide_play_5.e605d6e4.jpg\";","import create1 from '../assets/guide/guide_create_1.jpg';\r\nimport create2 from '../assets/guide/guide_create_2.jpg';\r\nimport create3 from '../assets/guide/guide_create_3.jpg';\r\nimport create4 from '../assets/guide/guide_create_4.jpg';\r\nimport create5 from '../assets/guide/guide_create_5.jpg';\r\nimport create6 from '../assets/guide/guide_create_6.jpg';\r\nimport import1 from '../assets/guide/guide_import_1.jpg';\r\nimport import2 from '../assets/guide/guide_import_2.jpg';\r\nimport import3 from '../assets/guide/guide_import_3.jpg';\r\nimport import4 from '../assets/guide/guide_import_4.jpg';\r\nimport play1 from '../assets/guide/guide_play_1.jpg';\r\nimport play2 from '../assets/guide/guide_play_2.jpg';\r\nimport play3 from '../assets/guide/guide_play_3.jpg';\r\nimport play4 from '../assets/guide/guide_play_4.jpg';\r\nimport play5 from '../assets/guide/guide_play_5.jpg';\r\n\r\nconst createTeam = [ \r\n    create1, create2, create3, create4, create5, create6\r\n];\r\n\r\nconst importTeam = [ \r\n    import1, import2, import3, import4\r\n];\r\n\r\nconst playTeam = [ \r\n    play1, play2, play3, play4, play5\r\n];\r\n    \r\nexport {\r\n    createTeam, importTeam, playTeam\r\n}","import React from 'react'\r\n\r\nexport default function Table({ data }) {    \r\n\r\n    return (\r\n        <div className=\"border-2 border-gray-200 rounded-md bg-white inline-flex flex-col\">\r\n            <table className=\"border-spacing-0 border-collapse border-hidden\">\r\n                <thead className=\"border-b-2 border-gray-200\">\r\n                    <tr className=\"bg-gray-200\">\r\n                        {data ? \r\n                            data.columns.map((c, i) => {\r\n                                return (\r\n                                    <th className=\"py-2 px-4\" key={i}>{ c }</th>\r\n                                )\r\n                            })\r\n                        : \r\n                            <th className=\"py-2 px-4\">Column</th>\r\n                        }\r\n                    </tr>\r\n                </thead>                                                        \r\n                <tbody className=\"divide-y-2 divide-gray-200\">                    \r\n                    {data ? \r\n                        data.rows.map((r, i) => {\r\n                            return (\r\n                                <tr className={i % 2 === 0 ? '' : 'bg-gray-100'} key={i}>\r\n                                    {r.map((d, i) => {\r\n                                        return (\r\n                                            <td className=\"py-2 px-4\" key={i}>{ d }</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        })                        \r\n                    : \r\n                        <tr>\r\n                            <td className=\"py-2 px-4\">Row</td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            {data && data.references ?\r\n                <ul className=\"border-t-2 border-gray-200 px-4 py-2 space-y-1 text-xs bg-gray-200 list-disc list-inside\">\r\n                    {data.references.map((r, i) => {\r\n                        return (\r\n                            <li key={i}>\r\n                                { r }\r\n                            </li>\r\n                        )\r\n                    })} \r\n                </ul> \r\n            : null}                         \r\n        </div>\r\n    );\r\n}\r\n","// Pokemon\r\nconst filteredPokemon = {\r\n    columns: ['Pokémon', 'Filter'],\r\n    rows: [\r\n        ['Eternamax Eternatus', 'Above 720 total base stats'],\r\n        ['Mega Mewtwo (X & Y)', 'Above 720 total base stats & in-battle held item activation'],\r\n        ['Mega Rayquaza', 'Above 720 total base stats & in-battle move activation'],\r\n        ['Primal Kyogre', 'Above 720 total base stats & in-battle held item activation'],\r\n        ['Primal Groudon', 'Above 720 total base stats & in-battle held item activation'],\r\n        ['Ultra Necrozma', 'Above 720 total base stats & in-battle held item activation'],\r\n        ['Calyrex', 'Legendary below 540 total base stats'],\r\n        ['Zygarde 10%', 'Legendary below 540 total base stats'],\r\n        ['Phione', 'Mythical below 540 total base stats'],\r\n        ['Unown', 'Below 360 total base stats'],\r\n        ['Luvdisc', 'Below 360 total base stats'],\r\n        ['Delibird', 'Below 360 total base stats'],\r\n        ['Ditto', 'Below 360 total base stats'],\r\n        ['Smeargle', 'Below 360 total base stats'],\r\n        ['Shedinja', 'Below 360 total base stats'],\r\n        ['Wishiwashi', 'Below 360 total base stats'],\r\n        ['Crowned Zacian', 'In-battle held item activation'],\r\n        ['Crowned Zamazenta', 'In-battle held item activation'],\r\n        ['Zygarde Complete', 'In-battle ability activation'],\r\n        ['Mega Evolutions', 'In-battle held item activation'],\r\n        ['Dialga Origin', 'In-battle held item activation'],\r\n        ['Palkia Origin', 'In-battle held item activation'],        \r\n        ['Giratina Origin', 'In-battle held item activation'],        \r\n        ['Meloetta Pirouette', 'In-battle move activation'],        \r\n        ['Ash Greninja', 'In-battle ability activation'],   \r\n        ['Darmanitan Zen Mode', 'In-battle ability activation'],\r\n        ['Minior Core', 'In-battle ability activation'],                                \r\n        ['Busted Mimikyu', 'In-battle ability activation'], \r\n        ['Cramorant (Gulping & Gorging)', 'In-battle ability activation'],  \r\n        ['Eiscue Noice Face', 'In-battle ability activation'], \r\n        ['Hangry Morpeko', 'In-battle ability activation'],        \r\n        ['Sunshine Cherrim', 'In-battle ability activation'],        \r\n        ['Castform (Sunny, Rainy & Snowy)', 'In-battle ability activation'],                \r\n    ]\r\n}\r\nconst topPokemon = {\r\n    columns: ['Pokémon', 'Category'],\r\n    rows: [        \r\n        ['Eternatus', 'Legendary'],\r\n        ['Mewtwo', 'Legendary'],\r\n        ['Lugia', 'Legendary'],\r\n        ['Ho Oh', 'Legendary'],\r\n        ['Dialga', 'Legendary'],\r\n        ['Palkia', 'Legendary'],\r\n        ['Giratina', 'Legendary'],\r\n        ['Reshiram', 'Legendary'],\r\n        ['Zekrom', 'Legendary'],\r\n        ['Xerneas', 'Legendary'],\r\n        ['Yveltal', 'Legendary'],        \r\n        ['Solgaleo', 'Legendary'],\r\n        ['Lunala', 'Legendary'],\r\n        ['Necrozma (Default, Dusk Mane & Dawn Wings)', 'Legendary'],\r\n        ['Calyrex (Shadow Raider & Ice Raider)', 'Legendary'],\r\n        ['Kyogre', 'Legendary'],\r\n        ['Groudon', 'Legendary'],\r\n        ['Regigigas', 'Legendary'],\r\n        ['Zacian', 'Legendary'],\r\n        ['Zamazenta', 'Legendary'],\r\n        ['Kyurem', 'Legendary'],  \r\n        ['Latias', 'Legendary'],\r\n        ['Latios', 'Legendary'],\r\n        ['Heatran', 'Legendary'],\r\n        ['Cresselia', 'Legendary'],\r\n        ['Landorus (Incarnate & Therian)', 'Legendary'],\r\n        ['Zygarde 50%', 'Legendary'],\r\n        ['Necrozma', 'Legendary'],\r\n        ['Articuno', 'Legendary'],\r\n        ['Zapdos', 'Legendary'],\r\n        ['Moltres', 'Legendary'],\r\n        ['Raikou', 'Legendary'],\r\n        ['Entei', 'Legendary'],\r\n        ['Suicune', 'Legendary'],\r\n        ['Regirock', 'Legendary'],\r\n        ['Regice', 'Legendary'],\r\n        ['Registeel', 'Legendary'],\r\n        ['Uxie', 'Legendary'],\r\n        ['Mesprit', 'Legendary'],\r\n        ['Azelf', 'Legendary'],\r\n        ['Cobalion', 'Legendary'],\r\n        ['Terrakion', 'Legendary'],\r\n        ['Virizion', 'Legendary'],\r\n        ['Tornadus (Incarnate & Therian)', 'Legendary'],\r\n        ['Thundurus (Incarnate & Therian)', 'Legendary'],\r\n        ['Regieleki', 'Legendary'],\r\n        ['Regidrago', 'Legendary'],\r\n        ['Glastrier', 'Legendary'],\r\n        ['Spectrier', 'Legendary'],        \r\n        ['Silvally', 'Legendary'],\r\n        ['Tapu Koko', 'Legendary'],\r\n        ['Tapu Lele', 'Legendary'],\r\n        ['Tapu Bulu', 'Legendary'],\r\n        ['Tapu Fini', 'Legendary'],\r\n        ['Urshifu (Single Strike & Rapid Strike)', 'Legendary'], \r\n        ['Arceus', 'Mythical'],\r\n        ['Hoopa (Unbound & Confined)', 'Mythical'],\r\n        ['Mew', 'Mythical'],\r\n        ['Celebi', 'Mythical'],                \r\n        ['Jirachi', 'Mythical'],\r\n        ['Deoxys (Normal, Attack, Defense & Speed)', 'Mythical'],                \r\n        ['Manaphy', 'Mythical'],\r\n        ['Darkrai', 'Mythical'],\r\n        ['Shaymin (Land & Sky)', 'Mythical'],\r\n        ['Victini', 'Mythical'],\r\n        ['Meloetta Aria', 'Mythical'],\r\n        ['Genesect', 'Mythical'],\r\n        ['Diancie', 'Mythical'],\r\n        ['Volcanion', 'Mythical'],\r\n        ['Magearna', 'Mythical'],\r\n        ['Marshadow', 'Mythical'],\r\n        ['Zeraora', 'Mythical'],\r\n        ['Melmetal', 'Mythical'],\r\n        ['Zarude', 'Mythical'],\r\n        ['Keldeo', 'Mythical'],\r\n        ['Slaking', 'Above 600 total base stats'],\r\n        ['Dragonite', 'Above 600 total base stats'],\r\n        ['Tyranitar', 'Above 600 total base stats'],\r\n        ['Salamence', 'Above 600 total base stats'],\r\n        ['Metagross', 'Above 600 total base stats'],\r\n        ['Garchomp', 'Above 600 total base stats'],\r\n        ['Hydreigon', 'Above 600 total base stats'],\r\n        ['Goodra', 'Above 600 total base stats'],\r\n        ['Kommo O', 'Above 600 total base stats'],                            \r\n    ]\r\n}\r\n\r\n// Moves\r\nconst filteredMoves = {\r\n    columns: ['Move', 'Filter'],\r\n    rows: [\r\n        ['G-Max Moves', 'Special type of moves'],\r\n        ['Max Moves', 'Special type of moves'],\r\n        ['Z-Moves', 'Special type of moves'],\r\n        ['Struggle', 'Special type of move'],\r\n        ['Gear Up', 'Filtered ability requirement'],\r\n        ['Magnetic Flux', 'Filtered ability requirement'],\r\n        ['Helping Hand', 'Unusable in single battles'],\r\n        ['Aromatic Mist', 'Unusable in single battles'],\r\n        ['Hold Hands', 'Unusable in single battles'],\r\n        ['Coaching', 'Unusable in single battles'],        \r\n        ['Spotlight', 'Unusable in single battles'],\r\n        ['Quash', 'Unusable in single battles'],\r\n        ['Decorate', 'Unusable in single battles'],        \r\n        ['Happy Hour', 'Friendship based move'],\r\n        ['Return', 'Friendship based move'],\r\n        ['Frustration', 'Friendship based move'],\r\n        ['Veevee Volley', 'Friendship based move'],\r\n        ['Pika Papow', 'Friendship based move'],\r\n        ['Happy Hour', 'Friendship based move'],\r\n        ['Splash', 'No effect move'],\r\n        ['Celebrate', 'No effect move'],        \r\n    ]\r\n}\r\nconst usabilityMoves = {\r\n    columns: ['Move', 'Requirement'],\r\n    rows: [\r\n        ['Swallow', 'Moveset space to bundle with Stockpile'],\r\n        ['Spit Up', 'Moveset space to bundle with Stockpile'],\r\n        ['Stockpile', 'Moveset space to bundle with Swallow or Spit Up'],\r\n        ['Aurora Veil', 'Moveset space to bundle with Hail'],        \r\n        ['Hyperspace Fury', 'Pokémon options contain Hoopa Unbound'],\r\n        ['Dark Void', 'Pokémon options contain Darkrai'],\r\n        ['Aura Wheel', 'Pokémon options contain Morpeko'],\r\n        ['Recycle', 'Item options will include a consumable item'],\r\n        ['Natural Gift', 'Item options will include a berry'],\r\n        ['Stuff Cheeks', 'Item options will include a berry'],\r\n        ['Teatime', 'Item options will include a berry'],\r\n        ['Belch', 'Item options will include a berry'],\r\n        ['Hidden Power', 'Roll pokémon type from possible ones'],        \r\n    ]\r\n}\r\n\r\n// Abilities\r\nconst filteredAbilities = {\r\n    columns: ['Ability', 'Filter'],\r\n    rows: [\r\n        ['Illuminate', 'No effect in custom battles'],\r\n        ['Ball Fetch', 'No effect in custom battles'],\r\n        ['Honey Gather', 'No effect in custom battles'],\r\n        ['Run Away', 'No effect in custom battles'],\r\n        ['Plus', 'Unusable in single battles'],\r\n        ['Minus', 'Unusable in single battles'],\r\n        ['Battery', 'Unusable in single battles'],\r\n        ['Healer', 'Unusable in single battles'],\r\n        ['Friend Guard', 'Unusable in single battles'],\r\n        ['Pwer of Alchemy', 'Unusable in single battles'],\r\n        ['Power Spot', 'Unusable in single battles'],\r\n        ['Receiver', 'Unusable in single battles'],\r\n        ['Symbiosis', 'Unusable in single battles'],\r\n        ['Telepathy', 'Unusable in single battles'],\r\n        ['Curious Medicine', 'Unusable in single battles'],        \r\n        ['Anticipation', 'Unusable with oposing team information'],\r\n        ['Forewarn', 'Unusable with oposing team information'],\r\n        ['Frisk', 'Unusable with oposing team information'],\r\n        ['Schooling', 'Wishiwashi specific'],\r\n    ]\r\n}\r\nconst usabilityAbilities = {\r\n    columns: ['Ability', 'Requirement'],\r\n    rows: [\r\n        ['Multitype', 'Pokémon options contain Arceus & item options will include a plate'],\r\n        ['RKS System', 'Pokémon options contain Silvally & item options will include a memory'],\r\n        ['Ice Face', 'Pokémon options contain Eiscue'],\r\n        ['Hunger Switch', 'Pokémon options contain Morpeko & move options contain Aura Wheel'],\r\n        ['Forecast', 'Pokémon options contain Castform & move or ability options contain Harsh Sunlight, Rain or Hail activation'],\r\n        ['Flower Gift', 'Pokémon options contain Cherrim & move or ability options contain Harsh Sunlight activation'],\r\n        ['Zen Mode', 'Pokémon options contain Darmanitan'],\r\n        ['Battle Bond', 'Pokémon options contain Greninja'],\r\n        ['Stance Change', \"Pokémon options contain Aegislash & move options contain King's Shield\"],\r\n        ['Power Construct', 'Pokémon options contain Zygarde'],\r\n        ['Shields Down', 'Pokémon options contain Minior'],\r\n        ['Disguise', 'Pokémon options contain Mimikyu'],\r\n        ['Gulp Missile', 'Pokémon options contain Cramorant & move options contain Surf or Dive'],\r\n        ['Flower Veil', 'Pokémon options contain grass type pokémon'],\r\n        ['Iron Fist', 'Move options contain punch moves'],\r\n        ['Skill Link', 'Move options contain multistrike moves'],\r\n        ['Reckless', 'Move options contain recoil or crash moves'],\r\n        ['Rock Headed', 'Move options contain recoil moves'],\r\n        ['Strong Jaw', 'Move options contain bite moves'],\r\n        ['Mega Launcher', 'Move options contain aura or pulse moves'],\r\n        ['Liquid Voice', 'Move options contain sound moves excluding Sparkling Aria'],\r\n        ['Punk Rock', 'Move options contain sound moves'],\r\n        ['Triage', 'Move options contain healing moves'],\r\n        ['Tough Claws', 'Move options contain contact moves'],\r\n        ['Unseen Fist', 'Move options contain contact moves'],\r\n        ['Poison Touch', 'Move options contain contact moves'],\r\n        ['Long Reach', 'Move options contain contact moves'],\r\n        ['Flash Fire', 'Move options contain fire type moves'],\r\n        ['Blaze', 'Move options contain fire type moves'],\r\n        ['Overgrow', 'Move options contain grass type moves'],\r\n        ['Torrent', 'Move options contain water type moves'],\r\n        ['Swarm', 'Move options contain bug type moves'],\r\n        ['Scrappy', 'Move options contain normal or fighting type moves'],\r\n        ['Gale Wings', 'Move options contain flying type moves'],\r\n        ['Dark Aura', 'Move options contain dark type moves'],\r\n        ['Fairy Aura', 'Move options contain fairy type moves'],\r\n        ['Steelworker', 'Move options contain steel type moves'],\r\n        ['Steely Spirit', 'Move options contain steel type moves'],\r\n        ['Transistor', 'Move options contain electric type moves'],\r\n        [\"Dragon's Maw\", 'Move options contain dragon type moves'],\r\n        ['Refrigerate', 'Move options contain normal type moves'],\r\n        ['Pixilate', 'Move options contain normal type moves'],\r\n        ['Galvanize', 'Move options contain normal type moves'],\r\n        ['Aerilate', 'Move options contain normal type moves'],\r\n        ['Truant', 'Move options contain bad ability moves*'],\r\n        ['Stall', 'Move options contain bad ability moves*'],\r\n        ['Klutz', 'Move options contain bad ability moves*'],\r\n        ['Slow Start', 'Move options contain bad ability moves*'],\r\n        ['Defeatist', 'Move options contain bad ability moves*'],\r\n        ['Mimicry', 'Move or ability options contain terrain activation'],\r\n        ['Grass Pelt', 'Move or ability options contain Grassy Terrain activation'],\r\n        ['Surge Surfer', 'Move or ability options contain Electric Terrain activation'],\r\n        ['Clorophyll', 'Move or ability options contain Harsh Sunlight activation'],        \r\n        ['Leaf Guard', 'Move or ability options contain Harsh Sunlight activation'],        \r\n        ['Solar Power', 'Move or ability options contain Harsh Sunlight activation'],        \r\n        ['Hydration', 'Move or ability options contain Rain activation'],        \r\n        ['Rain Dish', 'Move or ability options contain Rain activation'],        \r\n        ['Swift Swim', 'Move or ability options contain Rain activation'],        \r\n        ['Sand Veil', 'Move or ability options contain Sandstorm activation'],        \r\n        ['Sand Rush', 'Move or ability options contain Sandstorm activation'],        \r\n        ['Sand Force', 'Move or ability options contain Sandstorm activation & move options contain rock, ground or steel type moves'],        \r\n        ['Ice Body', 'Move or ability options contain Hail activation'],        \r\n        ['Snow Cloak', 'Move or ability options contain Hail activation'],        \r\n        ['Slush Rush', 'Move or ability options contain Hail activation'],   \r\n        ['Pickup', 'Item options will include a consumable item'],\r\n        ['Unburden', 'Item options will include a consumable item'],\r\n        ['Pickpocket', 'Item options will include a consumable item'],\r\n        ['Magician', 'Item options will include a consumable item'],\r\n        ['Cheek Pouch', 'Item options will include a berry'],     \r\n        ['Gluttony', 'Item options will include a berry'],     \r\n        ['Harvest', 'Item options will include a berry'],     \r\n        ['Ripen', 'Item options will include a berry'],     \r\n    ],\r\n    references: [\r\n        'Bad ability moves contain Entrainment and Skill Swap',\r\n    ]\r\n}\r\n\r\n//Items\r\nconst filteredItems = {\r\n    columns: ['Item', 'Filter'],\r\n    rows: [\r\n        ['Z-Crystals', 'Z-move related'],\r\n        ['Mega Stones', 'Mega evolution related'],\r\n        ['Deep Sea Tooth & Scale', 'Clamperl specific'],\r\n        ['Light Ball', 'Pikachu specific'],\r\n        ['Metal & Quick Powder', 'Ditto specific'], \r\n        ['Lucky Punch', 'Chansey specific'],\r\n        ['Oran Berry', 'Notably weaker berry'],        \r\n    ]\r\n}\r\nconst usabilityItems = {\r\n    columns: ['Item', 'Requirement'],\r\n    rows: [\r\n        ['Rusted Sword', 'Pokémon options contain Zacian'],\r\n        ['Rusted Shield', 'Pokémon options contain Zamazenta'],\r\n        ['Griseous Orb', 'Pokémon options contain Giratina & move options include dragon or ghost type moves'],\r\n        ['Adamant Orb', 'Pokémon options contain Dialga & move options include dragon or steel type moves'],\r\n        ['Lustrous Orb', 'Pokémon options contain Palkia & move options include dragon or water type moves'],\r\n        ['Soul Dew', 'Pokémon options contain Latios or Latias & move options include dragon or psychic type moves'],\r\n        ['Thick Club', \"Pokémon options contain Sirfetch'd\"],\r\n        ['Stick', 'Pokémon options contain Marowak'],    \r\n        ['Type Enhancement Items', 'Move options contain relevant pokémon type moves'],\r\n        ['Gems', 'Move options contain relevant pokémon type moves'],        \r\n        ['Power Herb', 'Move options contain charge moves excluding Sky Drop'],\r\n        ['Grip Claw', 'Move options contain bind moves'],\r\n        ['Binding Band', 'Move options contain bind moves'],\r\n        ['Big Root', 'Move options contain drain moves'],\r\n        ['Light Clay', 'Move options contain barrier moves'],        \r\n        ['Throat Spray', 'Move options contain sound moves'],\r\n        ['Room Service', 'Move options contain Trick Room'],        \r\n        ['Terrain Extender', 'Move or ability options contain terrain activation'],\r\n        ['Electric Seed', 'Move or ability options contain Electric Terrain activation'],\r\n        ['Grassy Seed', 'Move or ability options contain Grassy Terrain activation'],\r\n        ['Misty Seed', 'Move or ability options contain Misty Terrain activation'],\r\n        ['Psychic Seed', 'Move or ability options contain Psychic Terrain activation'],\r\n        ['Heat Rock', 'Move or ability options contain Harsh Sunlight activation excluding Desolate Land'],\r\n        ['Damp Rock', 'Move or ability options contain Rain activation excluding Primordial Sea'],\r\n        ['Icy Rock', 'Move or ability options contain Hail activation'],\r\n        ['Smooth Rock', 'Move or ability options contain Sandstorm activation'],                        \r\n        ['Black Sludge', 'Pokémon options contain poison type pokémon or move options contain bad item moves*'],\r\n        ['Ring Target', 'Move options contain bad item moves*'],\r\n        ['Iron Ball', 'Move options contain bad item moves*'],\r\n        ['Lagging Tail', 'Move options contain bad item moves*'],\r\n        ['Sticky Barb', 'Move options contain bad item moves*'],\r\n        ['Full Incense', 'Move options contain bad item moves*'],\r\n        ['Toxic Orb', 'Move or ability options contain bad item moves*, status orb moves*, status orb abilities*, Poison Heal or Toxic Boost'],\r\n        ['Flame Orb', 'Move or ability options contain bad item moves*, status orb moves*, status orb abilities* or Flare Boost'],\r\n        ['Plates', 'Move or ability options contain relevant pokémon type moves, Judgment or Multitype'],\r\n        ['Memories', 'Move or ability options contain Multi Attack or RKS System'],\r\n        ['Drives', 'Move options contain Techno Blast'],        \r\n    ],\r\n    references: [\r\n        'Bad item moves contain Bestow, Fling, Switcheroo and Trick',\r\n        'Status orb moves contain Facade and Psycho Shift',\r\n        'Status orb abilities contain Guts, Marvel Scale, Quick Feet and Magic Guard'\r\n    ]\r\n}\r\n    \r\nexport {\r\n    filteredPokemon, topPokemon,\r\n    filteredMoves, usabilityMoves,\r\n    filteredAbilities, usabilityAbilities,\r\n    filteredItems, usabilityItems\r\n}","import React, {useEffect, useState} from 'react';\r\nimport * as guide from '../constants/guide';\r\nimport {AiOutlinePlus, AiOutlineMinus} from 'react-icons/ai';\r\nimport Table from '../components/Table';\r\nimport * as format from '../constants/format';\r\n\r\nexport default function Format() {\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'Format - Procedural Pokémon';\r\n    }, []);\r\n\r\n    // Guides\r\n    const [showCreate, setShowCreate] = useState(false);\r\n    const [showImport, setShowImport] = useState(false);\r\n    const [showPlay, setShowPlay] = useState(false);\r\n\r\n    // Format\r\n    const [showFilteredPokemon, setShowFilteredPokemon] = useState(false);\r\n    const [showTopPokemon, setShowTopPokemon] = useState(false);\r\n    const [showFilteredMoves, setShowFilteredMoves] = useState(false); \r\n    const [showUsabilityMoves, setShowUsabilityMoves] = useState(false); \r\n    const [showFilteredAbilities, setShowFilteredAbilities] = useState(false); \r\n    const [showUsabilityAbilities, setShowUsabilityAbilities] = useState(false); \r\n    const [showFilteredItems, setShowFilteredItems] = useState(false); \r\n    const [showUsabilityItems, setShowUsabilityItems] = useState(false); \r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">  \r\n            <div id=\"usage\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Usage</p>\r\n                    <p className=\"text-base text-gray-400\">How to use the format.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-2 border-gray-200 rounded-md\">\r\n                    <div className=\"flex flex-col w-full\">\r\n                        <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                            <p className=\"text-lg\">Basics</p>\r\n                            <p className=\"text-base text-gray-400\">General points about the format.</p>\r\n                        </div>            \r\n                        <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">                               \r\n                            <ul className=\"space-y-2\">                                                          \r\n                                <li>\r\n                                    The format aims to generate random yet balanced pokémon teams using procedural generation.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">  \r\n                                        <li>                                    \r\n                                            Randomly generated numbers are used to get pokémon, moves, abilities and items across the first 8 generations of the main Pokémon games.                                    \r\n                                        </li>\r\n                                        <li>                                    \r\n                                            Potential options are then put through filters to prevent unbalanced or unusable ones.\r\n                                        </li>\r\n                                        <li>\r\n                                            Once all options have been generated, a complete pokémon team must be built with them to then export it.\r\n                                        </li>                                                     \r\n                                    </ul>\r\n                                </li>                                \r\n                                <li>                                    \r\n                                    Teams can be imported to Pokémon Showdown for battles via custom games.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Created teams are intended for use in single battles on generation 8 custom games, preventing the use of dynamax mechanics is recommended.</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>                         \r\n                        </div>                                                            \r\n                    </div>\r\n                    <div className=\"flex flex-col w-full\">\r\n                        <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                            <p className=\"text-lg\">Guide</p>\r\n                            <p className=\"text-base text-gray-400\">Steps for creating, importing and playing with a team.</p>\r\n                        </div>            \r\n                        <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">  \r\n                            <div className=\"space-y-4\">                          \r\n                                <div >\r\n                                    <button type=\"button\" onClick={() => setShowCreate(!showCreate)}\r\n                                        className={`text-center p-2 rounded-md hover:bg-gray-200 border-2 w-96 transition duration-150 ease-in-out border-gray-200\r\n                                        ${showCreate ? 'bg-gray-200' : 'bg-white'}`}>\r\n                                        Create team\r\n                                    </button>\r\n                                </div>\r\n                                {showCreate ?\r\n                                <ol className=\"list-decimal list-inside space-y-4 pl-4 border-l-2 border-dashed border-gray-400\">                                \r\n                                    <li>\r\n                                        Generate options inside the Team Builder.\r\n                                        <ul className=\"pl-4\">\r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.createTeam[0]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>   \r\n                                    <li>\r\n                                        Select all required pokémon.\r\n                                        <ul className=\"pl-4\">\r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\" \r\n                                                    src={guide.createTeam[1]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>                                    \r\n                                    </li>    \r\n                                    <li>\r\n                                        Assign each selected pokémon to a moveset.\r\n                                        <ul className=\"pl-4\">\r\n                                            <li className=\"text-gray-600 text-sm\">\r\n                                                Select all required moves for each moveset.\r\n                                            </li>  \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.createTeam[2]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>   \r\n                                    <li>\r\n                                        Assign each selected pokémon to an ability.\r\n                                        <ul className=\"pl-4\">\r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.createTeam[3]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>                \r\n                                    <li>\r\n                                        Assign each selected pokémon to an item.\r\n                                        <ul className=\"pl-4\">\r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.createTeam[4]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>  \r\n                                    <li>\r\n                                        Done! Export the team.\r\n                                        <ul className=\"pl-4\">                                        \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.createTeam[5]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>                              \r\n                                </ol> \r\n                                : null}   \r\n                            </div> \r\n                            <div className=\"space-y-4\">                          \r\n                                <div >\r\n                                    <button type=\"button\" onClick={() => setShowImport(!showImport)}\r\n                                        className={`text-center p-2 rounded-md hover:bg-gray-200 border-2 w-96 transition duration-150 ease-in-out border-gray-200\r\n                                        ${showImport ? 'bg-gray-200' : 'bg-white'}`}>\r\n                                        Import team\r\n                                    </button>\r\n                                </div>\r\n                                {showImport ?\r\n                                <ol className=\"list-decimal list-inside space-y-4 pl-4 border-l-2 border-dashed border-gray-400\">\r\n                                    <li>\r\n                                        Go to Pokémon Showdown.\r\n                                        <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                            <li><a href=\"https://play.pokemonshowdown.com/teambuilder\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                                Team builder\r\n                                            </a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li>\r\n                                        Create a new team.\r\n                                        <ul className=\"pl-4\">                                        \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.importTeam[0]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>                          \r\n                                    <li>\r\n                                        Import using text.\r\n                                        <ul className=\"pl-4\">                                        \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.importTeam[1]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li> \r\n                                    <li>\r\n                                        Paste an exported team and save.\r\n                                        <ul className=\"pl-4\">\r\n                                            <li className=\"text-gray-600 text-sm\">\r\n                                                Shortcut: Ctrl + V.\r\n                                            </li>\r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.importTeam[2]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>                          \r\n                                    <li>\r\n                                        Done! Go back when ready.\r\n                                        <ul className=\"pl-4\">\r\n                                            <li className=\"text-gray-600 text-sm\">\r\n                                                Tip: Rename the team and/or pokémon.\r\n                                            </li>\r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.importTeam[3]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>                          \r\n                                </ol>    \r\n                                : null} \r\n                            </div>          \r\n                            <div className=\"space-y-4\">                               \r\n                                <div >\r\n                                    <button type=\"button\" onClick={() => setShowPlay(!showPlay)}\r\n                                        className={`text-center p-2 rounded-md hover:bg-gray-200 border-2 w-96 transition duration-150 ease-in-out border-gray-200\r\n                                        ${showPlay ? 'bg-gray-200' : 'bg-white'}`}>\r\n                                        Play game\r\n                                    </button>\r\n                                </div>\r\n                                {showPlay ?\r\n                                <ol className=\"list-decimal list-inside space-y-4 pl-4 border-l-2 border-dashed border-gray-400\">\r\n                                    <li>\r\n                                        Go to Pokémon Showdown.\r\n                                        <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                            <li><a href=\"https://play.pokemonshowdown.com/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                                Home\r\n                                            </a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li>\r\n                                        Find a user.\r\n                                        <ul className=\"pl-4\">                                        \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.playTeam[0]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>   \r\n                                    <li>\r\n                                        Start a challenge.\r\n                                        <ul className=\"pl-4\">                                        \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.playTeam[1]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li> \r\n                                    <li>\r\n                                        Send the challenge.\r\n                                        <ul className=\"pl-4\"> \r\n                                            <li className=\"text-gray-600 text-sm\">\r\n                                                Set the format to \"Custom Game\" and select an imported team. \r\n                                            </li>                                       \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.playTeam[2]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li> \r\n                                    <li>\r\n                                        Wait for the user to accept.\r\n                                        <ul className=\"pl-4\"> \r\n                                            <li className=\"text-gray-600 text-sm\">\r\n                                                They only need to select an imported team. \r\n                                            </li>                                         \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.playTeam[3]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li> \r\n                                    <li>\r\n                                        Done! Choose a team order to start the battle.\r\n                                        <ul className=\"pl-4\">                                        \r\n                                            <li>\r\n                                                <img className=\"border-2 shadow-md border-gray-200 rounded-md\"\r\n                                                    src={guide.playTeam[4]} alt=\"guide_create_1\" \r\n                                                />\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>                      \r\n                                </ol> \r\n                                : null} \r\n                            </div>                  \r\n                        </div>                                                            \r\n                    </div>\r\n                </div>                                                            \r\n            </div>\r\n            <div id=\"generation\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Generation</p>\r\n                    <p className=\"text-base text-gray-400\">How options are generated.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-2 border-gray-200 rounded-md\">\r\n                    <div className=\"flex flex-col w-full\">\r\n                        <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                            <p className=\"text-lg\">Pokémon Options</p>\r\n                            <p className=\"text-base text-gray-400\">Process for generating pokémon options.</p>\r\n                        </div>            \r\n                        <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">                            \r\n                            <ul className=\"space-y-2\">\r\n                                <li>\r\n                                    Get a random pokémon.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li><a href=\"https://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_National_Pok%C3%A9dex_number\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                            Pokédex #001-898.\r\n                                        </a></li>                                                        \r\n                                    </ul>\r\n                                </li>                            \r\n                                <li>\r\n                                    Get a random final evolution from its available ones.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Longest branch if applicable on branching evolutions.</li>                                                        \r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Get a random form from its available ones.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Exclude Gmax forms.</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check filters and reroll if filtered out.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Pokémon and pokémon forms outside the 360 to 720 total base stats range.</li>                        \r\n                                        <li>Legendary and mythical pokémon below 540 total base stats.</li>\r\n                                        <li>Pokémon forms that activate in-battle by a specific move, ability or held item.</li>\r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowFilteredPokemon(!showFilteredPokemon)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showFilteredPokemon ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showFilteredPokemon ? 'Hide' : 'Show' } filtered pokémon</p>\r\n                                            </button>\r\n                                            {showFilteredPokemon ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.filteredPokemon} />                                                \r\n                                                    </li>\r\n                                                </ul>\r\n                                            : null}\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check for \"top pokémon\" balance and reroll if needed.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Legendary, mythical and pokémon with at least 600 total stats.</li>\r\n                                        <li>Exactly 1 included in options.</li>\r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowTopPokemon(!showTopPokemon)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showTopPokemon ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showTopPokemon ? 'Hide' : 'Show' } available top pokémon</p>\r\n                                            </button>\r\n                                            {showTopPokemon ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.topPokemon} />                                                \r\n                                                    </li>                                                    \r\n                                                </ul>\r\n                                            : null}\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Roll for \"shiny bonus\" chance.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Shiny variant and increased level (+10).</li>\r\n                                        <li>Exactly 1 included in options.</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Roll attributes.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Random 252/252/4 spread for EVs.</li>\r\n                                        <li>3 random and 3 maxed IVs.</li>\r\n                                        <li>Random nature.</li>\r\n                                        <li>Random gender from possible ones.</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>                    \r\n                        </div>                                                            \r\n                    </div>\r\n                    <div className=\"flex flex-col w-full\">\r\n                        <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                            <p className=\"text-lg\">Moveset Options</p>\r\n                            <p className=\"text-base text-gray-400\">Process for generating moveset options.</p>\r\n                        </div>            \r\n                        <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                            <ul className=\"space-y-2\">\r\n                                <li>\r\n                                    Get a random move.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li><a href=\"https://bulbapedia.bulbagarden.net/wiki/List_of_moves\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                            Moves #001-826.\r\n                                        </a></li>                                                         \r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check filters and reroll if filtered out.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li>Special type of moves.</li>     \r\n                                        <li>Filtered ability or item requirement.</li>                   \r\n                                        <li>Unusable in single battles.</li>\r\n                                        <li>Friendship based moves.</li>\r\n                                        <li>No effect moves.</li>  \r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowFilteredMoves(!showFilteredMoves)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showFilteredMoves ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showFilteredMoves ? 'Hide' : 'Show' } filtered moves</p>\r\n                                            </button>\r\n                                            {showFilteredMoves ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.filteredMoves} />                                                \r\n                                                    </li>\r\n                                                </ul>\r\n                                            : null}\r\n                                        </li>                              \r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check for \"status limit\" and reroll if needed.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">                                \r\n                                        <li>Maximum of 3 status moves included in options.</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check for usability and reroll if needed.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">                                \r\n                                        <li>Space for \"combo\" moves.</li>\r\n                                        <li>Moves only usable by specific pokémon.</li>\r\n                                        <li>Held item requirements.</li>\r\n                                        <li>Unique cases coverage.</li>\r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowUsabilityMoves(!showUsabilityMoves)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showUsabilityMoves ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showUsabilityMoves ? 'Hide' : 'Show' } usability requirements for moves</p>\r\n                                            </button>\r\n                                            {showUsabilityMoves ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.usabilityMoves} />                                                \r\n                                                    </li>\r\n                                                </ul>\r\n                                            : null}\r\n                                        </li>  \r\n                                    </ul>\r\n                                </li>\r\n                            </ul>                  \r\n                        </div>                                                            \r\n                    </div>\r\n                    <div className=\"flex flex-col w-full\">\r\n                        <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                            <p className=\"text-lg\">Ability Options</p>\r\n                            <p className=\"text-base text-gray-400\">Process for generating ability options.</p>\r\n                        </div>            \r\n                        <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                            <ul className=\"space-y-2\">\r\n                                <li>\r\n                                    Get a random ability.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li><a href=\"https://bulbapedia.bulbagarden.net/wiki/Ability#List_of_Abilities\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                            Abilities #001-267.\r\n                                        </a></li>                                                         \r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check filters and reroll if filtered out.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">                      \r\n                                        <li>No effect in custom battles.</li>      \r\n                                        <li>Unusable in single battles.</li>\r\n                                        <li>Unusable with opposing team information.</li>                           \r\n                                        <li>Filtered out pokémon specific.</li>  \r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowFilteredAbilities(!showFilteredAbilities)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showFilteredAbilities ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showFilteredAbilities ? 'Hide' : 'Show' } filtered abilities</p>\r\n                                            </button>\r\n                                            {showFilteredAbilities ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.filteredAbilities} />                                                \r\n                                                    </li>\r\n                                                </ul>\r\n                                            : null}\r\n                                        </li>                               \r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check for usability and reroll if needed.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">                                \r\n                                        <li>Pokémon or pokémon form specific.</li>\r\n                                        <li>Move mechanic or type specific.</li>\r\n                                        <li>Held item requirements.</li>\r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowUsabilityAbilities(!showUsabilityAbilities)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showUsabilityAbilities ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showUsabilityAbilities ? 'Hide' : 'Show' } usability requirements for abilities</p>\r\n                                            </button>\r\n                                            {showUsabilityAbilities ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.usabilityAbilities} />                                                \r\n                                                    </li>\r\n                                                </ul>\r\n                                            : null}\r\n                                        </li> \r\n                                    </ul>\r\n                                </li>\r\n                            </ul>                    \r\n                        </div>                                                            \r\n                    </div>\r\n                    <div className=\"flex flex-col w-full\">\r\n                        <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                            <p className=\"text-lg\">Item Options</p>\r\n                            <p className=\"text-base text-gray-400\">Process for generating item options.</p>\r\n                        </div>            \r\n                        <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                            <ul className=\"space-y-2\">\r\n                                <li>\r\n                                    Get a random item.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                        <li><a href=\"https://bulbapedia.bulbagarden.net/wiki/Category:In-battle_effect_items\" target=\"_blank\" rel=\"noreferrer\" className=\"text-blue-400 hover:text-blue-500\">\r\n                                            In-battle effect items\r\n                                        </a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check filters and reroll if filtered out.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">                      \r\n                                        <li>No effect in custom battles.</li>\r\n                                        <li>Special type of move related.</li>                                \r\n                                        <li>Evolution related or filtered out pokémon specific.</li>\r\n                                        <li>Notably weaker berries.</li>\r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowFilteredItems(!showFilteredItems)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showFilteredItems ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showFilteredItems ? 'Hide' : 'Show' } filtered items</p>\r\n                                            </button>\r\n                                            {showFilteredItems ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.filteredItems} />                                                \r\n                                                    </li>\r\n                                                </ul>\r\n                                            : null}\r\n                                        </li>                                 \r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Check for usability and reroll if needed.\r\n                                    <ul className=\"pl-4 text-gray-600 text-sm\">                                \r\n                                        <li>Pokémon or pokémon form specific.</li>\r\n                                        <li>Move mechanic or type specific.</li>\r\n                                        <li>Ability mechanic specific.</li>\r\n                                        <li className=\"space-y-2\">\r\n                                            <button type=\"button\" onClick={() => setShowUsabilityItems(!showUsabilityItems)}\r\n                                                className=\"text-blue-400 hover:text-blue-500 inline-flex gap-2 items-center\">\r\n                                                { showUsabilityItems ? <AiOutlineMinus /> : <AiOutlinePlus />}\r\n                                                <p>{ showUsabilityItems ? 'Hide' : 'Show' } usability requirements for items</p>\r\n                                            </button>\r\n                                            {showUsabilityItems ?\r\n                                                <ul className=\"px-4 border-l-2 border-gray-400 border-dashed\">                                                \r\n                                                    <li>                                                    \r\n                                                        <Table data={format.usabilityItems} />                                                \r\n                                                    </li>\r\n                                                </ul>\r\n                                            : null}\r\n                                        </li> \r\n                                    </ul>\r\n                                </li>\r\n                            </ul>                    \r\n                        </div>                                                            \r\n                    </div>\r\n                </div>                                                            \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PokemonType({type, size = 'md'}) {\r\n    const getColor = () => {\r\n        switch(type) {\r\n            case 'normal': return 'bg-normal';\r\n            case 'fire': return 'bg-fire';\r\n            case 'water': return 'bg-water';\r\n            case 'grass': return 'bg-grass';\r\n            case 'electric': return 'bg-electric';\r\n            case 'ice': return 'bg-ice';\r\n            case 'fighting': return 'bg-fighting';\r\n            case 'poison': return 'bg-poison';\r\n            case 'ground': return 'bg-ground';\r\n            case 'flying': return 'bg-flying';\r\n            case 'psychic': return 'bg-psychic';\r\n            case 'bug': return 'bg-bug';\r\n            case 'rock': return 'bg-rock';\r\n            case 'ghost': return 'bg-ghost';\r\n            case 'dark': return 'bg-dark';\r\n            case 'dragon': return 'bg-dragon';\r\n            case 'steel': return 'bg-steel';\r\n            case 'fairy': return 'bg-fairy';\r\n            default: return '';\r\n        }\r\n    }    \r\n\r\n    const getSize = () => {\r\n        switch(size){\r\n            case 'sm':\r\n                return 'w-auto text-xs px-1 py-0.5'\r\n            default:\r\n                return 'w-16 text-sm px-1.5 py-0.5';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <p className={`flex items-center justify-center ${getSize()} capitalize rounded-md text-white font-semibold ${getColor()}`}>\r\n            {type}\r\n        </p>\r\n    )\r\n}\r\n","import {\r\n    bindMoves, biteMoves, pulseMoves, punchMoves, soundMoves, chargeMoves, contactMoves, multistrikeMoves,\r\n    barrierMoves, healMoves, drainMoves, recoilMoves, trapMoves\r\n} from '../constants/usability';\r\n\r\nconst pokemon = [ // Content\r\n    [\"Hit Points|Determines the total damage a pokemon can receive before fainting.\"],\r\n    [\"Attack|Determines damage dealt when using a physical move.\"],\r\n    [\"Defense|Mitigates damage received when hit by a physical move.\"],\r\n    [\"Special Attack|Determines damage dealt when using a special move.\"],\r\n    [\"Special Defense|Mitigates damage received when hit by a special move.\"],\r\n    [\"Speed|Determines the turn order in battle.\"],\r\n    [\"Nature|Usually affects two stats excluding HP, increasing one by 10% and decreasing another by 10%.\"],\r\n    [\"Gender|Selected from the possible genders of the pokemon.\"],\r\n    [\"Height and Weight|How tall and heavy is the pokemon.\"],\r\n];\r\n\r\nconst moves = [ // Content\r\n    [\"Power Points|How many times the move can be used.\"],\r\n    [\"Power|Determines damage dealt by the move.\"],\r\n    [\"Accuracy|Determines how likely the move is to hit.\"],\r\n];\r\n\r\nconst effects = [ // Keys, content\r\n    [['priority'], \"Priority|\"+\r\n        \"*Base value of 0.\"+\r\n        \"*Higher priority moves are performed first.\"],\r\n    [['critical hit'], \"Critical Hit|\"+\r\n        \"*Deals 1.5x the damage.\"+\r\n        \"*The attacker's negative stat stages, the defender's positive stat stages and screen-creating moves are ignored.\"],\r\n    [['critical hit rate', 'critical hit ratio'], \"Critical Hit Rate|\"+\r\n        \"*A base chance of 1/24 of dealing a critical hit.\"+\r\n        \"*Increases based on stages (1/8, 1/2, always).\"],\r\n    [['evasion', 'evasiveness'], \"Evasion|\"+\r\n        \"*Base value of 100%.\"+\r\n        \"*Determines the probability of avoiding other pokémon moves.\"],\r\n    [['stages', 'stage'], \"Stages|\"+\r\n        \"*Modifies a stat by 50% each.\"+\r\n        \"*Maximum +6 or -6 stages per stat.\"],\r\n    [['burned', 'burns', 'burn'], \"Burn|\"+\r\n        \"*Takes 1/16 max HP as damage every turn.\"+\r\n        \"*Halves damage dealt with physical moves.\"+\r\n        \"*Non-volatile status condition.\"],\r\n    [['badly poisoned', 'badly poisons'], \"Bad Poison|\"+\r\n        \"*Takes 1/8 max HP as damage every turn.\"+\r\n        \"*Damage taken increases by 1/8 each time.\"+\r\n        \"*Non-volatile status condition.\"],\r\n    [['poisoned', 'poisons', 'poisoning', 'poison'], \"Poison|\"+\r\n        \"*Takes 1/8 max HP as damage every turn.\"+\r\n        \"*Non-volatile status condition.\"],\r\n    [['paralyzes', 'paralyzed', 'paralyze', 'paralysis'], \"Paralysis|\"+\r\n        \"*Speed reduced by 50%.\"+\r\n        \"*25% chance of being unable to make a move.\"+\r\n        \"*Non-volatile status condition.\"],\r\n    [['freezes', 'freeze', 'freezing', 'frozen'], \"Freeze|\"+\r\n        \"*Unable to make a move.\"+\r\n        \"*20% chance of being thawed out each turn.\"+\r\n        \"*Non-volatile status condition.\"],        \r\n    [['sleeping', 'asleep', 'sleep'], \"Sleep|\"+\r\n        \"*Unable to make a move for 1-3 turns.\"+\r\n        \"*Non-volatile status condition.\"],    \r\n    [['major status effect', 'major status ailment'], \"Major Statuses|All the non-volatile status effects (Burn, Freeze, Paralysis, Poison, Badly Poison and Sleep).\"],\r\n    [['confuses', 'confused', 'confuse', 'confusion'], \"Confusion|\"+\r\n        \"*33% chance of attacking itself instead of executing a move for 2-5 turns.\"+\r\n        \"*Volatile status condition.\"],    \r\n    [['infatuates', 'infatuation'], \"Infatuation|\"+\r\n        \"*Cannot attack 50% of the time.\"+\r\n        \"*Volatile status condition.\"],        \r\n    [['flinch', 'flinching'], \"Flinch|Unable to make a move for that turn.\"],                \r\n    [['scatters poisoned spikes'], \"Poisoned Spikes|Affect foes when they switch in based on layers placed (poisons, badly poisons).\"],\r\n    [['scatters spikes'], \"Spikes|Damages foes when they switch in based on layers placed (1/8, 1/6, 1/4 max HP).\"],    \r\n    [['causes damage when opposing pokémon switch in'], \"Stealth Rock|Damages foes when they switch in based on the effectivenes of Rock-type against them (from 1/32 to 1/2 max HP).\"],\r\n    [['electric terrain'], \"Electric Terrain|\"+\r\n        \"*Boosts the power of Electric-type moves used by pokémon on the ground by 30%.\"+\r\n        \"*Prevents pokémon on the ground from falling asleep and being afflicted by Yawn.\"],\r\n    [['grassy terrain'], \"Grassy Terrain|\"+\r\n        \"*Boosts the power of Grass-type moves used by pokémon on the ground by 30%.\"+\r\n        \"*Restores 1/16 max HP of pokémon on the ground at the end of their turn.\"+\r\n        \"*The power of Bulldoze, Earthquake, and Magnitude is halved.\"],\r\n    [['misty terrain'], \"Misty Terrain|\"+\r\n        \"*Halves the damage taken by pokémon on the ground from Dragon-type moves.\"+\r\n        \"*Prevents pokémon on the ground from being afflicted with non-volatile status conditions and confusion.\"],\r\n    [['psychic terrain'], \"Psychic Terrain|\"+\r\n        \"*Boosts the power of Psychic-type moves used by pokémon on the ground.\"+\r\n        \"*Prevents pokémon on the ground from being hit by moves with increased priority.\"],\r\n    [['terrain'], \"Terrain|All the field-type effects that affect pokémon on the ground (Electric, Grassy, Misty and Psychic).\"],\r\n    [['sunlight', 'sunny'], \"Harsh Sunlight|\"+\r\n        \"*Increases the damage of Fire-type moves by 50%.\"+\r\n        \"*Decreases the damage of Water-type moves by 50%.\"+\r\n        \"*Prevents pokémon from becoming frozen.\"+\r\n        \"*Allows Solar Beam and Solar Blade to be used instantly.\"+\r\n        \"*Causes Growth to raise Attack and Special Attack two stages each.\"+\r\n        \"*Changes Weather Ball to a Fire-type move and doubles its power.\"+        \r\n        \"*Causes Moonlight, Synthesis, and Morning Sun to recover 2/3 of max HP.\"+\r\n        \"*Lowers accuracy of Thunder and Hurricane to 50%.\"+\r\n        \"*Doubles stat increases from Growth.\"],\r\n    [['rain', 'downpour'], \"Rain|\"+\r\n        \"*Increases the damage of Water-type moves by 50%.\"+\r\n        \"*Decreases the damage of Fire-type moves by 50%.\"+\r\n        \"*Halves the power of Solar Beam and Solar Blade.\"+\r\n        \"*Changes Weather Ball to a Water-type move and doubles its power.\"+\r\n        \"*Causes Moonlight, Synthesis, and Morning Sun to recover 1/4 of max HP.\"+\r\n        \"*Allows Thunder and Hurricane to bypass the accuracy check.\"],\r\n    [['sandstorm'], \"Sandstorm|\"+\r\n        \"*Deals 1/16 max HP as damage to pokémon at the end of each turn, unless their types include Rock, Steel, or Ground.\"+\r\n        \"*Raises the Special Defense of all Rock-type pokémon by 50%.\"+\r\n        \"*Halves the power of Solar Beam and Solar Blade.\"+\r\n        \"*Changes Weather Ball to a Rock-type move and doubles its power.\"+\r\n        \"*Causes Moonlight, Synthesis, and Morning Sun to recover 1/4 of max HP.\"+\r\n        \"*Causes Shore Up to recover 2/3 of max HP instead of 1/2.\"],\r\n    [['hail'], \"Hail|\"+\r\n        \"*Deals 1/16 max HP as damage to pokémon at the end of each turn, unless they are Ice-type.\"+        \r\n        \"*Halves the power of Solar Beam and Solar Blade.\"+\r\n        \"*Changes Weather Ball to an Ice-type move and doubles its power.\"+\r\n        \"*Causes Moonlight, Synthesis, and Morning Sun to recover 1/4 of max HP.\"+\r\n        \"*Allows Blizzard to bypass accuracy check.\"+\r\n        \"*Allows Aurora Veil to be used, the effect lingers even after Hail ends.\"],\r\n    [['strong winds'], \"Strong Winds|\"+\r\n        \"*Super effective moves against pure Flying-type Pokémon count as normally effective.\"+\r\n        \"*Weather Ball remains a Normal-type move.\"+\r\n        \"*Moonlight, Morning Sun, and Synthesis continue to recover 1/2 of max HP.\"],\r\n    [['weather'], \"Weather|All the environment effects that affect pokémon in battle (Harsh Sunlight, Rain, Sandstorm, Hail and Strong Winds).\"],         \r\n];\r\n\r\nconst mechanics = [ // Keys, content\r\n    [bindMoves, \"Bind|\"+\r\n        \"*Moves that partially trap the foe and deal a small amount of damage for multiple turns.\"],\r\n    [biteMoves, \"Bite|\"+\r\n        \"*Moves based on biting.\"],\r\n    [pulseMoves, \"Aura or Pulse|\"+\r\n        \"*Moves based on aura or pulses.\"],\r\n    [punchMoves, \"Punch|\"+\r\n        \"*Moves based on punching.\"],\r\n    [soundMoves, \"Sound|\"+\r\n        \"*Moves that use sound.\"],\r\n    [chargeMoves, \"Charge|\"+\r\n        \"*Moves that take two turns to complete.\"],    \r\n    [contactMoves, \"Contact|\"+\r\n        \"*Moves that physically touches the target in battle.\"],\r\n    [multistrikeMoves, \"Multi-strike|\"+\r\n        \"*Moves that strike an opponent more than one time in the same turn.\"],\r\n    [barrierMoves, \"Barrier|\"+\r\n        \"*Moves that create the effects of Reflect, Light Screen, and Aurora Veil.\"],\r\n    [healMoves, \"Healing|\"+\r\n        \"*Moves that restore HP.\"],\r\n    [drainMoves, \"Drain|\"+\r\n        \"*Moves that restore a portion of their user's HP after damaging an opponent.\"],\r\n    [recoilMoves, \"Recoil or Crash|\"+\r\n        \"*Moves that deal damage to the user.\"],\r\n    [trapMoves, \"Trap|\"+\r\n        \"*Moves that prevent an affected Pokémon from switching out.\"],\r\n]\r\n\r\nexport {\r\n    pokemon,\r\n    moves,\r\n    effects,\r\n    mechanics\r\n}","import React from 'react';\r\nimport { HiOutlineArrowUp, HiOutlineArrowDown } from 'react-icons/hi';\r\nimport {statRanges} from '../../constants/team';\r\nimport {pokemon as pokemonTooltips} from '../../constants/tooltips';\r\n\r\nconst getStatName = (stat) => {\r\n    switch (stat) {\r\n        case 0: return 'HP';\r\n        case 1: return 'Atk';\r\n        case 2: return 'Def';\r\n        case 3: return 'SpA';\r\n        case 4: return 'SpD';\r\n        case 5: return 'Spe';\r\n        case 6: return 'Total';\r\n        default: break;\r\n    }\r\n}\r\n\r\nconst getStatColor = (stat) => {\r\n    switch (stat) {\r\n        case 0: return 'bg-red-400';\r\n        case 1: return 'bg-yellow-500';\r\n        case 2: return 'bg-yellow-300';\r\n        case 3: return 'bg-green-400';\r\n        case 4: return 'bg-blue-400';\r\n        case 5: return 'bg-purple-400';\r\n        case 6: return 'bg-gray-300';\r\n        default: break;\r\n    }\r\n}\r\n\r\nconst getStatPercentage = (range, input) => {\r\n    return ((input - range[0]) * 100) / (range[1] - range[0]); // 12.34\r\n}\r\n\r\nexport default function PokemonStats({stats, nature}) {        \r\n\r\n    const statStep = 100 / 12; // 8.33\r\n\r\n    const getStatStep = (stat, statRange) => {\r\n        const statPercent = getStatPercentage(statRange, stat);\r\n        if(statPercent <= statStep * 1)\r\n            return 'w-1/12';\r\n        else if(statPercent <= statStep * 2)\r\n            return 'w-2/12';\r\n        else if(statPercent <= statStep * 3)\r\n            return 'w-3/12';\r\n        else if(statPercent <= statStep * 4)\r\n            return 'w-4/12';\r\n        else if(statPercent <= statStep * 5)\r\n            return 'w-5/12';\r\n        else if(statPercent <= statStep * 6)\r\n            return 'w-6/12';\r\n        else if(statPercent <= statStep * 7)\r\n            return 'w-7/12';\r\n        else if(statPercent <= statStep * 8)\r\n            return 'w-8/12';\r\n        else if(statPercent <= statStep * 9)\r\n            return 'w-9/12';\r\n        else if(statPercent <= statStep * 10)\r\n            return 'w-10/12';\r\n        else if(statPercent <= statStep * 11)\r\n            return 'w-11/12';\r\n        else if(statPercent <= statStep * 12)\r\n            return 'w-full';\r\n        else if(statPercent > statStep * 12)\r\n            return 'w-full animate-pulse';\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-center items-start w-full text-sm\">\r\n            {stats.map((s, i) => {\r\n                return (\r\n                    <div key={i} className=\"flex w-full gap-2\">\r\n                        <div className=\"flex w-1/3 justify-between items-center\">                            \r\n                            <div className={`flex items-center \r\n                                ${s.stat && nature.increased && s.stat.name === nature.increased.name ? 'text-blue-600' : ''}\r\n                                ${s.stat && nature.decreased && s.stat.name === nature.decreased.name ? 'text-red-600' : ''}`}>\r\n                                <p className={i < stats.length - 1 ? 'border-b border-dashed border-gray-600' : ''}\r\n                                    data-tip={i < stats.length - 1 ? pokemonTooltips[i] : ''} data-for={'pokemon'}>\r\n                                    {getStatName(i)}\r\n                                </p>\r\n                                {s.stat && nature.increased && s.stat.name === nature.increased.name ? <HiOutlineArrowUp /> : null}\r\n                                {s.stat && nature.decreased && s.stat.name === nature.decreased.name ? <HiOutlineArrowDown /> : null}\r\n                            </div>\r\n                            <p className=\"\">{s.base_stat}</p>                                        \r\n                        </div>\r\n                        <div className=\"flex w-2/3 relative items-center\">\r\n                            <div\r\n                                style={{marginTop: \"2px\"}}\r\n                                className={`${getStatColor(i)} rounded-md h-3\r\n                                    ${i === 0 ? getStatStep(s.calculated_stat, statRanges.hp) : ''}\r\n                                    ${i > 0 && i < stats.length - 1 ? getStatStep(s.calculated_stat, statRanges.general) : ''}\r\n                                    ${i === stats.length - 1 ? getStatStep(s.base_stat, statRanges.total) : ''}\r\n                                `}\r\n                            />\r\n                            <div className=\"absolute w-full h-full\">\r\n                                {i < stats.length - 1 ? \r\n                                    <div\r\n                                        style={{marginTop: \"1px\"}} \r\n                                        className=\"px-2 flex items-center justify-between text-xs text-gray-600 w-full h-full\">\r\n                                        <p>{s.ev} / {s.iv}</p>\r\n                                        <p>{s.calculated_stat}</p>\r\n                                    </div>\r\n                                : null}                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}                                        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    getStatName, getStatColor, getStatPercentage\r\n}\r\n","import React from 'react'\r\nimport {GiSparkles} from 'react-icons/gi';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\nimport {topPokemonTotalStatsThreshold} from '../../constants/team';\r\nimport PokemonType from './PokemonType';\r\nimport {getStatColor, getStatName} from './PokemonStats';\r\n\r\nexport default function PokemonSprite({pokemon, assign, opacity, types = false, stats = false}) {\r\n    const getRarity = () => {\r\n        if(pokemon.is_legendary)\r\n            return \"bg-yellow-100 border-2 border-yellow-200 ring ring-yellow-100 animate-pulse\"\r\n        else if(pokemon.is_mythical)\r\n            return \"bg-purple-100 border-2 border-purple-200 ring ring-purple-100 animate-pulse\"\r\n        else if(pokemon.stats[6].base_stat >= topPokemonTotalStatsThreshold)\r\n            return \"bg-blue-100 border-2 border-blue-200 ring ring-blue-100 animate-pulse\"\r\n        else\r\n            return 'animate-none'\r\n    }\r\n\r\n    return ( \r\n        <div onClick={assign} \r\n            className={`relative w-24 h-24 flex items-center justify-center ${opacity ? 'opacity-20' : ''} transition duration-150 ease-in-out`}>\r\n            <span className={`absolute w-24 h-24 absolute rounded-full opacity-100 ${getRarity()}`} />\r\n            {pokemon.shiny ? <GiSparkles className={`absolute w-24 h-24 absolute opacity-100 text-yellow-200 animate-pulse`} /> : null}            \r\n            {pokemon.sprites.front_default ?                \r\n                <img \r\n                    src={pokemon.shiny ? pokemon.sprites.front_shiny : pokemon.sprites.front_default} alt=\"\" width=\"96px\" height=\"96px\"\r\n                    className=\"absolute animate-wiggle\"\r\n                />\r\n            :\r\n                <p className=\"absolute text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${pokemon.species.name.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}_(Pokémon)`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            }\r\n            {stats ?\r\n                <div className=\"absolute inset-x-0 top-0 w-full\">                    \r\n                    <div className=\"relative w-full flex justify-center items-center text-xs\">\r\n                        {\r\n                            pokemon.highestStats.map((e, i) => {\r\n                                if(i < 3){\r\n                                return(\r\n                                    <div className=\"flex items-center justify-center\" key={i}>\r\n                                        <div \r\n                                            className={`h-3 rounded-md w-8\r\n                                            ${getStatColor(pokemon.highestStats[i].statIndex)} \r\n                                            ${pokemon.highestStats[i].percentage > 100 ? 'animate-pulse' : ''}`} \r\n                                        />                                                                                    \r\n                                        <p \r\n                                            style={{marginTop: \"-2px\"}}\r\n                                            className=\"absolute\"\r\n                                        >{getStatName(pokemon.highestStats[i].statIndex)}</p>\r\n                                    </div>\r\n                                )}\r\n                                else return null;\r\n                            })\r\n                        }       \r\n                    </div>                                                                 \r\n                </div>\r\n            : null}\r\n            {types &&\r\n                <div className=\"absolute inset-x-0 bottom-0 flex justify-center items-center\">\r\n                    {pokemon.types.map((t, i) => {\r\n                        return (                                    \r\n                            <PokemonType key={i} type={t.type.name} size=\"sm\" />\r\n                        )\r\n                    })}                           \r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MoveCategory({category, size = 'md'}) {\r\n    const getColor = () => {\r\n        switch(category){\r\n            case 'physical': return 'bg-red-600';\r\n            case 'special': return 'bg-blue-600';\r\n            case 'status': return 'bg-gray-400';\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    const getSize = () => {\r\n        switch(size){\r\n            case 'sm':\r\n                return 'w-auto text-xs px-1 py-0.5'\r\n            default:\r\n                return 'w-16 text-sm px-1.5 py-0.5';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <p className={`flex items-center justify-center ${getSize()} capitalize rounded-md text-white font-semibold ${getColor()}`}>\r\n            {category}\r\n        </p>\r\n    )\r\n}\r\n","import React from 'react'\r\n//import { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonSprite from '../pokemon/PokemonSprite';\r\nimport PokemonType from '../pokemon/PokemonType';\r\nimport MoveCategory from '../moves/MoveCategory';\r\n\r\nexport default function PokemonPreview({preview}) {\r\n    //const context = React.useContext(TeamBuilderContext);\r\n\r\n    return (\r\n        <div className=\"animate-enter flex flex-col gap-2 justify-center items-center bg-white rounded-md p-2 w-96 h-auto border-2 border-gray-200 transition duration-150 ease-in-out\">                                    \r\n            <div className=\"grid grid-cols-2 grid-rows-1 w-full\">\r\n                <div className=\"flex items-center justify-center\">\r\n                    <PokemonSprite pokemon={preview.pokemon} types={true} stats={true} /> \r\n                </div>                \r\n                <div className=\"flex flex-col items-center justify-between\">\r\n                    <div className=\"bg-white rounded-md p-0 w-full h-8 border-none border-gray-200 flex gap-1 px-1 items-center justify-center text-xs capitalize\">\r\n                        {/* <input type=\"text\" placeholder=\"Nickname\" value={preview.pokemon.nickname} onChange={(e) => context.setNickname(preview.pokemon.id, e.target.value)} \r\n                            className=\"w-full border-b-2 border-gray-200 text-center focus:outline-none\"\r\n                        /> */}\r\n                        <p className=\"capitalize w-full truncate text-center\">{preview.pokemon.name.replace(/-/g, \" \")} {`Lv${preview.pokemon.level}`}</p>\r\n                    </div>    \r\n                    <div className=\"w-full flex flex-col\">\r\n                        <div className=\"bg-white rounded-md p-0 w-full h-8 border-2 border-gray-200 flex gap-1 px-1 items-center justify-center text-xs capitalize\">\r\n                            {preview.ability.name.replace(/-/g, \" \")}\r\n                        </div>    \r\n                        <div className=\"bg-white rounded-md p-0 w-full h-8 border-2 border-gray-200 flex gap-1 px-1 items-center justify-center text-xs capitalize\">\r\n                            {preview.item.sprites.default ? <img src={preview.item.sprites.default} alt=\"\" width=\"30px\" height=\"30px\"/> : null}\r\n                            <p className=\"capitalize\">{preview.item.name.replace(/-/g, \" \")}</p> \r\n                        </div>\r\n                    </div>                        \r\n                </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 grid-rows-1 w-full\">\r\n                {\r\n                    preview.moveset.map((m, i) => {\r\n                        if(m.selected){\r\n                            return (\r\n                                <div key={i} className=\"bg-white rounded-md p-0 w-full h-8 border-2 border-gray-200 flex gap-1 px-1 items-center justify-between text-xs capitalize\">\r\n                                    <p className=\"truncate\">{m.name.replace(/-/g, \" \")}</p>\r\n                                    <div className=\"flex\">\r\n                                        <PokemonType type={m.type.name} size=\"sm\" />\r\n                                        {m.damage_class ? <MoveCategory category={m.damage_class.name} size=\"sm\" /> : null}\r\n                                    </div>\r\n                                </div> \r\n                            )\r\n                        }\r\n                        else    \r\n                            return null;\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonPreview from './PokemonPreview';\r\n\r\nexport default function TeamPreview({ previews }) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const getValidPreviews = () => {\r\n        let count = 0;\r\n        previews.forEach(p => { \r\n            if(p != null)\r\n                count += 1;            \r\n        });\r\n        return count;\r\n    }\r\n    \r\n    const setPreviews = () => {\r\n        return (\r\n            previews.map((p, i) => {\r\n                if(p){\r\n                    return <PokemonPreview key={i} preview={p} />\r\n                }\r\n                else{\r\n                    return (\r\n                        <div key={i} className=\"relative w-24 h-24 animate-enter\" >\r\n                            <div className=\"absolute w-24 h-24 rounded-full bg-gray-100 border-2 border-gray-200 ring ring-gray-100 animate-pulse\" />\r\n                            <img src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/201-question.png\"\r\n                                alt=\"\" width=\"96px\" height=\"96px\"\r\n                                className=\"absolute w-24 h-24 animate-wiggle\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        );\r\n    }    \r\n\r\n    return (\r\n        <div id=\"pokemon\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Team Preview</p>\r\n                    <p className=\"text-base text-gray-400\">See your current team.</p>\r\n                </span>\r\n                <p className=\"text-lg\">{getValidPreviews()}/{context.selectionsNeeded.pokemons} Pokémon Ready</p>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-center gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${getValidPreviews() >= context.selectionsNeeded.pokemons ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                { setPreviews() }\r\n            </div>            \r\n        </div>\r\n    );    \r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonType from './PokemonType';\r\nimport PokemonStats from './PokemonStats';\r\nimport PokemonSprite from './PokemonSprite';\r\nimport { FaGenderless } from 'react-icons/fa';\r\nimport { CgGenderMale, CgGenderFemale } from 'react-icons/cg';\r\nimport {pokemon as pokemonTooltips} from '../../constants/tooltips';\r\n\r\nexport default function Pokemon({pokemon}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const getGenders = () => {\r\n        switch(pokemon.gender){\r\n            case \"male\": \r\n                return <CgGenderMale />\r\n            case \"female\": \r\n                return <CgGenderFemale />\r\n            default:\r\n               return <FaGenderless />\r\n        }            \r\n    }    \r\n\r\n    return (\r\n        <div onClick={() => context.selectPokemon(pokemon)} \r\n            className={`animate-enter cursor-pointer flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-64 h-auto border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out\r\n            ${pokemon.selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>                        \r\n\r\n            <PokemonSprite pokemon={pokemon} />            \r\n\r\n            <div className=\"capitalize text-center\">{pokemon.name.replace(/-/g, \" \")} {`Lv${pokemon.level}`}</div>\r\n            <div className=\"flex justify-center items-center gap-2\">\r\n                {pokemon.types.map((t, i) => {\r\n                    return (                                    \r\n                        <PokemonType key={i} type={t.type.name} />\r\n                    )\r\n                })}                           \r\n            </div>\r\n            <PokemonStats stats={pokemon.stats} nature={pokemon.nature}/> \r\n            <div className=\"w-full grid grid-cols-3 text-xs text-gray-600\">\r\n                <p className=\"capitalize border-b border-dashed border-gray-600 justify-self-start\" data-tip={pokemonTooltips[6]} data-for={'pokemon'}>\r\n                    {pokemon.nature.name}\r\n                </p>               \r\n                <p className=\"text-base border-b border-dashed border-gray-600 justify-self-center\" data-tip={pokemonTooltips[7]} data-for={'pokemon'}>\r\n                    {getGenders()}\r\n                </p>                               \r\n                <p className=\"border-b border-dashed border-gray-600 justify-self-end\" data-tip={pokemonTooltips[8]} data-for={'pokemon'}>\r\n                    {pokemon.height/10}m / {pokemon.weight/10}kg\r\n                </p>               \r\n            </div>                       \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Pokemon from './Pokemon';\r\n\r\nexport default function PokemonOptions({ options }) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n    \r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map(p => (\r\n                    <Pokemon key={p.id} pokemon={p} />\r\n                ))\r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-400\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    // Render.\r\n    return (\r\n        <div id=\"pokemon\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Pokémon Options</p>\r\n                    <p className=\"text-base text-gray-400\">Select pokémon for your team.</p>\r\n                </span>\r\n                <p className=\"text-lg\">{context.selectionsMade.pokemons}/{context.selectionsNeeded.pokemons} Pokémon Selected</p>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.pokemons >= context.selectionsNeeded.pokemons ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>            \r\n        </div>\r\n    );    \r\n}\r\n","import React from 'react'\r\nimport {effects as effectTooltips, mechanics as mechanicTooltips} from '../constants/tooltips';\r\n\r\nexport default function TooltipTags({effect, name}){\r\n\r\n    const validateTags = (currentData, incomingKey) => {\r\n        return !(\r\n            (currentData.includes(effectTooltips[2][1]) && effectTooltips[4][0].includes(incomingKey)) ||       // crit rate / stages\r\n            ((currentData.includes(effectTooltips[19][1]) ||\r\n                currentData.includes(effectTooltips[20][1]) ||\r\n                currentData.includes(effectTooltips[21][1]) ||\r\n                currentData.includes(effectTooltips[22][1])) && effectTooltips[23][0].includes(incomingKey)) || // 4x terrains / terrain\r\n            (currentData.includes(effectTooltips[6][1]) && effectTooltips[7][0].includes(incomingKey))          // bad posion / poison\r\n        )\r\n    }\r\n\r\n    const getTooltips = () => {\r\n        let tooltipData=[];\r\n\r\n        if(effect){\r\n            let formattedEffect = effect.toLowerCase().replace(/[.,]/g, \"\");            \r\n            \r\n            effectTooltips.forEach(data => {                                \r\n                data[0].forEach(key => {\r\n                    if(!tooltipData.includes(data[1]) && formattedEffect.match(new RegExp('\\\\b'+key, 'g'))){\r\n                        if(validateTags(tooltipData, key))\r\n                            tooltipData.push(data[1])\r\n                    }\r\n                });                            \r\n            });            \r\n        }\r\n        if(name){\r\n            mechanicTooltips.forEach(data => {                                \r\n                if(data[0].includes(name))\r\n                    tooltipData.push(data[1]);                                            \r\n            });\r\n        }\r\n\r\n        if(tooltipData.length > 0){\r\n            return (tooltipData.map((d, i) => {\r\n                return (\r\n                    <p className=\"border-b border-dashed border-gray-600\" key={i} data-tip={[d]} data-for={'effects'}>\r\n                        {d.split(\"|\")[0]}\r\n                    </p>\r\n                )\r\n            }));\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    return(\r\n        <div className=\"text-sm w-full flex flex-wrap justify-center items-center gap-2 text-gray-600\">\r\n            {getTooltips()}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonType from '../pokemon/PokemonType';\r\nimport MoveCategory from './MoveCategory';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\nimport TooltipTags from '../TooltipTags';\r\nimport {moves as moveTooltips} from '../../constants/tooltips';\r\n\r\nexport default function Move({move, moveset}) {\r\n    const context = React.useContext(TeamBuilderContext);            \r\n\r\n    const formatEffect = (effect) => {\r\n        let formattedEffect = effect;\r\n        // Adjust specific moves.      \r\n        switch(move.name){\r\n            case 'techno-blast':\r\n                formattedEffect = formattedEffect.replace('plate or ', '');\r\n                break;\r\n            case 'judgment':\r\n                formattedEffect = formattedEffect.replace(' or drive', '');\r\n                break;\r\n            case 'multi-attack':\r\n                formattedEffect = formattedEffect.replace('plate or drive', 'memory');\r\n                break;\r\n            case 'hidden-power':\r\n                formattedEffect = \"Inflicts regular damage with no additional effect.\";\r\n                break;\r\n            case 'uproar':\r\n                formattedEffect = formattedEffect.replace('several', '3');\r\n                break;\r\n            case 'sand-tomb':\r\n            case 'magma-storm':\r\n                formattedEffect = formattedEffect.replace('Prevents the target from fleeing', 'Traps the target');\r\n                break;\r\n            case 'thousand-waves':\r\n            case 'mean-look':\r\n                formattedEffect = \"Traps the target.\";\r\n                break;\r\n            case 'aurora-veil':\r\n                formattedEffect = formattedEffect.replace('damage', 'damage received for');\r\n                break;    \r\n            case 'attract':\r\n                formattedEffect = \"Infatuates target if it has the opposite gender.\";\r\n                break;  \r\n            case 'dynamax-cannon':\r\n                formattedEffect = \"Inflicts regular damage with no additional effect.\";\r\n                break;\r\n            case 'corrosive-gas':\r\n                formattedEffect = \"Removes the targets' held items for the rest of the battle.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }           \r\n        // Adjust general moves.\r\n        formattedEffect = formattedEffect.replace(/\\$effect_chance/g, move.effect_chance);\r\n        if(move.meta && move.meta.crit_rate > 0)\r\n            formattedEffect = formattedEffect.replace(\"Has an increased chance for a critical hit.\", `Move's critical hit rate is increased by ${move.meta.crit_rate} ${move.meta.crit_rate > 1 ? 'stages' : 'stage'}.`);\r\n        if(move.priority !== 0)\r\n            formattedEffect = formattedEffect.concat(' Priority '+move.priority);\r\n        return formattedEffect;\r\n    }    \r\n\r\n    const formattedEffect = move.effect_entries.length > 0 ? formatEffect(move.effect_entries.find(e => e.language.name === \"en\").short_effect) : null;\r\n\r\n    const getEffect = () => {\r\n        if(formattedEffect) {\r\n            return(\r\n                <p className=\"text-center\">\r\n                    {formattedEffect}\r\n                </p>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <p className=\"text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${move.name.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}_(move)`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            )\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <div onClick={() => context.selectMove(move, moveset)}\r\n            className={`cursor-pointer flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out \r\n            ${move.selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>            \r\n            <div className=\"flex justify-between items-center w-full gap-2\">\r\n                <p className=\"capitalize\">{move.name.replace(/-/g, \" \")}</p>\r\n                <div className=\"flex justify-center gap-2\">\r\n                    <PokemonType type={move.type.name} />\r\n                    {move.damage_class ? <MoveCategory category={move.damage_class.name} /> : ''}\r\n                </div>                                \r\n            </div>\r\n            <div className=\"w-full grid grid-cols-3 text-sm\">\r\n                <p className=\"border-b border-dashed border-gray-600 justify-self-start\" data-tip={moveTooltips[0]} data-for={'moves'}>PP: {move.pp}</p>\r\n                <p className=\"border-b border-dashed border-gray-600 justify-self-center\" data-tip={moveTooltips[1]} data-for={'moves'}>Pwr: {move.power ? move.power : '-'}</p>\r\n                <p className=\"border-b border-dashed border-gray-600 justify-self-end\" data-tip={moveTooltips[2]} data-for={'moves'}>Acc: {move.accuracy ? move.accuracy : '-'}</p>                \r\n            </div>\r\n            <div className=\"flex flex-col justify-start items-center text-sm w-full\">\r\n                {getEffect()}\r\n            </div>\r\n            <TooltipTags effect={formattedEffect} name={move.name} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport PokemonSprite from './PokemonSprite';\r\n\r\nexport default function SelectedPokemon({ assignable }) {\r\n    const context = React.useContext(TeamBuilderContext);   \r\n    const selectedPokemon = context.pokemonOptions.filter(p => p.selected);      \r\n\r\n    const getAssigned = () => {\r\n        if(assignable.moveset != null)            \r\n            return selectedPokemon.find(p => p.moveset === assignable.moveset)\r\n        else if(assignable.ability != null)            \r\n            return selectedPokemon.find(p => p.ability === assignable.ability)\r\n        else if(assignable.item != null)            \r\n            return selectedPokemon.find(p => p.item === assignable.item)\r\n        else\r\n            return null;\r\n    }\r\n    let assignedPokemon = getAssigned();\r\n\r\n    const getAssignedOutside = (pokemon) => {\r\n        if(assignable.moveset != null)\r\n            return pokemon.moveset !== null;\r\n        else if (assignable.ability != null)\r\n            return pokemon.ability !== null;\r\n        else if (assignable.item != null)\r\n            return pokemon.item !== null;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    const getSelectedPokemons = () => {        \r\n        if(selectedPokemon.length > 0 && !assignedPokemon) {\r\n            return selectedPokemon.map((p, i) => {\r\n                return (\r\n                    <PokemonSprite key={i} pokemon={p} types={true} stats={true} assign={() => context.assignPokemon(p, assignable)}\r\n                        opacity={(assignedPokemon && p.name !== assignedPokemon.name) ||\r\n                        (!assignedPokemon && getAssignedOutside(p))}\r\n                    />\r\n                )\r\n            })            \r\n        }\r\n        else if(selectedPokemon.length > 0 && assignedPokemon) {\r\n            return <PokemonSprite pokemon={assignedPokemon} types={true} stats={true} assign={() => context.assignPokemon(assignedPokemon, assignable)} />            \r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"p-4 text-gray-400\">\r\n                    No selected pokémon\r\n                </div> \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`cursor-pointer flex flex-wrap gap-2 justify-center items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out \r\n            ${assignedPokemon ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>\r\n            {getSelectedPokemons()}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Move from './Move';\r\nimport SelectedPokemon from '../pokemon/SelectedPokemon';\r\n\r\nexport default function Moveset({ moveset, index }) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const setMoves = () => {\r\n        if (moveset.length) {\r\n            return (\r\n                moveset.map(m => (\r\n                    <Move moveset={index} key={m.id} move={m} />\r\n                ))\r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-300\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate-enter flex flex-col justify-start items-end\">\r\n            <div className=\"flex w-full justify-end items-center\">\r\n                {/* <p className=\"text-base\">{!context.pokemonOptions.find(p => p.moveset === index) ? 'No ' : ''}Pokemon Assigned</p> */}\r\n                <p className=\"text-base\">{context.selectionsMade.moves[index]}/{context.selectionsNeeded.moves} Moves Selected</p>\r\n            </div>\r\n            <div className={`flex flex-col gap-2 justify-start items-center rounded-md p-2 w-96 h-auto border-2 border-gray-200 transition duration-150 ease-in-out \r\n                ${context.selectionsMade.moves[index] >= context.selectionsNeeded.moves &&\r\n                context.pokemonOptions.find(p => p.moveset === index) ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                <SelectedPokemon assignable={{moveset: index}} />\r\n                {setMoves()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Moveset from './Moveset';\r\n\r\nexport default function MovesetOptions({ options }) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const selectedMoves  = () => {\r\n        let sm = 0;        \r\n        context.selectionsMade.moves.forEach(m => {\r\n            sm = sm + m\r\n        });\r\n        return sm;\r\n    }\r\n\r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map((m, i) => (\r\n                    <Moveset key={i} index={i} moveset={m} />\r\n                ))\r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-400\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div id=\"movesets\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Moveset Options</p>\r\n                    <p className=\"text-base text-gray-400\">Assign your selected pokémon to a moveset and select their moves.</p>\r\n                </span>\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">{context.selectionsMade.movesets}/{context.selectionsNeeded.movesets} Pokémon Assigned</p>                    \r\n                </span>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.movesets >= context.selectionsNeeded.movesets && \r\n                selectedMoves() >= context.selectionsNeeded.movesets * context.selectionsNeeded.moves ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport SelectedPokemon from '../pokemon/SelectedPokemon';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\nimport TooltipTags from '../TooltipTags';\r\n\r\nexport default function Ability({ability, index}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n    const selected = context.pokemonOptions.find(p => p.ability === index);\r\n\r\n    const formatEffect = (effect) => {\r\n        let formattedEffect = effect;\r\n        // Adjust specific items.      \r\n        switch(ability.name){\r\n            case 'sand-stream':\r\n            case 'drizzle':\r\n            case 'snow-warning':\r\n            case 'drought':\r\n                formattedEffect = formattedEffect.replace('indefinitely', '5 turns');\r\n                break;\r\n            case 'aroma-veil':\r\n                formattedEffect = formattedEffect.replace('allies', 'user and allies');\r\n                break;\r\n            case 'fur-coat':\r\n                formattedEffect = formattedEffect.replace('damage', 'damage received');\r\n                break;\r\n            case 'delta-stream':\r\n                formattedEffect = formattedEffect.replace('a mysterious air current', 'strong winds');\r\n                break;\r\n            default:\r\n                break;\r\n        }           \r\n        // Adjust general abilities.\r\n        \r\n        return formattedEffect;\r\n    }\r\n\r\n    const formattedEffect = ability.effect_entries.length > 0 ? formatEffect(ability.effect_entries.find(e => e.language.name === 'en').short_effect) : null;\r\n\r\n    const getEffect = () => {        \r\n        if(formattedEffect) {            \r\n            return (\r\n                <p className=\"text-center\">\r\n                    {formattedEffect} \r\n                </p>\r\n            )            \r\n        }\r\n        else {\r\n            let formattedName = ability.name.split('-').filter(key => {\r\n                return (!['glastrier', 'spectrier'].includes(key));\r\n            }).join(\" \");\r\n            return (\r\n                <p className=\"text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${formattedName.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}_(Ability)`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            )\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <div className=\"animate-enter flex flex-col justify-start items-end\">\r\n            <div className={`flex flex-col gap-2 justify-start items-center rounded-md p-2 w-96 h-auto border-2 border-gray-200 transition duration-150 ease-in-out  \r\n                ${selected ? 'border-green-200 ring ring-green-100' : ''}`}>            \r\n                <SelectedPokemon assignable={{ability: index}} />\r\n                <div className={`flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 transition duration-150 ease-in-out \r\n                    ${selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>\r\n                    <div className=\"flex justify-center items-center w-full gap-2\">\r\n                        <p className=\"capitalize\">{ability.name.replace(/-/g, \" \")}</p>                \r\n                    </div>            \r\n                    <div className=\"flex flex-col justify-start items-center text-sm w-full\">\r\n                        {getEffect()}\r\n                    </div>  \r\n                    <TooltipTags effect={formattedEffect} />          \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Ability from './Ability';\r\n\r\nexport default function AbilityOptions({options}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map((a, i) => (\r\n                    <Ability key={i} index={i} ability={a} />\r\n                ))                \r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-400\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"abilities\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Ability Options</p>\r\n                    <p className=\"text-base text-gray-400\">Assign your selected pokémon to an ability.</p>\r\n                </span>\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">{context.selectionsMade.abilities}/{context.selectionsNeeded.abilities} Pokémon Assigned</p>                    \r\n                </span>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.abilities >= context.selectionsNeeded.abilities ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport SelectedPokemon from '../pokemon/SelectedPokemon';\r\nimport {BiSearchAlt} from 'react-icons/bi';\r\nimport TooltipTags from '../TooltipTags';\r\n\r\nexport default function Item({item, index}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n    const selected = context.pokemonOptions.find(p => p.item === index);\r\n    \r\n    const formatEffect = (effect) => {\r\n        let formattedEffect = effect.split(\".\").filter(e => {\r\n            return !e.includes(\"Breeding:\") && !e.includes(\"Traded on\") && !e.includes(\"Held by\") && !e.includes(\"begets\") && !e.includes(\"Egg\")\r\n        }).map(e => {\r\n            return e.replace(\"Held: \", \"\")\r\n        }).join(\".\");  \r\n        // Adjust specific items.      \r\n        switch(item.name){\r\n            case 'shell-bell':                                \r\n                formattedEffect = formattedEffect.replace(\"receives\", \"heals\");\r\n                break;\r\n            case 'bright-powder':                                \r\n                formattedEffect = formattedEffect.replace(\"(11 1/9%)\", \"(11%)\");\r\n                break;\r\n            case 'mental-herb':\r\n                formattedEffect = formattedEffect.replace(\"infatuation. Gen V: Also removes\", \"Infatuation,\");\r\n                break;\r\n            case 'light-clay':\r\n                formattedEffect = formattedEffect.replace(\" and Reflect\", \", Reflect and Aurora Veil\");\r\n                break;\r\n            case 'toxic-orb':\r\n                formattedEffect = formattedEffect.replace(\"Inflicts Toxic on\", \"Badly poisons\");\r\n                break;\r\n            case 'cell-battery':\r\n            case 'absorb-bulb':\r\n            case 'luminous-moss':\r\n            case 'snowball':\r\n            case 'eject-button':\r\n                formattedEffect = formattedEffect.concat(\" Consumed after use.\");\r\n                break;\r\n            case 'adrenaline-orb':\r\n                formattedEffect = formattedEffect.replace(\"Makes wild Pokémon more likely to summon allies.  increases\", \"Increases\");\r\n                break;\r\n            case 'micle-berry':\r\n                formattedEffect = formattedEffect.replace(\" (Gen IV: Perfect accuracy)\", \"\");\r\n                break;\r\n            case 'figy-berry':\r\n                formattedEffect = formattedEffect.replace(\"that dislike spicy flavor\", \"with an Attack reducing nature\");\r\n                break;\r\n            case 'wiki-berry':\r\n                formattedEffect = formattedEffect.replace(\"that dislike dry flavor\", \"with a Special Attack reducing nature\");\r\n                break;\r\n            case 'mago-berry':\r\n                formattedEffect = formattedEffect.replace(\"that dislike sweet flavor\", \"with a Speed reducing nature\");\r\n                break;\r\n            case 'aguav-berry':\r\n                formattedEffect = formattedEffect.replace(\"that dislike bitter flavor\", \"with a Special Defense reducing nature\");\r\n                break;\r\n            case 'iapapa-berry':\r\n                formattedEffect = formattedEffect.replace(\"that dislike sour flavor\", \"with a Defense reducing nature\");\r\n                break;\r\n            default:\r\n                break;\r\n        }        \r\n        // Adjust group items.\r\n        if(item.name.split(\"-\").includes('plate'))\r\n            formattedEffect = formattedEffect.replace(\"Arceus's and\", \"Arceus with multitype and\");\r\n        if(item.name.split(\"-\").includes('memory'))\r\n            formattedEffect = formattedEffect.replace(\"Silvally to\", \"Silvally with RKS System to\");\r\n        if(item.name.split(\"-\").includes('drive'))\r\n            formattedEffect = formattedEffect.replace(\" Techno Blast\", \"\").replace(\"Grants Genesect\", \"Changes the holder's Techno Blast\").replace(\"a yellow,\", \"to\");\r\n        if(item.name.split(\"-\").includes('gem'))\r\n            formattedEffect = formattedEffect.replace(\"5\", \"3\");\r\n        return formattedEffect;\r\n    }\r\n\r\n    const formattedEffect = item.effect_entries.length > 0 ? formatEffect(item.effect_entries.find(e => e.language.name === 'en').short_effect) : null;\r\n\r\n    const getEffect = () => {        \r\n        if(formattedEffect) {                \r\n            return (\r\n                <p className=\"text-center\">\r\n                    {formattedEffect}  \r\n                </p>\r\n            )            \r\n        }\r\n        else {\r\n            return (\r\n                <p className=\"text-sm\">                    \r\n                    <a onClick={(e) => e.stopPropagation()} href={`https://bulbapedia.bulbagarden.net/wiki/${item.name.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()).replace(/ /g, \"_\")}`} target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex items-center gap-1 text-blue-400 hover:text-blue-500\">\r\n                        <BiSearchAlt /> Bulbapedia\r\n                    </a>\r\n                </p>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate-enter flex flex-col justify-start items-end\">\r\n            <div className={`flex flex-col gap-2 justify-start items-center rounded-md p-2 w-96 h-auto border-2 border-gray-200 transition duration-150 ease-in-out  \r\n                ${selected ? 'border-green-200 ring ring-green-100' : ''}`}>            \r\n                <SelectedPokemon assignable={{item: index}} />\r\n                <div className={`flex flex-col gap-2 justify-start items-center bg-white rounded-md p-2 w-full h-auto border-2 border-gray-200 transition duration-150 ease-in-out \r\n                    ${selected ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}`}>                    \r\n                    <div className=\"flex justify-center items-center w-full gap-2\">\r\n                        {item.sprites.default ? <img src={item.sprites.default} alt=\"\" width=\"30px\" height=\"30px\"/> : null}\r\n                        <p className=\"capitalize\">{item.name.replace(/-/g, \" \")}</p>                \r\n                    </div>            \r\n                    <div className=\"flex flex-col justify-start items-center text-sm w-full\" data-tip={formattedEffect} data-for={'dynamic'}>\r\n                        {getEffect()}\r\n                    </div>  \r\n                    <TooltipTags effect={formattedEffect}/>          \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TeamBuilderContext } from '../../context/TeamBuilderContext';\r\nimport Item from './Item';\r\n\r\nexport default function ItemOptions({options}) {\r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    const setOptions = () => {\r\n        if (options.length) {\r\n            return (\r\n                options.map((it, i) => (\r\n                    <Item key={i} index={i} item={it} />\r\n                ))                \r\n            );\r\n        } else {\r\n            return (                \r\n                <div className=\"p-4 text-gray-400\">\r\n                    Empty\r\n                </div>            \r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"items\" className=\"flex flex-col w-full\">\r\n            <div className=\"flex justify-between items-center gap-4 text-center\">\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">Item Options</p>\r\n                    <p className=\"text-base text-gray-400\">Assign your selected pokémon to an item.</p>\r\n                </span>\r\n                <span className=\"flex gap-4 items-center\">\r\n                    <p className=\"text-lg\">{context.selectionsMade.items}/{context.selectionsNeeded.items} Pokémon Assigned</p>                    \r\n                </span>\r\n            </div>            \r\n            <div className={`flex flex-wrap justify-center items-start gap-4 p-4 w-full border-2 rounded-md border-gray-200 transition duration-150 ease-in-out\r\n                ${context.selectionsMade.items >= context.selectionsNeeded.items ? 'border-green-200 ring ring-green-100' : ''}`}>\r\n                {setOptions()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport TeamPreview from '../components/preview/TeamPreview';\r\nimport PokemonOptions from '../components/pokemon/PokemonOptions';\r\nimport MovesetOptions from '../components/moves/MovesetOptions';\r\nimport AbilityOptions from '../components/abilities/AbilityOptions';\r\nimport ItemOptions from '../components/items/ItemOptions';\r\nimport { TeamBuilderContext } from '../context/TeamBuilderContext';\r\nimport { BiLoaderAlt } from 'react-icons/bi';\r\nimport { FaEraser, FaCopy } from 'react-icons/fa';\r\nimport {GoPencil} from 'react-icons/go';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\n\r\nexport default function TeamBuilder({\r\n    loading, randomOptions, pokemonPreviews, pokemonOptions, movesetOptions, abilityOptions, itemOptions, generating,\r\n    generateOptions, clearChoices, exportTeam\r\n    }) {   \r\n    const context = React.useContext(TeamBuilderContext);\r\n\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'Team Builder - Procedural Pokémon';\r\n    }, []);\r\n\r\n    const getControls = () => {\r\n        if(loading || generating){\r\n            return (                \r\n                <p className=\"flex gap-4 items-center justify-center text-lg p-4 border-2 border-transparent\">\r\n                    <BiLoaderAlt className=\"animate-spin text-2xl\" />\r\n                    {loading ? 'Fetching data from PokeAPI' : (generating ? generationProgress() : 'Generate Options')}\r\n                </p>                \r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <button type=\"button\" onClick={() => clearChoices()}\r\n                        className={`flex gap-2 items-center justify-center p-4 rounded-md hover:bg-gray-200 border-2 w-48 transition duration-150 ease-in-out\r\n                        ${Object.values(context.selectionsMade).find(val => val > 0) ? 'bg-red-100 border-red-200 ring ring-red-100' : 'bg-white  border-gray-200 '}`}>\r\n                        <FaEraser /> Clear Choices\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => generateOptions()}\r\n                        className={`flex gap-2 items-center justify-center p-4 rounded-md hover:bg-gray-200 border-2 w-48 transition duration-150 ease-in-out\r\n                        ${pokemonOptions.length > 0 ? 'bg-yellow-100 border-yellow-200 ring ring-yellow-100' : 'bg-white  border-gray-200 '}`}>\r\n                        <GoPencil /> Generate Options\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => exportTeam()}\r\n                        className={`flex gap-2 items-center justify-center p-4 rounded-md hover:bg-gray-200 border-2 w-48 transition duration-150 ease-in-out\r\n                        ${Object.values(context.sectionsCompleted).every(val => val) ? 'bg-green-100 border-green-200 ring ring-green-100' : 'bg-white  border-gray-200 '}`}>\r\n                        <FaCopy /> Copy Team\r\n                    </button>\r\n                    <a type=\"button\" href=\"https://play.pokemonshowdown.com/teambuilder\" target=\"_blank\" rel=\"noreferrer\"\r\n                        className=\"flex gap-2 items-center justify-center p-4 rounded-md bg-blue-100 hover:bg-gray-200 border-2 border-blue-200 ring ring-blue-100 w-48 transition duration-150 ease-in-out\">\r\n                        <FiExternalLink /> Showdown Teams\r\n                    </a>\r\n                </>\r\n            )\r\n        }        \r\n    }\r\n    \r\n    const generationProgress = () => {\r\n        if(pokemonOptions.length < randomOptions.pokemons)\r\n            return `Generating Pokémon (${pokemonOptions.length}/${randomOptions.pokemons})`;   \r\n        else if(movesetOptions.length < randomOptions.movesets)\r\n            return `Generating Movesets (${movesetOptions.length}/${randomOptions.movesets})`;\r\n        else if(abilityOptions.length < randomOptions.abilities)\r\n            return `Generating Abilities (${abilityOptions.length}/${randomOptions.abilities})`;\r\n        else if(itemOptions.length < randomOptions.items)\r\n            return `Generating Items (${itemOptions.length}/${randomOptions.items})`;\r\n        else\r\n            return 'Done!';\r\n    }    \r\n\r\n    return (           \r\n        <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">  \r\n            <div id=\"actions\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Actions</p>\r\n                    <p className=\"text-base text-gray-400\">Controls for building your team.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-center gap-4 p-4 w-full border-2 rounded-md border-gray-200\">\r\n                    <div className=\"flex flex-wrap justify-center items-center gap-4\">\r\n                        {getControls()}\r\n                    </div>                                                                       \r\n                </div>                                                            \r\n            </div>\r\n            <TeamPreview previews={pokemonPreviews} />\r\n            <PokemonOptions options={pokemonOptions} />\r\n            <MovesetOptions options={movesetOptions} />  \r\n            <AbilityOptions options={abilityOptions} />   \r\n            <ItemOptions options={itemOptions} />        \r\n\r\n        </div>                    \r\n    )\r\n}","import React, {useEffect} from 'react'\r\n\r\nexport default function Tools() {\r\n    // Change title.\r\n    useEffect (() => {\r\n        document.title = 'About - Procedural Pokémon';\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-8 justify-start items-center p-8 w-full\">              \r\n            <div id=\"sectionName\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">About</p>\r\n                    <p className=\"text-base text-gray-400\">Where does this come from?</p>\r\n                </div>            \r\n                    <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                    <p>\r\n                        So... I like games about decisions, opportunity cost, and variables.\r\n                        Pokémon should be a natural fit, but I find the mainline games too easy to keep me engaged.\r\n                        I found out the Nuzlocke challenge long ago, but it was until the randomness factor was added with the Randomlocke challenge that It caught my attention.\r\n                        I watched people doing them first to see if I wanted to try something like that, but since the things I liked most was the team drafting and random battles, I decided to instead search for a way of doing just that.\r\n                    </p>\r\n                    <p>\r\n                        Enter Pokémon Showdown with their random battle formats.\r\n                        I tried them out and at first it was a good fix for what I wanted, but the more games I played the more I started to see limitations in their random team generation that left me wanting more.\r\n                        You also don't get to draft your team in those formats, so the other big thing I was looking for wasn't there.\r\n                    </p>\r\n                    <p>\r\n                        I kept looking and found PokéApi.\r\n                        I immediately began thinking about the possibilities and made a bare bones web app that only gave you 9 random pokémon upon loading...\r\n                        Evidently, I kept going.\r\n                    </p>                \r\n                </div>                                                            \r\n            </div>\r\n            <div id=\"sectionName\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Design Philosophy</p>\r\n                    <p className=\"text-base text-gray-400\">Reasoning behind the format rules.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">   \r\n                    <p>\r\n                        The Pokémon battle system as a baseline offers a lot of options to play with, those can be easily multiplied by allowing unnatural combinations, but this creates a lot of unbalanced and unusable combinations as well. With the goal of maximizing options while maintaining balance, the generation process was made with the following design pillars in mind:\r\n                    </p>                                     \r\n                    <ul className=\"space-y-2 list-disc\">   \r\n                        <li>\r\n                            Healthy normal distribution of pokémon.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                <li>Comparing possible pokémon on a normal distribution, extremes had to be trimmed to help the average team remain competitive.</li>\r\n                                <li>A total base stats range of 360 to 720 makes it so that most fully evolved pokémon are taken into account and the high end remains populated mostly by iconic pokémon.</li>\r\n                            </ul>\r\n                        </li>                     \r\n                        <li>\r\n                            Maximize team choices.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                <li>Options that allow the use of powerful but restrictive combinations hurt the drafting process by forcing choices, filters had to be used to minimize this.</li>\r\n                                <li>A \"top\" pokémon balance and \"shiny bonus\" of 1 per team each, helps the average team remain competitive while supporting the drafting process by being consistent.</li>\r\n                            </ul>\r\n                        </li>\r\n                        <li>\r\n                            Self team usability.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">                                \r\n                                <li>A team should be able to benefit from their own generated options regardless of any opposing team.</li>\r\n                                <li>Prevent the generation of options unusable by themselves.</li>\r\n                                <li>Allow options unusable by themselves to appear if they would count as usable in combination with a current option.</li>                                \r\n                            </ul>\r\n                        </li>\r\n                        <li>\r\n                            Imperfect teams.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                <li>Multiple layers of randomness helps the average team remain competitive.</li>\r\n                                <li>Enough space is left for high and low rolls to keep things intresting and exciting without breaking team balance.</li>                                \r\n                            </ul>\r\n                        </li>\r\n                        <li>\r\n                            Limited draft.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">                                \r\n                                <li>Having a large amount of options hurts the drafting process by causing analysis paralysis to unfamiliar players and increases the chances of reliable combinations for experienced players.</li>\r\n                                <li>A healthy amount of options is presented so that luck and knowledge both play a part in drafting good teams.</li>\r\n                            </ul>\r\n                        </li>             \r\n                    </ul>\r\n                </div>                                                            \r\n            </div>\r\n            <div id=\"sectionName\" className=\"flex flex-col w-full\">\r\n                <div className=\"flex justify-start items-center gap-4 text-center\">                    \r\n                    <p className=\"text-lg\">Organized Play</p>\r\n                    <p className=\"text-base text-gray-400\">A few ways of playing.</p>\r\n                </div>            \r\n                <div className=\"flex flex-col justify-start items-start gap-4 p-4 w-full border-t-2 border-gray-200\">\r\n                    <ul className=\"\">\r\n                        <li>\r\n                            Blind match.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">                                                                \r\n                                <li>2 players create their teams and start a match without knowledge of the opposing team.</li>\r\n                                <li>Single matches provide a similar feel to trainer battles on a Randomlocke challenge.</li>\r\n                                <li>Best of 3 provides a mix between a blind match and a preview match, as players improvise and adapt.</li>\r\n                            </ul>\r\n                        </li>                        \r\n                        <li>\r\n                            Preview match.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">                                                                \r\n                                <li>2 players create their teams and start a match with knowledge of the opposing team (pokepaste is recommended).</li>\r\n                                <li>Single matches provide a way to plan a strategy ahead of time and then put it in practice.</li>\r\n                                <li>Best of 3 provides the feeling of a classic tournament bracket.</li>\r\n                            </ul>\r\n                        </li>                        \r\n                        <li>\r\n                            Community tournament.\r\n                            <ul className=\"pl-4 text-gray-600 text-sm\">\r\n                                <li>An amount of players create their teams, are organized in tournament brackets, and knowledge of all created teams is provided to every player.</li>\r\n                                <li>Single match brackets provide a way to advance a tournament quickly.</li>\r\n                                <li>Best of 3 brackets are the classic tournament bracket.</li>\r\n                            </ul>\r\n                        </li>                        \r\n                    </ul>\r\n                </div>                                                            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport default function Tooltips() {\r\n    // Rebind tooltips when component mounts/update.\r\n    useEffect(() => {\r\n        ReactTooltip.rebuild()\r\n    });\r\n\r\n    // Format dynamic tooltip.\r\n    const formatTooltipData = (data) => {   \r\n        if(!data)\r\n            return null;        \r\n        data = data.split(\"|\");\r\n        if(data.length === 2){\r\n            let header = data[0];\r\n            let content = data[1].split(\"*\");\r\n            return(\r\n                <div className=\"text-center\">\r\n                    <p>{header}</p>\r\n                    {content.map((c, i) => {return <p key={i}>{c}</p>})}\r\n                </div>\r\n            );            \r\n        }\r\n        else return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ReactTooltip id=\"pokemon\" delayShow={200} getContent={(dataTip) => formatTooltipData(dataTip)}/>\r\n            <ReactTooltip id=\"moves\" delayShow={200} getContent={(dataTip) => formatTooltipData(dataTip)}/>\r\n            <ReactTooltip id=\"effects\" delayShow={200} getContent={(dataTip) => formatTooltipData(dataTip)}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport * as api from './constants/api';\r\nimport * as filters from './constants/filters';\r\nimport * as usability from './constants/usability';\r\nimport * as team from './constants/team';\r\nimport { TeamBuilderContext } from './context/TeamBuilderContext';\r\nimport Sidebar from './components/Sidebar';\r\nimport Footer from './components/Footer';\r\nimport Home from './containers/Home';\r\nimport Format from './containers/Format';\r\nimport TeamBuilder from './containers/TeamBuilder';\r\nimport About from './containers/About';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Tooltips from './components/Tooltips';\r\nimport {getStatPercentage} from './components/pokemon/PokemonStats';\r\n\r\nexport default function App() {\r\n  // ----- STATE -----\r\n  // API\r\n  const [loading, setLoading] = useState(true);  \r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [topPokemonList, setTopPokemonList] = useState([]);\r\n  const [moveList, setMoveList] = useState([]);\r\n  const [abilityList, setAbilityList] = useState([]);  \r\n  const [itemList, setItemList] = useState([]);  \r\n  const [typeList, setTypeList] = useState([]);\r\n  const [natureList, setNatureList] = useState([]);   \r\n\r\n  // Team builder.\r\n  const [generating, setGenerating] = useState(false);\r\n  const [generationStep, setGenerationStep] = useState(0);\r\n  /* const [teamData, setTeamData] = useState({\r\n    teamAuthor: '',\r\n    teamName: '',\r\n    teamNotes: '',\r\n  }); */\r\n  const [pokemonPreviews, setPokemonPreviews] = useState([]);\r\n  const [pokemonOptions, setPokemonOptions] = useState([]);\r\n  const [movesetOptions, setMovesetOptions] = useState([]);\r\n  const [abilityOptions, setAbilityOptions] = useState([]);\r\n  const [itemOptions, setItemOptions] = useState([]);\r\n  const [optionsData, setOptionsData] = useState({\r\n    movesetsPerType: [],\r\n    usableTypes: [],\r\n    reverseOptions: []\r\n  });\r\n  const [selectionsMade, setSelectionsMade] = useState({\r\n    pokemons: 0,\r\n    movesets: 0,\r\n    moves: [0, 0, 0, 0, 0, 0],\r\n    abilities: 0,\r\n    items: 0\r\n  });\r\n  const [sectionsCompleted, setSectionsCompleted] = useState({\r\n    pokemons: false,\r\n    movesets: false,\r\n    moves: false,\r\n    abilities: false,\r\n    items: false\r\n  });  \r\n\r\n  // ----- GENERATION -----\r\n  // Fetch lists from api on mount.\r\n  useEffect (() => {\r\n    let cancel = false;\r\n    setLoading(true);  \r\n\r\n    async function fetchData() {      \r\n      const pokemonResults = await axios.get(`${api.url}pokemon?limit=${api.pokemonCount}`);\r\n      let topPokemonResults = [];\r\n      for(let i = 0; i < api.topPokemonCountOffset.length; i++){\r\n        topPokemonResults.push(await \r\n          (await axios.get(`${api.url}pokemon?limit=${api.topPokemonCountOffset[i][0]}&offset=${api.topPokemonCountOffset[i][1]}`)\r\n        ).data.results);\r\n      };      \r\n      topPokemonResults = [].concat.apply([], topPokemonResults);\r\n      const moveResults = await axios.get(`${api.url}move?limit=${api.moveCount}`);\r\n      const abilityResults = await axios.get(`${api.url}ability?limit=${api.abilityCount}`);\r\n      let itemResults = [];\r\n      for(let i = 0; i < api.itemCountOffset.length; i++){\r\n        itemResults.push(await \r\n          (await axios.get(`${api.url}item?limit=${api.itemCountOffset[i][0]}&offset=${api.itemCountOffset[i][1]}`)\r\n        ).data.results);\r\n      };      \r\n      itemResults = [].concat.apply([], itemResults);\r\n      const typeResults = await axios.get(`${api.url}type?limit=${api.typeCount}`);\r\n      const natureResults = await axios.get(`${api.url}nature?nature=${api.natureCount}`);\r\n      if(!cancel) {\r\n        setPokemonList(pokemonResults.data.results);\r\n        setTopPokemonList(topPokemonResults);\r\n        setMoveList(moveResults.data.results);\r\n        setAbilityList(abilityResults.data.results);\r\n        setItemList(itemResults);\r\n        setTypeList(typeResults.data.results);\r\n        setNatureList(natureResults.data.results);\r\n        setLoading(false);              \r\n      }\r\n    };\r\n    fetchData();\r\n    \r\n    return () => cancel = true;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps    \r\n  }, []);\r\n\r\n  // Start generation.\r\n  function generateOptions() {        \r\n    setPokemonOptions([]);\r\n    setMovesetOptions([]); \r\n    setAbilityOptions([]);\r\n    setItemOptions([]);\r\n    setOptionsData({\r\n      movesetsPerType: [],\r\n      usableTypes: [],\r\n      reverseOptions: []\r\n    });\r\n    setGenerationStep(0);\r\n    setGenerating(true);    \r\n  }\r\n\r\n  // Generate pokemon \r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a new set of pokemon options.\r\n    async function getPokemonOptions() {\r\n      let pokemons = [];\r\n      let shinyIndex = Math.floor(Math.random()*team.randomOptions.pokemons);  \r\n      let topPokemon = 0;\r\n      let checkTopPokemon = true;\r\n\r\n      for (let index = 0; index < team.randomOptions.pokemons; index++) {\r\n        const pokemon = await getNewPokemon(pokemons, topPokemon);\r\n        const species = await axios.get(pokemon.species.url);\r\n        // gender\r\n        pokemon.gender_rate = species.data.gender_rate;\r\n        if(pokemon.gender_rate < 0)\r\n          pokemon.gender = \"genderless\";\r\n        else if(FindKeywords(pokemon.name, '-', ['male']))\r\n          pokemon.gender = \"male\";\r\n        else if(FindKeywords(pokemon.name, '-', ['female']))\r\n          pokemon.gender = \"female\";\r\n        else if(pokemon.gender_rate === 0)\r\n          pokemon.gender = \"male\";\r\n        else if(pokemon.gender_rate === 8)\r\n          pokemon.gender = \"female\";\r\n        else {\r\n          pokemon.gender = (Math.random()*101) <= (pokemon.gender_rate * 12.5) ? \"female\" : \"male\";\r\n        }        \r\n        // balance\r\n        if(topPokemon < team.topPokemonBalance)\r\n          checkTopPokemon = true;                \r\n        pokemon.is_mythical = species.data.is_mythical;\r\n        pokemon.is_legendary = species.data.is_legendary;  \r\n        if(checkTopPokemon && (pokemon.is_mythical || pokemon.is_legendary)){\r\n          topPokemon += 1;      \r\n          checkTopPokemon = false;\r\n        }          \r\n        pokemon.shiny = (index === shinyIndex);\r\n        pokemon.level = pokemon.shiny ? 60 : 50;\r\n        pokemon.nickname = '';\r\n        // stats        \r\n        pokemon.stats.map(s => {          \r\n          s.ev = 0;\r\n          s.iv = -1;\r\n          return s;\r\n        });                       \r\n        let stat = null;\r\n        for(let i = 0; i < 3; i++){\r\n          do{\r\n            stat = pokemon.stats[Math.floor(Math.random()*pokemon.stats.length)];\r\n          } while (stat.ev > 0)\r\n          if (i <= 1)\r\n            stat.ev = 252;\r\n          else if (i === 2)\r\n            stat.ev = 4;        \r\n        }        \r\n        for(let i = 0; i < 6; i++){\r\n          do{\r\n            stat = pokemon.stats[Math.floor(Math.random()*pokemon.stats.length)];\r\n          } while (stat.iv >= 0)\r\n          if (i <= 2)\r\n            stat.iv = 31;\r\n          else if (i >= 3)\r\n            stat.iv = Math.floor(Math.random() * 32);                    \r\n        }\r\n        pokemon.nature = natureList[Math.floor(Math.random()*natureList.length)];\r\n        const nature = await axios.get(pokemon.nature.url);\r\n        pokemon.nature.increased = nature.data.increased_stat;\r\n        pokemon.nature.decreased = nature.data.decreased_stat;\r\n        pokemon.stats.map((s, i) => {\r\n          if(i === 0)\r\n            s.calculated_stat = Math.floor((s.base_stat * 2 + s.iv + (s.ev/4)) * pokemon.level / 100 + 10 + pokemon.level);\r\n          else{\r\n            s.calculated_stat = (s.base_stat * 2 + s.iv + (s.ev/4)) * pokemon.level / 100 + 5;\r\n            if(pokemon.nature.increased && pokemon.nature.increased.name === s.stat.name)\r\n              s.calculated_stat *= 1 + 0.1;\r\n            else if(pokemon.nature.decreased && pokemon.nature.decreased.name === s.stat.name)\r\n              s.calculated_stat *= 1 - 0.1;\r\n            s.calculated_stat = Math.floor(s.calculated_stat);\r\n          }\r\n          return s;\r\n        });\r\n        pokemon.highestStats = pokemon.stats.map((s, i) => {\r\n          return {statIndex: i, \r\n            percentage: getStatPercentage(i === 0 ? team.statRanges.hp : team.statRanges.general, s.calculated_stat)}\r\n        });\r\n        pokemon.highestStats.sort(function(a, b){return b.percentage-a.percentage});\r\n        pokemon.highestStats = pokemon.highestStats.filter(s => s.percentage >= 50);\r\n        pokemon.stats.push({name: 'total', base_stat: getTotalStats(pokemon.stats)});\r\n        if(checkTopPokemon && (pokemon.stats[6].base_stat >= team.topPokemonTotalStatsThreshold)){\r\n          topPokemon += 1;      \r\n          checkTopPokemon = false;\r\n        }   \r\n        // selections\r\n        pokemon.selected = false;\r\n        pokemon.moveset = null;\r\n        pokemon.ability = null;\r\n        pokemon.item = null;                        \r\n\r\n        pokemons.push(pokemon);\r\n        if(!cancel)\r\n          setPokemonOptions([...pokemons]); \r\n      }\r\n      if(!cancel)\r\n        setGenerationStep(1);\r\n    }\r\n\r\n    // Get a new single pokemon option.\r\n    async function getNewPokemon(currentPokemons, topPokemon) {    \r\n      let newPokemon = '';\r\n      let finalPokemon = '';\r\n      let isTopPokemon = false;\r\n\r\n      do {          \r\n          let pokemon = null;\r\n          if(topPokemon < team.topPokemonBalance && currentPokemons.length + team.topPokemonBalance >= team.randomOptions.pokemons)\r\n            pokemon = topPokemonList[Math.floor(Math.random()*topPokemonList.length)];\r\n          else\r\n            pokemon = pokemonList[Math.floor(Math.random()*pokemonList.length)];\r\n\r\n          const initialPokemon = await axios.get(`${api.url}pokemon/${pokemon.name}`);\r\n          const species = await axios.get(initialPokemon.data.species.url);\r\n          const evolutions = await axios.get(species.data.evolution_chain.url);\r\n          \r\n          // Get an array of evolutions.\r\n          let evoChain = [];\r\n          let evoData = evolutions.data.chain;\r\n          do {                        \r\n              // Current.\r\n              evoChain.push(evoData.species.name);            \r\n              let numberOfEvolutions = evoData['evolves_to'].length;  \r\n                                    \r\n              // Branching evolutions.\r\n              if(numberOfEvolutions > 1) {\r\n                let nextSpecies = [];\r\n                let lastSpecies = [];\r\n                for (let i = 0; i < numberOfEvolutions; i++) {                  \r\n                  nextSpecies.push(evoData.evolves_to[i].species.name);\r\n                  \r\n                  // Branch continuation.\r\n                  if(evoData.evolves_to[i].hasOwnProperty('evolves_to') && evoData.evolves_to[i].evolves_to.length > 0)\r\n                    lastSpecies.push(evoData.evolves_to[i].evolves_to[0].species.name);\r\n                }\r\n                evoChain.push(nextSpecies);\r\n  \r\n                if(lastSpecies.length > 0)\r\n                evoChain.push(lastSpecies);\r\n                \r\n                // Stop the chain, all branching evolutions are symmetrical.\r\n                evoData = null;\r\n              }\r\n              else {                \r\n                // Evolution.\r\n                evoData = evoData['evolves_to'][0];\r\n              }\r\n                        \r\n          } while (!!evoData && evoData.hasOwnProperty('evolves_to'));   \r\n          \r\n          // Get the/a final evolution.\r\n          let finalEvolution = evoChain[evoChain.length - 1];\r\n          if(Array.isArray(finalEvolution)){\r\n            finalEvolution = finalEvolution[Math.floor(Math.random()*finalEvolution.length)];        \r\n          }\r\n  \r\n          // Get the varieties for the final evolution.\r\n          const finalSpecies = await axios.get(`${api.url}pokemon-species/${finalEvolution}`);\r\n          let varieties = [];\r\n          finalSpecies.data.varieties.forEach((v, i) => {\r\n            varieties.push(finalSpecies.data.varieties[i].pokemon.name)\r\n          });                \r\n  \r\n          // Filter varieties for more balance.\r\n          varieties = varieties.filter(v => {          \r\n            return !FindKeywords(v, '-', filters.pokemonFilter, filters.pokemonAllow);            \r\n          });       \r\n  \r\n          // Get the final pokemon from the varieties.\r\n          finalPokemon = varieties[Math.floor(Math.random()*varieties.length)];          \r\n\r\n          if(finalPokemon){\r\n            newPokemon = await axios.get(`${api.url}pokemon/${finalPokemon}`);\r\n            // Check for top pokemon balance\r\n            isTopPokemon = (finalSpecies.data.is_mythical || finalSpecies.data.is_legendary || \r\n              getTotalStats(newPokemon.data.stats) >= team.topPokemonTotalStatsThreshold);            \r\n          }\r\n      } while (!finalPokemon || checkDuplicatedName(currentPokemons, finalPokemon) ||\r\n              (isTopPokemon && topPokemon >= team.topPokemonBalance) ||\r\n              (!isTopPokemon && topPokemon < team.topPokemonBalance && \r\n              currentPokemons.length + team.topPokemonBalance >= team.randomOptions.pokemons))\r\n      return newPokemon.data\r\n    };\r\n\r\n    if(generating && generationStep === 0 && pokemonList.length > 0){      \r\n      getPokemonOptions();      \r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep, pokemonList, topPokemonList, natureList])\r\n\r\n  // Helper functions for usability checks.\r\n  const getPokemonUsability = useCallback((pokemons) => {    \r\n    return pokemonOptions.find(p => pokemons.includes(p.name));\r\n  }, [pokemonOptions]);\r\n\r\n  const getRandomPokemonType = useCallback((exclude) => {   \r\n    let types = typeList.filter(t => !exclude.includes(t.name)); \r\n    return types[Math.floor(Math.random()*types.length)].name;\r\n  }, [typeList]);\r\n\r\n  // Generate movesets\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a set of moveset options.  \r\n    async function getMovesetOptions() {              \r\n      let movesets = [];            \r\n\r\n      for (let index = 0; index < team.randomOptions.movesets; index++) {\r\n        const moveset = await getNewMoveset()\r\n        movesets.push(moveset);\r\n        if(!cancel)\r\n          setMovesetOptions([...movesets]); \r\n      }  \r\n      if(!cancel)\r\n        setGenerationStep(2);\r\n    }       \r\n\r\n    // Get a new moveset option.\r\n    async function getNewMoveset() {    \r\n      let newMoveset = [];\r\n      let move = '';\r\n      let status = false;\r\n      let statusMoves = 0;  \r\n      let usable = true;  \r\n      let combo = '';\r\n      \r\n      for (let index = 0; index < team.randomOptions.moves; index++) {            \r\n        do{        \r\n          if(combo){\r\n            move = {name: combo};\r\n            combo = '';\r\n          }\r\n          else\r\n            move = moveList[Math.floor(Math.random()*moveList.length)];\r\n          move = await axios.get(`${api.url}move/${move.name}`);\r\n          status = move.data.damage_class && move.data.damage_class.name === 'status'; \r\n          usable = true;       \r\n\r\n          switch(move.data.name){            \r\n            case 'swallow':\r\n            case 'spit-up':\r\n              // Check space for combo moves.\r\n              if(!newMoveset.find(m => m.name === 'stockpile')){\r\n                usable = (team.randomOptions.moves - newMoveset.length) >= 2;\r\n                if(usable){\r\n                  if(move.data.name === 'swallow' && (team.moveStatusLimit - statusMoves) >= 2)\r\n                    combo = 'stockpile';\r\n                  else if(move.data.name === 'spit-up' && (team.moveStatusLimit - statusMoves) >= 1)\r\n                    combo = 'stockpile';\r\n                  else if((team.moveStatusLimit - statusMoves) <= 0)\r\n                    usable = false;\r\n                }                                  \r\n              }                          \r\n              break;              \r\n            case 'stockpile':\r\n              // Check space for combo moves.\r\n              if(!newMoveset.find(m => m.name === 'swallow') && !newMoveset.find(m => m.name === 'spit-up')){\r\n                usable = (team.randomOptions.moves - newMoveset.length) >= 2;\r\n                if(usable){\r\n                  if((team.moveStatusLimit - statusMoves) >= 2)\r\n                    combo = Math.random() < 0.5 ? 'swallow' : 'spit-up';\r\n                  else if((team.moveStatusLimit - statusMoves) >= 1)\r\n                    combo = 'spit-up';\r\n                  else if((team.moveStatusLimit - statusMoves) <= 0)\r\n                    usable = false;\r\n                }\r\n              }\r\n              break;\r\n            case 'aurora-veil':\r\n              // Check space for combo moves.\r\n              if(!newMoveset.find(m => m.name === 'hail')){\r\n                usable = (team.randomOptions.moves - newMoveset.length) >= 2;\r\n                if(usable){\r\n                  if((team.moveStatusLimit - statusMoves) >= 2)\r\n                    combo = 'hail';\r\n                  else if((team.moveStatusLimit - statusMoves) <= 1)\r\n                    usable = false;\r\n                }\r\n              }\r\n              break;             \r\n            case 'hyperspace-fury':\r\n              // Check for specific pokemon.\r\n              usable = getPokemonUsability(['hoopa-unbound']);\r\n              break;\r\n            case 'dark-void':\r\n              // Check for specific pokemon.\r\n              usable = getPokemonUsability(['darkrai']);\r\n              break;\r\n            case 'aura-wheel':\r\n              // Check for specific pokemon.\r\n              usable = getPokemonUsability(['morpeko-full-belly']);\r\n              break;\r\n            case 'hidden-power':\r\n              // Set a random type other than normal and fairy.\r\n              move.data.type.name = getRandomPokemonType(['normal', 'fairy']);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } while (checkDuplicatedName(newMoveset, move.data.name) || \r\n                FindKeywords(move.data.name, '-', filters.moveFilter, filters.moveAllow) ||\r\n                (status && statusMoves >= team.moveStatusLimit) || !usable)\r\n        move.data.selected = false;\r\n        newMoveset.push(move.data);      \r\n        if(status){\r\n          statusMoves = statusMoves + 1;\r\n          status = false;\r\n        }\r\n      }\r\n      return newMoveset;\r\n    }\r\n\r\n    if(generating && generationStep === 1 && moveList.length > 0){      \r\n      getMovesetOptions();\r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep, moveList, getPokemonUsability, getRandomPokemonType]);\r\n\r\n  // Respond to moveset options generated completely.\r\n  useEffect (() => {  \r\n    let cancel = false;\r\n\r\n    if(generating && generationStep === 2 && movesetOptions.length >= team.randomOptions.movesets){\r\n      let msPerType = [];\r\n\r\n      typeList.forEach(type => {\r\n        let msInType = {name: type.name, movesets: 0};\r\n        movesetOptions.forEach(ms => {      \r\n          if(ms.find(m => m.type.name === type.name && m.damage_class.name !== 'status')){\r\n            msInType.movesets += 1;          \r\n          }\r\n        });\r\n        msPerType.push(msInType);        \r\n      });       \r\n      let uTypes = msPerType.filter(t => t.movesets !== 0).map(t => {return t.name});   \r\n\r\n      if(!cancel){\r\n        setOptionsData(s => {return {...s, movesetsPerType: msPerType, usableTypes: uTypes} });      \r\n        setGenerationStep(3);\r\n      }\r\n    }    \r\n    return () => cancel = true;\r\n  }, [generating, generationStep, movesetOptions, typeList]);  \r\n\r\n  // Helper functions for usability checks.\r\n  const getPokemonTypeUsability = useCallback((type) => {\r\n    return pokemonOptions.find(p => p.types.find(t => t.type.name === type));\r\n  }, [pokemonOptions])  \r\n\r\n  const getMovesetTypeUsability = useCallback((types) => {\r\n    let usable = types.find(t => optionsData.usableTypes.includes(t));\r\n    return usable;\r\n  }, [optionsData]);\r\n\r\n  const getTypeFromEffect = useCallback((effect) => {\r\n    return effect.replace(/-/g, \" \").split(\" \").find(keyword => optionsData.usableTypes.includes(keyword));\r\n  }, [optionsData]);\r\n\r\n  const getMovesetTypeUsabilityForItems = useCallback((item, currentItems) => {\r\n    let usable = false;\r\n    let type = getTypeFromEffect(item.effect_entries.find(e => e.language.name === 'en').effect.toLowerCase());\r\n    if(type){  \r\n      // Check current items.          \r\n      let itemsOfType = 0;\r\n      currentItems.forEach(ci => {\r\n        if((ci.category.name === 'type-enhancement' || ci.category.name === 'plates') && \r\n          getTypeFromEffect(ci.effect_entries.find(e => e.language.name === 'en').effect.toLowerCase()) === type)                \r\n        itemsOfType += 1;              \r\n      });    \r\n      usable = optionsData.movesetsPerType.find(mt => mt.name === type && itemsOfType < mt.movesets);\r\n    }\r\n    return usable;\r\n  }, [optionsData, getTypeFromEffect]);\r\n\r\n  const getSpecificOptionsUsabilityForItems = useCallback((moves, abilities, items, currentItems) => {\r\n    let usable = false;            \r\n    let maxOptions = 0;\r\n    let itemsOfType = 0;\r\n\r\n    // Get max options.\r\n    if(moves){      \r\n      movesetOptions.forEach(mo => {\r\n        if(mo.find(m => moves.includes(m.name)))\r\n          maxOptions += 1\r\n      });\r\n    }    \r\n    if(abilities){      \r\n      if(abilityOptions.find(a => abilities.includes(a.name)))\r\n        maxOptions += 1;\r\n    }                    \r\n    // Get current items.  \r\n    if(items){    \r\n      currentItems.forEach(ci => {                \r\n        if(ci.name.split('-').find(keyword => items.includes(keyword)))\r\n          itemsOfType += 1;\r\n      });    \r\n      usable = (itemsOfType < maxOptions);\r\n    }    \r\n    else{\r\n      // Specific case for plates.\r\n      // Get current items.\r\n      currentItems.forEach(ci => {        \r\n        if(ci.category.name === 'plates' &&\r\n          !optionsData.usableTypes.includes(getTypeFromEffect(ci.effect_entries.find(e => e.language.name === 'en').effect.toLowerCase())))\r\n          itemsOfType += 1;        \r\n      });\r\n      usable = (itemsOfType < maxOptions);\r\n    }\r\n\r\n    return usable;\r\n  }, [optionsData, movesetOptions, abilityOptions, getTypeFromEffect]);\r\n\r\n  const getMoveMechanicUsability = useCallback((mechanic, exactMoves, ignoreMoves) => {\r\n    let moveNames = movesetOptions.map(ms => { return ms.map(m => { return m.name } ) });\r\n    moveNames = [].concat.apply([], moveNames);\r\n\r\n    if(ignoreMoves && ignoreMoves.length > 0){\r\n      moveNames = moveNames.filter(name => {return !ignoreMoves.includes(name)})\r\n    }\r\n    \r\n    if(exactMoves && exactMoves.length > 0){      \r\n      return moveNames.find(name => exactMoves.includes(name));\r\n    }\r\n    else {\r\n      switch(mechanic){\r\n        case 'charge':\r\n          return moveNames.find(name => usability.chargeMoves.includes(name));\r\n        case 'bind':\r\n          return moveNames.find(name => usability.bindMoves.includes(name));\r\n        case 'drain':\r\n          return moveNames.find(name => usability.drainMoves.includes(name));\r\n        case 'terrain':\r\n          return moveNames.find(name => usability.terrainMoves.includes(name));\r\n        case 'weather':\r\n          return moveNames.find(name => usability.weatherMoves.includes(name));\r\n        case 'barrier':        \r\n          return moveNames.find(name => usability.barrierMoves.includes(name));\r\n        case 'orb':        \r\n          return moveNames.find(name => usability.orbMoves.includes(name));\r\n        case 'punch':        \r\n          return moveNames.find(name => usability.punchMoves.includes(name));\r\n        case 'multistrike':        \r\n          return moveNames.find(name => usability.multistrikeMoves.includes(name));\r\n        case 'recoil':        \r\n          return moveNames.find(name => usability.recoilMoves.includes(name));\r\n        case 'bite':        \r\n          return moveNames.find(name => usability.biteMoves.includes(name));\r\n        case 'pulse':        \r\n          return moveNames.find(name => usability.pulseMoves.includes(name));\r\n        case 'sound':        \r\n          return moveNames.find(name => usability.soundMoves.includes(name));\r\n        case 'heal':        \r\n          return moveNames.find(name => usability.healMoves.includes(name));\r\n        case 'contact':        \r\n          return moveNames.find(name => usability.contactMoves.includes(name));\r\n        case 'bad-item':        \r\n          return moveNames.find(name => usability.badItemMoves.includes(name));\r\n        case 'bad-ability':        \r\n          return moveNames.find(name => usability.badAbilityMoves.includes(name));\r\n        default:\r\n          return false;\r\n      }    \r\n    }\r\n  }, [movesetOptions]);\r\n\r\n  const getAbilityMechanicUsability = useCallback((mechanic, exactAbilities) => {\r\n    let abilityNames = abilityOptions.map(a => { return a.name } );\r\n\r\n    if(exactAbilities && exactAbilities.length > 0){     \r\n      return abilityNames.find(name => exactAbilities.includes(name));\r\n    }\r\n    else {\r\n      switch(mechanic){\r\n        case 'terrain':\r\n          return abilityNames.find(name => usability.terrainAbilities.includes(name));      \r\n        case 'weather':\r\n          return abilityNames.find(name => usability.weatherAbilities.includes(name)); \r\n        case 'orb':\r\n          return abilityNames.find(name => usability.orbAbilities.includes(name));\r\n        default:\r\n          return false;\r\n      }    \r\n    }\r\n  }, [abilityOptions])\r\n\r\n  // Helper funciton for usability checks.\r\n  const getReverseOption = useCallback((index) => {\r\n    if(optionsData.reverseOptions[index])\r\n      return optionsData.reverseOptions[index]\r\n    else\r\n      return null;      \r\n  }, [optionsData])\r\n\r\n  // Generate abilities\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a set of ability options.\r\n    async function getAbilityOptions() {      \r\n      let abilities = [];            \r\n\r\n      for (let index = 0; index < team.randomOptions.abilities; index++) {\r\n        const ability = await getNewAbility(abilities);\r\n        abilities.push(ability);\r\n        if(!cancel)\r\n          setAbilityOptions([...abilities]); \r\n      }                 \r\n      if(!cancel)\r\n        setGenerationStep(4);\r\n    }\r\n\r\n    // Get a new ability option.\r\n    async function getNewAbility(currentAbilities) {    \r\n      let newAbility = ''; \r\n      let usable = true;      \r\n    \r\n      do{        \r\n        let ability = abilityList[Math.floor(Math.random()*abilityList.length)];      \r\n        newAbility = await axios.get(`${api.url}ability/${ability.name}`);     \r\n        usable = true;    \r\n                               \r\n        switch(newAbility.data.name){\r\n          case 'iron-fist':\r\n            // Check for punch moves.\r\n            usable = getMoveMechanicUsability('punch');            \r\n            break;                       \r\n          case 'skill-link':\r\n            // Check for multistrike moves.\r\n            usable = getMoveMechanicUsability('multistrike');            \r\n            break;\r\n          case 'reckless':\r\n            // Check for recoil/crash moves.\r\n            usable = getMoveMechanicUsability('recoil');  \r\n            break;  \r\n          case 'rock-headed':\r\n            // Check for recoil moves.\r\n            usable = getMoveMechanicUsability('recoil', null, ['jump-kick', 'high-jump-kick']);        \r\n            break;\r\n          case 'strong-jaw':\r\n            // Check for bite moves.\r\n            usable = getMoveMechanicUsability('bite');            \r\n            break;\r\n          case 'mega-launcher':\r\n            // Check for pulse/aura moves.\r\n            usable = getMoveMechanicUsability('pulse');            \r\n            break;\r\n          case 'liquid-voice':\r\n            // Check for sound moves.\r\n            usable = getMoveMechanicUsability('sound', null, ['sparkling-aria']);\r\n            break;\r\n          case 'punk-rock':\r\n            // Check for sound moves.\r\n            usable = (getMoveMechanicUsability('sound'));\r\n            break;\r\n          case 'triage':\r\n            // Check for heal moves.\r\n            usable = getMoveMechanicUsability('heal');\r\n            break;      \r\n          case 'tough-claws':\r\n          case 'unseen-fist':\r\n          case 'poison-touch':\r\n          case 'long-reach':\r\n            // Check for contact moves.\r\n            usable = getMoveMechanicUsability('contact');\r\n            break;    \r\n          case 'flash-fire':\r\n          case 'blaze':\r\n            // Check for fire moves.\r\n            usable = getMovesetTypeUsability(['fire']);\r\n            break;\r\n          case 'overgrow':\r\n            // Check for grass moves.\r\n            usable = getMovesetTypeUsability(['grass']);\r\n            break;\r\n          case 'torrent':\r\n            // Check for water moves.\r\n            usable = getMovesetTypeUsability(['water']);\r\n            break;\r\n          case 'swarm':\r\n            // Check for bug moves.\r\n            usable = getMovesetTypeUsability(['bug']);\r\n            break;\r\n          case 'scrappy':\r\n            // Check for normal or fighting moves.\r\n            usable = getMovesetTypeUsability(['normal', 'fighting']);\r\n            break;          \r\n          case 'gale-wings':\r\n            // Check for flying moves.\r\n            usable = getMovesetTypeUsability(['flying']);\r\n            break;\r\n          case 'dark-aura':\r\n            // Check for dark moves.\r\n            usable = getMovesetTypeUsability(['dark']);\r\n            break;\r\n          case 'fairy-aura':\r\n            // Check for fairy moves.\r\n            usable = getMovesetTypeUsability(['fairy']);\r\n            break;\r\n          case 'steelworker':\r\n          case 'steely-spirit':\r\n            // Check for steel moves.\r\n            usable = getMovesetTypeUsability(['steel']);\r\n            break;\r\n          case 'transistor':\r\n            // Check for electric moves.\r\n            usable = getMovesetTypeUsability(['electric']);\r\n            break;\r\n          case 'dragons-maw':\r\n            // Check for dragon moves.\r\n            usable = getMovesetTypeUsability(['dragon']);\r\n            break;            \r\n          case 'refrigerate':\r\n          case 'pixilate':\r\n          case 'galvanize':\r\n          case 'aerilate': \r\n            // Check for normal moves.\r\n            usable = getMovesetTypeUsability(['normal']);\r\n            break;           \r\n          case 'flower-veil':\r\n            // Check for grass pokemon.\r\n            usable = getPokemonTypeUsability('grass');\r\n            break;\r\n          case 'multitype':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['arceus']);\r\n            break;\r\n          case 'rks-system':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['silvally']);\r\n            break;\r\n          case 'ice-face':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['eiscue-ice']);\r\n            break;\r\n          case 'hunger-switch':\r\n            // Check for specific pokemon.\r\n            usable = (getPokemonUsability(['morpeko-full-belly']) && getMoveMechanicUsability('', ['aura-wheel']));\r\n            break;\r\n          case 'forecast':\r\n            // Check for specific pokemon.\r\n            usable = (getPokemonUsability(['castform']) && \r\n              (getMoveMechanicUsability('', ['sunny-day', 'rain-dance', 'hail']) || \r\n              getAbilityMechanicUsability('', ['drought', 'desolate-land', 'drizzle', 'primordial-sea', 'snow-warning'])));\r\n            break;\r\n          case 'flower-gift':\r\n            // Check for specific pokemon.\r\n            usable = (getPokemonUsability(['cherrim']) && \r\n              (getMoveMechanicUsability('', ['sunny-day']) || getAbilityMechanicUsability('', ['drought', 'desolate-land'])));\r\n            break;\r\n          case 'zen-mode':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['darmanitan-standard', 'darmanitan-standard-galar']);\r\n            break;\r\n          case 'battle-bond':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['greninja']);\r\n            break;\r\n          case 'stance-change':\r\n            // Check for specific pokemon.\r\n            usable = (getPokemonUsability(['aegislash-shield']) && getMoveMechanicUsability('', ['kings-shield']));\r\n            break;\r\n          case 'power-construct':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['zygarde-50']);\r\n            break;\r\n          case 'shields-down':\r\n            // Check for specific pokemon.\r\n            usable = getPokemonUsability(['minior-red-meteor', 'minior-violet-meteor', 'minior-indigo-meteor',\r\n              'minior-blue-meteor', 'minior-green-meteor', 'minior-yellow-meteor', 'minior-orange-meteor']);\r\n            break;\r\n          case 'disguise':\r\n            // Check for specific pokemon. No effect: 'mimikyu-busted'\r\n            usable = getPokemonUsability(['mimikyu-disguised']);\r\n            break;\r\n          case 'gulp-missile':\r\n            // Check for specific pokemon.\r\n            usable = (getPokemonUsability(['cramorant']) && getMoveMechanicUsability('', ['surf', 'dive']));\r\n            break;\r\n          case 'truant':\r\n          case 'stall':\r\n          case 'klutz':\r\n          case 'slow-start':\r\n          case 'defeatist': \r\n            // Check for bad abilities.\r\n            usable = getMoveMechanicUsability('bad-ability');\r\n            break;\r\n          case 'mimicry':\r\n            // Check for terrain moves or abilities.\r\n            usable = (getMoveMechanicUsability('terrain') || getAbilityMechanicUsability('terrain'));\r\n            break;\r\n          case 'grass-pelt':\r\n            // Check for grassy terrain moves or abilities.\r\n            usable = (getMoveMechanicUsability('', ['grassy-terrain']) || getAbilityMechanicUsability('', ['grassy-surge']));\r\n            break;\r\n          case 'surge-surfer':\r\n            // Check for electric terrain moves or abilities.\r\n            usable = (getMoveMechanicUsability('', ['electric-terrain']) || getAbilityMechanicUsability('', ['electric-surge']));\r\n            break;\r\n          case 'clorophyll':       \r\n          case 'leaf-guard':\r\n          case 'solar-power':                   \r\n            // Check for harsh sunlight weather moves or abilities.\r\n            usable = (getMoveMechanicUsability('', ['sunny-day']) || getAbilityMechanicUsability('', ['drought', 'desolate-land']));\r\n            break;\r\n          case 'hydration':\r\n          case 'rain-dish':\r\n          case 'swift-swim':                   \r\n            // Check for rain weather moves or abilities.\r\n            usable = (getMoveMechanicUsability('', ['rain-dance']) || getAbilityMechanicUsability('', ['drizzle', 'primordial-sea']));\r\n            break;\r\n          case 'sand-veil':   \r\n          case 'sand-rush':              \r\n            // Check for sandstorm weather moves or abilities.\r\n            usable = (getMoveMechanicUsability('', ['sandstorm']) || getAbilityMechanicUsability('', ['sand-stream', 'sand-spit']));\r\n            break;\r\n          case 'sand-force':\r\n            // Check for sandstorm weather moves or abilities and rock, ground or steel moves.\r\n            usable = (getMoveMechanicUsability('', ['sandstorm']) || getAbilityMechanicUsability('', ['sand-stream', 'sand-spit'])) &&\r\n              getMovesetTypeUsability(['rock', 'ground', 'steel']);\r\n            break;\r\n          case 'ice-body': \r\n          case 'snow-cloak':   \r\n          case 'slush-rush':              \r\n            // Check for hail weather moves or abilities.\r\n            usable = (getMoveMechanicUsability('', ['hail']) || getAbilityMechanicUsability('', ['snow-warning']));\r\n            break;\r\n          default:\r\n            break;\r\n        }                  \r\n      } while (checkDuplicatedName(currentAbilities, newAbility.data.name) || \r\n              FindKeywords(newAbility.data.name, '-', filters.abilityFilter, filters.abilityAllow) || !usable)      \r\n\r\n      return newAbility.data;\r\n    }\r\n\r\n    if(generating && generationStep === 3 && abilityList.length > 0){      \r\n      getAbilityOptions();\r\n    }\r\n    return () => cancel = true;\r\n\r\n    // eslint-disable-next-line\r\n  }, [generating, generationStep, abilityList, \r\n      getMoveMechanicUsability, getMovesetTypeUsability, getPokemonUsability]);\r\n\r\n  // Respond to ability options generated completely.\r\n  useEffect (() => {  \r\n    let cancel = false;\r\n\r\n    if(generating && generationStep === 4 && abilityOptions.length >= team.randomOptions.abilities){\r\n\r\n      // Check abilities that change move types.\r\n      let msPerType = optionsData.movesetsPerType;            \r\n      msPerType.forEach(ms => {\r\n        switch(ms.name){\r\n          case 'normal':\r\n            if (abilityOptions.find(a => a.name === 'normalize'))\r\n              ms.movesets += 1;\r\n            break;\r\n          case 'ice':\r\n            if (abilityOptions.find(a => a.name === 'refrigerate'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          case 'fairy':\r\n            if (abilityOptions.find(a => a.name === 'pixilate'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          case 'electric':\r\n            if (abilityOptions.find(a => a.name === 'galvanize'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          case 'flying':\r\n            if (abilityOptions.find(a => a.name === 'aerilate'))\r\n              ms.movesets += 1;              \r\n            break;\r\n          default:          \r\n            break;\r\n        }\r\n      })                                   \r\n      let uTypes = msPerType.filter(t => t.movesets !== 0).map(t => {return t.name});     \r\n\r\n      // Prepare options for possible reverse branch logic.\r\n      let rOptions = []; \r\n      let options =  movesetOptions.map(ms => ms.map(m => {return m.name}));\r\n      options.push(abilityOptions.map(a => {return a.name}));\r\n      options = [].concat.apply([], options);   \r\n\r\n      // Check for reverse branch logic options. \r\n      options.forEach(opt => {\r\n        if(!rOptions.includes('consumable') && [...usability.consumableItemMoves, ...usability.consumableItemAbilities].includes(opt))\r\n          rOptions.push('consumable');\r\n        else if(!rOptions.includes('plate') && opt === 'multitype')\r\n          rOptions.push('plate');\r\n        else if(!rOptions.includes('memory') && opt === 'rks-system')\r\n          rOptions.push('memory');\r\n        else if(!rOptions.includes('berry') && [...usability.berryMoves, ...usability.berryAbilities].includes(opt))\r\n          rOptions.push('berry');\r\n      });          \r\n\r\n      if(!cancel){\r\n        setOptionsData(s => {return {...s, movesetsPerType: msPerType, usableTypes: uTypes, reverseOptions: rOptions} });     \r\n        setGenerationStep(5);\r\n      }\r\n    }    \r\n    return () => cancel = true;\r\n  }, [generating, generationStep, movesetOptions, abilityOptions, optionsData]);\r\n\r\n  // Generate items\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    // Get a set of item options.\r\n    async function getItemOptions() {          \r\n      let items = [];                  \r\n      for (let index = 0; index < team.randomOptions.items; index++) {\r\n        let itemType = getReverseOption(index);\r\n        let item = \"\";\r\n        if(itemType)\r\n          item = await getNewItem(items, itemType);\r\n        else\r\n          item = await getNewItem(items);\r\n        items.push(item);\r\n        if(!cancel)\r\n          setItemOptions([...items]); \r\n      }                 \r\n      if(!cancel)\r\n        setGenerationStep(6); \r\n    }\r\n\r\n    // Get a new item option.\r\n    async function getNewItem(currentItems, itemType) {    \r\n      let newItem = '';    \r\n      let usable = true; \r\n            \r\n      do{        \r\n        let item = \"\";\r\n        switch(itemType){\r\n          case 'consumable':\r\n            item = {name: usability.consumableItems[Math.floor(Math.random()*usability.consumableItems.length)]};\r\n            break;\r\n          case 'plate':\r\n            item = {name: usability.plateItems[Math.floor(Math.random()*usability.plateItems.length)]};\r\n            break;\r\n          case 'memory':\r\n            item = {name: usability.memoryItems[Math.floor(Math.random()*usability.memoryItems.length)]};\r\n            break;\r\n          case 'berry':\r\n            item = {name: usability.berryItems[Math.floor(Math.random()*usability.berryItems.length)]};\r\n            break;\r\n          default:\r\n            item = itemList[Math.floor(Math.random()*itemList.length)];      \r\n            break;\r\n        }        \r\n        newItem = await axios.get(`${api.url}item/${item.name}`);   \r\n        usable = true;    \r\n                               \r\n        switch(newItem.data.category.name){          \r\n          case 'held-items':\r\n            switch(newItem.data.name){\r\n              case 'power-herb': \r\n                // Check for charge moves.               \r\n                usable = getMoveMechanicUsability('charge', null, ['sky-drop']);                \r\n                break;\r\n              case 'grip-claw':\r\n              case 'binding-band':\r\n                // Check for bind moves.\r\n                usable = getMoveMechanicUsability('bind');\r\n                break;\r\n              case 'big-root':\r\n                // Check for drain moves.\r\n                usable = getMoveMechanicUsability('drain');                \r\n                break;\r\n              case 'terrain-extender':\r\n                // Check for terrain moves or abilities.\r\n                usable = (getMoveMechanicUsability('terrain') || getAbilityMechanicUsability('terrain'));\r\n                break;\r\n              case 'electric-seed':\r\n                // Check for electric terrain moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['electric-terrain']) || getAbilityMechanicUsability('', ['electric-surge']));\r\n                break;\r\n              case 'grassy-seed':\r\n                // Check for grassy terrain moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['grassy-terrain']) || getAbilityMechanicUsability('', ['grassy-surge']));\r\n                break;\r\n              case 'misty-seed':\r\n                // Check for misty terrain moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['misty-terrain']) || getAbilityMechanicUsability('', ['misty-surge']));\r\n                break;\r\n              case 'psychic-seed':\r\n                // Check for psychic terrain moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['psychic-terrain']) || getAbilityMechanicUsability('', ['psychic-surge']));\r\n                break;\r\n              case 'heat-rock':                \r\n                // Check for harsh sunlight weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['sunny-day']) || getAbilityMechanicUsability('', ['drought']));\r\n                break;\r\n              case 'damp-rock':                \r\n                // Check for rain weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['rain-dance']) || getAbilityMechanicUsability('', ['drizzle']));\r\n                break;\r\n              case 'icy-rock':                \r\n                // Check for hail weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['hail']) || getAbilityMechanicUsability('', ['snow-warning']));\r\n                break;\r\n              case 'smooth-rock':                \r\n                // Check for sandstorm weather moves or abilities.\r\n                usable = (getMoveMechanicUsability('', ['sandstorm']) || getAbilityMechanicUsability('', ['sand-stream', 'sand-spit']));\r\n                break;\r\n              case 'black-sludge':                \r\n                // Check for poison pokemons.\r\n                usable = (getPokemonTypeUsability('poison') || getMoveMechanicUsability('bad-item'));                \r\n                break;\r\n              case 'light-clay':                \r\n                // Check for barrier moves.\r\n                usable = getMoveMechanicUsability('barrier');                \r\n                break;    \r\n              case 'ring-target':                \r\n                // Check for bad item moves.\r\n                usable = getMoveMechanicUsability('bad-item');\r\n                break;  \r\n              case 'throat-spray':\r\n                // Check for sound moves.\r\n                usable = getMoveMechanicUsability('sound');\r\n                break;\r\n              case 'room-service':\r\n                // Check for specific move.\r\n                usable = getMoveMechanicUsability('', ['trick-room']);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'bad-held-items':\r\n            switch(newItem.data.name){\r\n              case 'toxic-orb':                   \r\n                // Check for orb moves or abilities.\r\n                usable = (getMoveMechanicUsability('orb') || getMoveMechanicUsability('bad-item') || \r\n                          getAbilityMechanicUsability('orb') || getAbilityMechanicUsability('', ['poison-heal', 'toxic-boost']));                                          \r\n                break;\r\n              case 'flame-orb':                                               \r\n                // Check for orb moves or abilities.\r\n                usable = (getMoveMechanicUsability('orb') || getMoveMechanicUsability('bad-item') || \r\n                          getAbilityMechanicUsability('orb') || getAbilityMechanicUsability('', ['flare-boost']));                \r\n                break;\r\n              case 'iron-ball':\r\n              case 'lagging-tail':\r\n              case 'sticky-barb':\r\n              case 'full-incense': \r\n                // Check for bad item moves.\r\n                usable = getMoveMechanicUsability('bad-item');\r\n                break; \r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case 'plates':\r\n            // Check for movesets with that type, a specific move or a specific ability.\r\n            usable = (getMovesetTypeUsabilityForItems(newItem.data, currentItems) ||\r\n                      getSpecificOptionsUsabilityForItems(['judgment'], ['multitype'], '', currentItems));\r\n            break;\r\n          case 'memories':                        \r\n            // Check for a specific move or a specific ability.            \r\n            usable = getSpecificOptionsUsabilityForItems(['multi-attack'], ['rks-system'], ['memory'], currentItems);\r\n            break;\r\n          case 'type-enhancement':\r\n            // Check for movesets with that type.\r\n            usable = getMovesetTypeUsabilityForItems(newItem.data, currentItems);\r\n            break; \r\n          case 'jewels':                        \r\n            // Check for a specific move type\r\n            usable = getMovesetTypeUsabilityForItems(newItem.data, currentItems);\r\n            break;           \r\n          case 'species-specific':\r\n              switch(newItem.data.name){\r\n                case 'douse-drive':                                     \r\n                case 'shock-drive':\r\n                case 'burn-drive':\r\n                case 'chill-drive':                                               \r\n                  // Check for a specific move.\r\n                  usable = getSpecificOptionsUsabilityForItems(['techno-blast'], '', ['drive'], currentItems);\r\n                  break;\r\n                case 'stick':\r\n                  // Check for a specific pokemon.\r\n                  usable = getPokemonUsability(['sirfetchd']);\r\n                  break;\r\n                case 'thick-club':\r\n                  // Check for a specific pokemon.\r\n                  usable = getPokemonUsability(['marowak', 'marowak-alola']);\r\n                  break;\r\n                case 'soul-dew':\r\n                  // Check for a specific pokemon.\r\n                  usable = (getPokemonUsability(['latios', 'latias']) && getMovesetTypeUsability(['dragon', 'psychic']));\r\n                  break;\r\n                case 'griseous-orb':\r\n                  // Check for a specific pokemon and move types.\r\n                  usable = (getPokemonUsability(['giratina-altered']) && getMovesetTypeUsability(['dragon', 'ghost']));\r\n                  break;\r\n                case 'adamant-orb':\r\n                  // Check for a specific pokemon and move types.\r\n                  usable = (getPokemonUsability(['dialga']) && getMovesetTypeUsability(['dragon', 'steel']));\r\n                  break;\r\n                case 'lustrous-orb':\r\n                  // Check for a specific pokemon and move types.\r\n                  usable = (getPokemonUsability(['palkia']) && getMovesetTypeUsability(['dragon', 'water']));\r\n                  break;\r\n                case 'rusted-sword':\r\n                  // Check for a specific pokemon.\r\n                  usable = getPokemonUsability(['zacian']);\r\n                  break;\r\n                case 'rusted-shield':\r\n                  // Check for a specific pokemon.\r\n                  usable = getPokemonUsability(['zamazenta']);\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            break;\r\n          default:\r\n            break;\r\n        }                      \r\n      } while (checkDuplicatedName(currentItems, newItem.data.name) || \r\n              FindKeywords(newItem.data.name, '-', filters.itemFilter, filters.itemAllow) || !usable)\r\n      \r\n      return newItem.data;\r\n    } \r\n\r\n    if(generating && generationStep === 5 && itemList.length > 0){      \r\n      getItemOptions();\r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep, itemList,\r\n      getMovesetTypeUsabilityForItems, getMoveMechanicUsability, getAbilityMechanicUsability, getPokemonTypeUsability,\r\n      getReverseOption, getSpecificOptionsUsabilityForItems, getPokemonUsability, getMovesetTypeUsability])\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n\r\n    if(generating && generationStep === 6){\r\n      setToast('Actions', 'Options generated, build your team!', {success: true});\r\n      if(!cancel)\r\n        setGenerating(false);   \r\n    }\r\n    return () => cancel = true;\r\n  }, [generating, generationStep])  \r\n\r\n  // ----- SELECTIONS & ASSIGNMENTS -----\r\n  // Select a pokemon.\r\n  const selectPokemon = (pokemon) => {\r\n    if(!generating){\r\n      let change = false;\r\n      let options = pokemonOptions;\r\n      options = options.map(p => {\r\n        if(p.name === pokemon.name){\r\n          if(p.selected) {      \r\n            p.selected = false;\r\n            p.moveset = null;\r\n            p.ability = null;\r\n            p.item = null;          \r\n            change = true;\r\n          }\r\n          else if(!p.selected && selectionsMade.pokemons < team.selectionsNeeded.pokemons) {\r\n            p.selected = true;\r\n            change = true;\r\n          }\r\n          else {\r\n            setToast('Pokémon Options', `Only ${team.selectionsNeeded.pokemons} pokémon can be selected.`, {warning: true});\r\n          }\r\n        }\r\n        return p;\r\n      })\r\n      if(change){\r\n        setPokemonOptions(options); \r\n      }\r\n    }\r\n    else\r\n      setToast('Actions', 'Your options are still being generated.', {warning: true});\r\n  }   \r\n\r\n  // Select a move.\r\n  const selectMove = (move, moveset) => {  \r\n    if(!generating){\r\n      let change = false;  \r\n      let msOptions = movesetOptions;    \r\n      msOptions[moveset] = msOptions[moveset].map(m => {\r\n        if(m.name === move.name){\r\n          if(m.selected){      \r\n            m.selected = false;\r\n            change = true;\r\n          }\r\n          else if(!m.selected && selectionsMade.moves[moveset] < team.selectionsNeeded.moves){\r\n            m.selected = true;\r\n            change = true;\r\n          }\r\n          else {\r\n            setToast('Moveset Options', `Only ${team.selectionsNeeded.moves} moves can be selected in a moveset.`, {warning: true});\r\n          }\r\n        }\r\n        return m;\r\n      });\r\n      if(change){\r\n        setMovesetOptions([...msOptions]);\r\n      }\r\n    }\r\n    else\r\n      setToast('Actions', 'Your options are still being generated.', {warning: true});\r\n  }\r\n\r\n  // Assign a pokemon to a moveset, ability or item.\r\n  const assignPokemon = (pokemon, assignable) => {\r\n    if(!generating){\r\n      let change = false;\r\n      let pokemons = pokemonOptions;\r\n      pokemons = pokemons.map(p => {\r\n        if(p.name === pokemon.name){\r\n          if(assignable.moveset != null){\r\n            if(p.moveset !== assignable.moveset)\r\n              p.moveset = assignable.moveset;\r\n            else\r\n              p.moveset = null;\r\n            change = true;\r\n          }\r\n          else if(assignable.ability != null){\r\n            if(p.ability !== assignable.ability)\r\n              p.ability = assignable.ability;\r\n            else\r\n              p.ability = null;\r\n            change = true;\r\n          }\r\n          else if(assignable.item != null){\r\n            if(p.item !== assignable.item)\r\n              p.item = assignable.item;\r\n            else\r\n              p.item = null;\r\n            change = true;\r\n          }\r\n        }\r\n        else{\r\n          if(assignable.moveset != null){\r\n            if(p.moveset === assignable.moveset) {\r\n              p.moveset = null;\r\n              change = true;\r\n              setToast('Moveset Options',\r\n              `Assigned ${upperCaseWords(pokemon.name)} instead of ${upperCaseWords(p.name)} to moveset ${assignable.moveset+1}.`,\r\n              {warning: true});\r\n            }\r\n          }\r\n          if(assignable.ability != null){\r\n            if(p.ability === assignable.ability) {\r\n              p.ability = null;\r\n              change = true;\r\n              setToast('Ability Options',\r\n              `Assigned ${upperCaseWords(pokemon.name)} instead of ${upperCaseWords(p.name)} to ability ${upperCaseWords(abilityOptions[assignable.ability].name)}.`,\r\n              {warning: true});\r\n            }\r\n          }\r\n          if(assignable.item != null){\r\n            if(p.item === assignable.item) {\r\n              p.item = null;\r\n              change = true;\r\n              setToast('Item Options',\r\n              `Assigned ${upperCaseWords(pokemon.name)} instead of ${upperCaseWords(p.name)} to item ${upperCaseWords(itemOptions[assignable.item].name)}.`,\r\n              {warning: true});\r\n            }\r\n          }\r\n        }\r\n        return p;\r\n      })\r\n      if(change){   \r\n        setPokemonOptions(pokemons);\r\n      }\r\n    }\r\n    else\r\n      setToast('Actions', 'Your options are still being generated.', {warning: true});\r\n  }    \r\n\r\n  // Clear all selections and assignments.\r\n  const clearChoices = () => {\r\n    const choicesMade = Object.values(selectionsMade).some(val => Array.isArray(val) ? val.some(i => i) : val);\r\n    if(choicesMade){\r\n      let options = pokemonOptions;\r\n      options = options.map(p => {      \r\n        p.selected = false;\r\n        p.moveset = null;\r\n        p.ability = null;\r\n        p.item = null;                  \r\n        return p;\r\n      });\r\n      setPokemonOptions(options);\r\n \r\n      let msOptions = movesetOptions;    \r\n      msOptions.forEach(ms => {\r\n        ms = ms.map(m => {   \r\n          m.selected = false;\r\n          return m;\r\n        });\r\n      });          \r\n      setMovesetOptions([...msOptions]);\r\n\r\n      setToast('Actions', 'Choices cleared, start again!', {success: true});\r\n    }\r\n    else {\r\n      setToast('Actions', 'There are no choices to clear.', {warning: true});\r\n    }\r\n  }\r\n\r\n  // ----- RESPONSES -----\r\n  // Respond to completed sections.\r\n  const checkSectionCompleted = useCallback((string, val) => {\r\n    let sCompleted = sectionsCompleted;\r\n    let change = false;\r\n    switch(string){\r\n      case 'pokemons':\r\n        if(!sCompleted.pokemons && val >= team.selectionsNeeded.pokemons){\r\n          sCompleted.pokemons = true;\r\n          change = true;\r\n          setToast('Pokémon Options', `All ${team.selectionsNeeded.pokemons} pokémon have been selected.`, {success: true});\r\n        }\r\n        else if(sCompleted.pokemons && val < team.selectionsNeeded.pokemons){\r\n          sCompleted.pokemons = false;\r\n          change = true;\r\n          setToast('Pokémon Options', `There must be ${team.selectionsNeeded.pokemons} pokémon selected.`, {warning: true});\r\n        }\r\n        break;\r\n      case 'movesets':\r\n        if(!sCompleted.movesets && val >= team.selectionsNeeded.movesets){\r\n          sCompleted.movesets = true;\r\n          change = true;\r\n          setToast('Moveset Options', `All ${team.selectionsNeeded.movesets} pokémon have been assigned to a moveset.`, {success: true});\r\n        }\r\n        else if(sCompleted.movesets && val < team.selectionsNeeded.movesets){\r\n          sCompleted.movesets = false;\r\n          change = true;\r\n          setToast('Moveset Options', `There must be ${team.selectionsNeeded.movesets} pokémon assigned to a moveset.`, {warning: true});\r\n        }\r\n        break;\r\n      case 'moves':\r\n        if(!sCompleted.moves && val >= team.selectionsNeeded.movesets * team.selectionsNeeded.moves){\r\n          sCompleted.moves = true;\r\n          change = true;\r\n          setToast('Moveset Options', `All ${team.selectionsNeeded.movesets * team.selectionsNeeded.moves} moves have been selected.`, {success: true});    \r\n        }\r\n        else if(sCompleted.moves && val < team.selectionsNeeded.movesets * team.selectionsNeeded.moves){\r\n          sCompleted.moves = false;\r\n          change = true;\r\n          setToast('Moveset Options', `There must be ${team.selectionsNeeded.movesets * team.selectionsNeeded.moves} moves selected.`, {warning: true});    \r\n        }\r\n        break;\r\n      case 'abilities':\r\n        if(!sCompleted.abilities && val >= team.selectionsNeeded.abilities){\r\n          sCompleted.abilities = true;\r\n          change = true;\r\n          setToast('Ability Options', `All ${team.selectionsNeeded.abilities} pokémon have been assigned to an ability.`, {success: true});\r\n        }\r\n        else if(sCompleted.abilities && val < team.selectionsNeeded.abilities){\r\n          sCompleted.abilities = false;\r\n          change = true;\r\n          setToast('Ability Options', `There must be ${team.selectionsNeeded.abilities} pokémon assigned to an ability.`, {warning: true});\r\n        }\r\n        break;\r\n      case 'items':\r\n        if(!sCompleted.items && val >= team.selectionsNeeded.items){\r\n          sCompleted.items = true;\r\n          change = true;\r\n          setToast('Item Options', `All ${team.selectionsNeeded.items} pokémon have been assigned to an item.`, {success: true});\r\n        }\r\n        else if(sCompleted.items && val < team.selectionsNeeded.items){\r\n          sCompleted.items = false;\r\n          change = true;\r\n          setToast('Item Options', `There must be ${team.selectionsNeeded.items} pokémon assigned to an item.`, {warning: true});\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if(change){\r\n      setSectionsCompleted(sCompleted);\r\n      if(Object.values(sCompleted).every(val => val))\r\n        setToast('Actions', `Team completely built, export it!`, {success: true});\r\n    }\r\n  }, [sectionsCompleted]);\r\n\r\n  // Respond to changes in slections/assignments for pokemon, movesets, abilities and items.\r\n  useEffect (() => {\r\n    let pSelected = 0;\r\n    let msAssigned = 0;    \r\n    let aAssigned = 0;\r\n    let iAssigned = 0;\r\n\r\n    pokemonOptions.forEach(p => {\r\n      if(p.selected)\r\n        pSelected = pSelected + 1;\r\n      if(p.moveset != null)\r\n        msAssigned = msAssigned + 1;\r\n      if(p.ability != null)\r\n        aAssigned = aAssigned + 1;\r\n      if(p.item != null)\r\n        iAssigned = iAssigned + 1;\r\n    });    \r\n    \r\n    checkSectionCompleted('pokemons', pSelected);\r\n    checkSectionCompleted('movesets', msAssigned);\r\n    checkSectionCompleted('abilities', aAssigned);\r\n    checkSectionCompleted('items', iAssigned);\r\n\r\n    setSelectionsMade(s => { return {\r\n      ...s,\r\n      pokemons: pSelected,\r\n      movesets: msAssigned,\r\n      abilities: aAssigned,\r\n      items: iAssigned\r\n    }});\r\n  }, [pokemonOptions, checkSectionCompleted]); \r\n\r\n  // Respond to changes in selections for moves.\r\n  useEffect (() => {\r\n    let mSelected = [];\r\n    let mSelectedAmount = 0;\r\n\r\n    movesetOptions.forEach(ms => {\r\n      let msSelected = ms.filter(m => m.selected).length;\r\n      mSelected.push(msSelected);\r\n      mSelectedAmount = mSelectedAmount + msSelected;\r\n    });\r\n\r\n    checkSectionCompleted('moves', mSelectedAmount);\r\n\r\n    setSelectionsMade(s => {return {...s, moves: mSelected}});\r\n  }, [movesetOptions, checkSectionCompleted]);    \r\n\r\n  // Respond to changes in slections/assignments for team preview.\r\n  useEffect (() => {\r\n    let tPreview = [];\r\n    let pPreview = null;\r\n\r\n    pokemonOptions.forEach((po, i) => {\r\n      pPreview = null;\r\n\r\n      if(po.selected && \r\n        po.moveset != null && selectionsMade.moves[po.moveset] >= team.selectionsNeeded.moves &&\r\n        po.ability != null && \r\n        po.item != null){\r\n\r\n          pPreview = {\r\n            pokemon: po,\r\n            moveset: movesetOptions[po.moveset],\r\n            ability: abilityOptions[po.ability],\r\n            item: itemOptions[po.item]\r\n          }\r\n\r\n          tPreview.push(pPreview);\r\n      }\r\n    })\r\n\r\n    while(tPreview.length < team.selectionsNeeded.pokemons)\r\n      tPreview.push(null);\r\n\r\n    setPokemonPreviews(tPreview)\r\n  }, [pokemonOptions, movesetOptions, abilityOptions, itemOptions, selectionsMade]);\r\n\r\n  // ----- HELPER FUNCTIONS -----  \r\n  // Get total stats for a pokemon.\r\n  const getTotalStats = (stats) => {\r\n    let total = 0;\r\n    stats.forEach(s => {\r\n        total = total + s.base_stat; \r\n    });        \r\n    return total;\r\n  }  \r\n\r\n  const getStatDisplay = (name) => {\r\n    switch(name){\r\n      case \"hp\":\r\n        return \"HP\";\r\n      case \"attack\":\r\n        return \"Atk\";\r\n        case \"defense\":\r\n          return \"Def\";\r\n          case \"special-attack\":\r\n          return \"SpA\";\r\n          case \"special-defense\":\r\n          return \"SpD\";\r\n          case \"speed\":\r\n          return \"Spe\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  const checkDuplicatedName = (currentObjects, newObjectName) => {\r\n    return currentObjects.find(co => co.name === newObjectName)\r\n  }\r\n\r\n  // Filter by keywords.\r\n  const FindKeywords = (string, separator, filter, allow) => {\r\n    let found = false;\r\n    found = string.split(separator).some(keyword => filter.includes(keyword))\r\n    if(found && allow)\r\n      found = !string.split(separator).some(keyword => allow.includes(keyword))\r\n    return found;\r\n  }\r\n\r\n  const capitalizeWords = (text, separator) => {\r\n    return text.split(separator).map((word) => {return word[0].toUpperCase() + word.substring(1)}).join(\" \");\r\n  }\r\n\r\n  const upperCaseWords = (string) => {\r\n    return string.replace(/\\b\\w/g, l => l.toUpperCase())\r\n  }      \r\n\r\n  // ----- METADATA -----\r\n  // Set pokemon nicknames.\r\n  /* const setNickname = (pokemonId, nickname) => {    \r\n    let options = pokemonOptions;\r\n    options = options.map(p => {      \r\n      if(p.id === pokemonId){\r\n        p.nickname = nickname;\r\n      }\r\n      return p;\r\n    });\r\n    setPokemonOptions(options);\r\n  } */\r\n\r\n  // ----- OTHERS -----\r\n  // Show a toast notification.\r\n  const setToast = (title, content, type) => {    \r\n    toast.custom((t) => (\r\n      <div onClick={() => toast.dismiss(t.id)}\r\n        className={`cursor-pointer max-w-md w-full flex flex-col gap-2 bg-white p-2 rounded-md pointer-events-auto flex border-2 border-gray-200 hover:bg-gray-200 transition duration-150 ease-in-out \r\n        ${t.visible ? 'animate-enter' : 'animate-leave'}\r\n        ${type.success ? 'bg-green-100 border-green-200 ring ring-green-100' : ''}\r\n        ${type.warning ? 'bg-yellow-100 border-yellow-200 ring ring-yellow-100' : ''}\r\n        ${type.error ? 'bg-red-200 border-red-300 ring ring-red-200' : ''}`}\r\n      >\r\n        <div className=\"flex justify-between items-center w-full\">\r\n          <p className=\"text-base capitalize\">{title}</p>\r\n          {/* <HiOutlineX className=\"cursor-pointer text-2xl hover:text-gray-600\" onClick={() => toast.dismiss(t.id)}/> */}\r\n        </div>          \r\n        <div className=\"flex text-sm\">\r\n          <p>{content}</p>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  // Create an export of the team.\r\n  const exportTeam = () => {\r\n    if(Object.values(sectionsCompleted).every(val => val)) {\r\n      let exportText = \"\";         \r\n      pokemonOptions.forEach(p => {\r\n        if(p.selected){\r\n\r\n          let ability = capitalizeWords(abilityOptions[p.ability].name, \"-\");\r\n          if(abilityOptions[p.ability].name.includes(\"as-one\")){\r\n            let abilityKeywords = ability.split(\" \");\r\n            abilityKeywords[abilityKeywords.length - 1] = \"(\" + abilityKeywords[abilityKeywords.length - 1] + \")\";\r\n            ability = abilityKeywords.join(\" \");\r\n          };\r\n\r\n          let moveset = movesetOptions[p.moveset].filter(m => m.selected).map(m => {\r\n            if(m.name === \"hidden-power\"){\r\n              return m.name + \" [\" + capitalizeWords(m.type.name, \"-\") + \"]\";\r\n            }\r\n            else return m.name;\r\n          });\r\n\r\n          exportText += capitalizeWords(p.name, \"-\");\r\n          if(p.gender !== \"genderless\"){\r\n            exportText += \" (\" + (p.gender === \"male\" ? \"M\" : \"F\") + \")\";\r\n          }\r\n          exportText += \" @ \" + capitalizeWords(itemOptions[p.item].name, \"-\");\r\n          exportText += \"\\r\\nAbility: \" + ability;\r\n          exportText += \"\\r\\nLevel: \" + p.level;\r\n          if(p.shiny)\r\n            exportText += \"\\r\\nShiny: Yes\";\r\n          exportText += \"\\r\\nEVs:\";\r\n          p.stats.forEach(s => {\r\n            if(s.ev != null && s.ev > 0)\r\n              exportText += \" \" + s.ev + \" \" + getStatDisplay(s.stat.name) + \" /\";\r\n          });\r\n          exportText = exportText.slice(0, -1);\r\n          exportText += \"\\r\\n\" + capitalizeWords(p.nature.name, \"-\") + \" Nature\";\r\n          exportText += \"\\r\\nIVs:\";\r\n          p.stats.forEach(s => {\r\n            if(s.iv != null && s.iv < 31)\r\n              exportText += \" \" + s.iv + \" \" + getStatDisplay(s.stat.name) + \" /\";\r\n          });\r\n          exportText = exportText.slice(0, -1);\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[0], \"-\");\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[1], \"-\");\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[2], \"-\");\r\n          exportText += \"\\r\\n- \" + capitalizeWords(moveset[3], \"-\");    \r\n          exportText += \"\\r\\n\\r\\n\";                             \r\n        }\r\n      });\r\n      copyTextToClipboard(exportText);      \r\n    }\r\n    else {\r\n      setToast('Actions', 'The team is not completely built!', {warning: true});      \r\n    }\r\n  }  \r\n\r\n  // Copy the exported team to clipboard.\r\n  function fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();  \r\n    try {\r\n      var successful = document.execCommand(\"copy\");\r\n      if(successful)\r\n        setToast('Actions', 'Team copied to clipboard!', {success: true});      \r\n      else\r\n        setToast('Actions', 'Error copying the team to clipboard!', {error: true});\r\n    } catch (err) {\r\n      setToast('Actions', 'Unable to copy the team to clipboard!', {error: true});\r\n    }  \r\n    document.body.removeChild(textArea);\r\n  }\r\n  function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n      fallbackCopyTextToClipboard(text);\r\n      return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(\r\n      function() {\r\n        setToast('Actions', 'Team copied to clipboard!', {success: true});\r\n      },\r\n      function(err) {\r\n        setToast('Actions', 'Error copying the team to clipboard!', {error: true});\r\n      }\r\n    );\r\n  }\r\n\r\n  // Render.\r\n  return (        \r\n    <TeamBuilderContext.Provider value={{\r\n      pokemonOptions: pokemonOptions,\r\n      selectionsNeeded: team.selectionsNeeded,\r\n      selectionsMade: selectionsMade,\r\n      sectionsCompleted: sectionsCompleted,\r\n      selectPokemon: selectPokemon,\r\n      selectMove: selectMove,\r\n      assignPokemon: assignPokemon,\r\n      //setNickname: setNickname\r\n    }}>\r\n      <div className=\"bg-gray-50 bg-unown-pattern-tiled min-h-screen\">        \r\n        <Router>\r\n          <div className=\"flex w-full\">\r\n            <div className=\"h-screen sticky top-0\">\r\n              <Sidebar />\r\n            </div>\r\n            <div className=\"w-full flex flex-col\">\r\n              <Switch>          \r\n                <Route path=\"/format\">\r\n                  <Format />\r\n                </Route>\r\n                <Route path=\"/builder\">        \r\n                  <TeamBuilder\r\n                    loading={loading}\r\n                    randomOptions={team.randomOptions}\r\n                    pokemonPreviews={pokemonPreviews}\r\n                    pokemonOptions={pokemonOptions}\r\n                    movesetOptions={movesetOptions}\r\n                    abilityOptions={abilityOptions}\r\n                    itemOptions={itemOptions}\r\n                    generating={generating}\r\n                    generateOptions={generateOptions}                \r\n                    clearChoices={clearChoices}\r\n                    exportTeam={exportTeam}                  \r\n                  /> \r\n                  <Tooltips />                                  \r\n                </Route>\r\n                <Route path=\"/about\">\r\n                  <About />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Home />\r\n                </Route>          \r\n              </Switch>\r\n              <Footer />\r\n            </div>\r\n          </div>           \r\n        </Router>      \r\n      </div>\r\n      <Toaster\r\n        position=\"bottom-right\"\r\n        reverseOrder={false}\r\n        gutter={8}\r\n      />           \r\n    </TeamBuilderContext.Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}